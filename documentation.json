{
    "pipes": [
        {
            "name": "CategoryNamePipe",
            "id": "pipe-CategoryNamePipe-a135a60a09e46e52562a537eb622046322ceb0c4e4b936ef95b5c9c50f3296ed32549251ba6359197e3a90535cdbe733ca897ff1e04eaea428c52d39e82d6e35",
            "file": "src/app/pipes/category-name/category-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "category",
                            "type": "Categories",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Categories",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "categoryName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { CATEGORY_NAME, Categories, EnumCategories } from '~types/product';\n\n@Pipe({\n  name: 'categoryName'\n})\nexport class CategoryNamePipe implements PipeTransform {\n  transform(category: Categories) {\n    return CATEGORY_NAME[EnumCategories[category]];\n  }\n}\n"
        },
        {
            "name": "GetWordPipe",
            "id": "pipe-GetWordPipe-dae820aec0c13a906ed6a30edfe73c72f03a620b1db216b75a8dc1fbf3449360742246b8ab1104c5c85f77a5f85007fd500727eeef402324daba1c49ff1c40ad",
            "file": "src/app/pipes/get-word/get-word.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "getWord",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getWord',\n})\nexport class GetWordPipe implements PipeTransform {\n  transform(value: string, index: number): string {\n    const matches = value.match(/\\S+/g);\n    const result = matches && matches[index] ? matches[index] : value;\n    return result;\n  }\n}\n"
        },
        {
            "name": "MaxNumberPipe",
            "id": "pipe-MaxNumberPipe-1b2b8f230a2513f8eead6411ec40451aa837b8b32e63d665cafdbf174cfad452a0630b86a9d0ced416a14db846e86fd13ca6d4c09b3f30ed46925f6b3f343393",
            "file": "src/app/pipes/max-number/max-number.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "postFix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "postFix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "maxNumber",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maxNumber'\n})\nexport class MaxNumberPipe implements PipeTransform {\n  transform(value: number, maxValue: number, postFix = ''): string {\n    if (value <= maxValue) {\n      return `${value}`;\n    }\n    return `${maxValue}${postFix}`;\n  }\n}\n"
        },
        {
            "name": "ProductBadgeColorPipe",
            "id": "pipe-ProductBadgeColorPipe-51aac705edac9e59f5b9c1234999c0add03cd10e49bdb0f6abec262f906ea76c983baa521ceba5fba5c9a88c5b216444264dee1a392e7857f387c801936381b6",
            "file": "src/app/pipes/product-badge-color/product-badge-color.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "product",
                            "type": "Pick<IProduct | \"price\" | \"isNew\">",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"pink\" | \"green\" | null",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Pick<IProduct | \"price\" | \"isNew\">",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productBadgeColor",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IProduct } from '~types/product';\n\n@Pipe({\n  name: 'productBadgeColor'\n})\nexport class ProductBadgeColorPipe implements PipeTransform {\n  transform(product: Pick<IProduct, 'price' | 'isNew'>): 'pink' | 'green' | null {\n    return product?.isNew ? 'pink' : product.price.discount ? 'green' : null;\n  }\n}\n"
        },
        {
            "name": "ProductBadgeTextPipe",
            "id": "pipe-ProductBadgeTextPipe-5758e9eec95ac6c57a65a51c4c780f63dc5cfa91c3f507dc983123aee8e9a76c8e6d8da2b0ced19bf129fe83195378e6c8355d3e5f22afa5c6cbe5fa05553ff5",
            "file": "src/app/pipes/product-badge-text/product-badge-text.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "product",
                            "type": "Pick<IProduct | \"price\" | \"isNew\">",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"new\" | \"sale\" | string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Pick<IProduct | \"price\" | \"isNew\">",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productBadgeText",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { IProduct } from '~types/product';\n\n@Pipe({\n  name: 'productBadgeText'\n})\nexport class ProductBadgeTextPipe implements PipeTransform {\n  transform(product: Pick<IProduct, 'price' | 'isNew'>): 'new' | 'sale' | '' {\n    return product?.isNew ? 'new' : product.price.discount ? 'sale' : '';\n  }\n}\n"
        },
        {
            "name": "ProductColorNamePipe",
            "id": "pipe-ProductColorNamePipe-a27742e5a63939e2c0cc13e279fbe8d7c226ef93ec853ce773b7a905e3fa914d78760d8d153d7961559f84a1caaae66675231e409604c5374d0547e193592315",
            "file": "src/app/pipes/product-color-name/product-color-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Color",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColorName",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Color",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productColorName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { COLOR_NAME, Color, ColorName, EnumColor } from '~types/product';\n\n@Pipe({\n  name: 'productColorName'\n})\nexport class ProductColorNamePipe implements PipeTransform {\n  transform(value: Color): ColorName {\n    return COLOR_NAME[EnumColor[value]] ?? value;\n  }\n}\n"
        },
        {
            "name": "ProductFeaturesPipe",
            "id": "pipe-ProductFeaturesPipe-35b9230a0d9c9f1134e2f4a097f265648c330d5680c2ad85505d2d6059af41d890287b206d994873475c57c85256cfb92252e2958b69985fde5ada89c3e78daf",
            "file": "src/app/pipes/product-features/product-features.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ProductFeatureName",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productFeatures",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  EnumProductFeature,\n  PRODUCT_FEATURE_NAME,\n  ProductFeature,\n  ProductFeatureName\n} from '~types/product';\n\n@Pipe({\n  name: 'productFeatures'\n})\nexport class ProductFeaturesPipe implements PipeTransform {\n  transform(value: string): ProductFeatureName {\n    return PRODUCT_FEATURE_NAME[EnumProductFeature[<ProductFeature>value]] ?? value;\n  }\n}\n"
        },
        {
            "name": "ProductFlowerNamePipe",
            "id": "pipe-ProductFlowerNamePipe-f6f5818ff1fdb259863fd06e227996aee2c0fa1c9d5a318cfebc0dab23a08503d8af39214e710d5d45e3447b3427f3a5f90a7352c56ba920aa7f392bf8e16e2e",
            "file": "src/app/pipes/product-flower-name/product-flower-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowerName",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productFlowerName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { EnumFlower, FLOWER_NAME, Flower, FlowerName } from '~types/product';\n\n@Pipe({\n  name: 'productFlowerName'\n})\nexport class ProductFlowerNamePipe implements PipeTransform {\n  transform(value: string): FlowerName {\n    return FLOWER_NAME[EnumFlower[<Flower>value]] ?? value;\n  }\n}\n"
        },
        {
            "name": "ProductFormatNamePipe",
            "id": "pipe-ProductFormatNamePipe-f6f4e3ecb2ff330a8fdef82c92aa79644ca600e53dd1f4cd9407951ece7547717f4a1d3a1aadac3cb84187607e6a4da13d68e09771d69a19e9eecbf1631b63e8",
            "file": "src/app/pipes/product-format-name/product-format-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormatName",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productFormatName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { EnumFormat, FORMAT_NAME, Format, FormatName } from '~types/product';\n\n@Pipe({\n  name: 'productFormatName'\n})\nexport class ProductFormatNamePipe implements PipeTransform {\n  transform(value: string): FormatName {\n    return FORMAT_NAME[EnumFormat[<Format>value]] ?? value;\n  }\n}\n"
        },
        {
            "name": "ProductLightNamePipe",
            "id": "pipe-ProductLightNamePipe-f0bfc622c87c36c3f76b411c7792c6e455fe14473de631334810574f23e65e0d37cb9ae656a97bdba95b5968fdf3ea53c1cc9b8ee778302cbefe5b528708378f",
            "file": "src/app/pipes/product-light-name/product-light-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "LightName",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productLightName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { EnumLight, LIGHT_NAME, Light, LightName } from '~types/product';\n\n@Pipe({\n  name: 'productLightName'\n})\nexport class ProductLightNamePipe implements PipeTransform {\n  transform(value: string): LightName {\n    return LIGHT_NAME[EnumLight[<Light>value]] ?? value;\n  }\n}\n"
        },
        {
            "name": "ProductPriceNamePipe",
            "id": "pipe-ProductPriceNamePipe-4f351a49f6ae8712c5f5a22acce540cb9f3797807fdc00af14c799caf5219c8bb33d2fa37ec39f6140d82f00f8ca84569d529e1e3f27a70a461da24a7421af61",
            "file": "src/app/pipes/product-price-name/product-price-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "PriceName",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "productPriceName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { EnumPrice, PRICE_NAME, Price, PriceName } from '~types/product';\n\n@Pipe({\n  name: 'productPriceName'\n})\nexport class ProductPriceNamePipe implements PipeTransform {\n  transform(value: string): PriceName {\n    return PRICE_NAME[EnumPrice[<Price>value]] ?? value;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "EventHandlerArgs",
            "id": "interface-EventHandlerArgs-a01c063feed18e98b56cf94995b086870d5c46385dfdc90c202ce1208c2c85efb80618971ccfc43998a4cde6c668314b63ad40a82adeecafaf3f438ed8b7f057",
            "file": "src/app/directives/parallax/parallax.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy } from '@angular/core';\nimport { Observable, Subject, takeUntil, throttleTime } from 'rxjs';\nimport {\n  IPointerEvent,\n  PointerEventService\n} from 'src/app/services/events/pointer/pointer-event.service';\nimport { TargetVariant } from './types';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\ninterface EventHandlerArgs {\n  element: HTMLElement;\n  bgOffsetX: number;\n  bgOffsetY: number;\n  pointerEvent: IPointerEvent;\n}\n\n@Directive({\n  selector: '[appParallax]'\n})\nexport class ParallaxDirective implements AfterViewInit, OnDestroy {\n  private destroySubject: Subject<null>;\n  private durationAnim = 0.5;\n  private pointerEvent$: Observable<IPointerEvent>;\n  @Input() appParallaxBgOffsetX = 0;\n  @Input() appParallaxBgOffsetY = 0;\n  @Input() appParallaxTargetVariant: TargetVariant = 'background';\n  @Input() appParallaxScale = 1;\n  @Input() appParallaxThrottleTime = 100;\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    pointerEventService: PointerEventService,\n    private elRef: ElementRef<HTMLElement>\n  ) {\n    this.destroySubject = new Subject();\n    this.pointerEvent$ = pointerEventService.pointermoveObservable$;\n  }\n\n  get host(): HTMLElement {\n    return this.elRef.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    this.setParallax(\n      this.host,\n      this.appParallaxBgOffsetX,\n      this.appParallaxBgOffsetY,\n      this.durationAnim\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.pointerEvent$;\n  }\n\n  private setParallax(\n    element: HTMLElement,\n    bgOffsetX: number,\n    bgOffsetY: number,\n    durationAnim: number = this.durationAnim\n  ): void {\n    this.setPreparatoryStyles(element, durationAnim);\n\n    this.pointerEvent$\n      .pipe(takeUntil(this.destroySubject), throttleTime(this.appParallaxThrottleTime))\n      .subscribe((pointerEvent) => {\n        this.backgroundMove({ element, bgOffsetX, bgOffsetY, pointerEvent });\n      });\n  }\n\n  private setPreparatoryStyles(element: HTMLElement, durationAnim: number): void {\n    if (this.appParallaxTargetVariant === 'background') {\n      element.style.setProperty('transition', `background-position ${durationAnim}s ease-out`);\n    }\n    if (this.appParallaxTargetVariant === 'img') {\n      element.style.setProperty('transition', `transform ${durationAnim}s ease-out`);\n    }\n  }\n\n  private backgroundMove({ element, bgOffsetX, bgOffsetY, pointerEvent }: EventHandlerArgs) {\n    if (pointerEvent.pointerType !== 'mouse') {\n      return;\n    }\n    const offsetX = (pointerEvent.clientX / this.window.innerWidth) * bgOffsetX - bgOffsetX;\n    const offsetY = (pointerEvent.clientY / this.window.innerHeight) * bgOffsetY - bgOffsetY;\n\n    if (this.appParallaxTargetVariant === 'background') {\n      element.style.setProperty('background-position', `${offsetX}px ${offsetY}px`);\n    }\n    if (this.appParallaxTargetVariant === 'img') {\n      element.style.setProperty(\n        'transform',\n        `translate(${offsetX}px, ${offsetY}px) scale(${this.appParallaxScale})`\n      );\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "bgOffsetX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "bgOffsetY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "pointerEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IAddress",
            "id": "interface-IAddress-05392974e95e00bcacaacb1a8d23e0fcc85b391a65d1f5c05b82461f3afe701daf883a0b7c11ae34b6b3374abec304363eb361c800f7de8a607d89570f61cc5e",
            "file": "src/app/pages/order/component/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IOrderData {\r\n  user: {\r\n    firstName: string;\r\n    phone: string;\r\n    email: string;\r\n    recipient: {\r\n      firstName: string;\r\n      phone: string;\r\n    };\r\n    comment: string;\r\n  };\r\n  delivery: {\r\n    [K in keyof IDelivery]: IDelivery[K];\r\n  };\r\n  payment: Payment | '';\r\n}\r\n\r\nexport interface IDelivery {\r\n  method: 'courier' | 'pickup';\r\n  time: string;\r\n}\r\n\r\nexport interface IAddress {\r\n  city: 'minsk' | 'gomel';\r\n  street: string;\r\n  building: string;\r\n  house: string;\r\n  flat: string;\r\n}\r\n\r\nexport type Payment =\r\n  | 'card'\r\n  | 'cash'\r\n  | 'applePay'\r\n  | 'googlePay'\r\n  | 'cryptoCurrency'\r\n  | 'checkingAccount';\r\n",
            "properties": [
                {
                    "name": "building",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"minsk\" | \"gomel\"",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "flat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "house",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IBreadcrumb",
            "id": "interface-IBreadcrumb-c1e7f89585ab8401d9f4f05ba327838cdb0e87514f182ab667869cf6353a0537ce6268cab1cb165ea660f5f26cfc949aaddf46a0726a86cbf9779ff47aed423f",
            "file": "src/app/components/breadcrumbs/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Params } from '@angular/router';\r\n\r\nexport interface IBreadcrumb {\r\n  title: string;\r\n  url?: string;\r\n  params?: Params;\r\n}\r\n",
            "properties": [
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICartItem",
            "id": "interface-ICartItem-92ef952e2954d1efd4a6c6a194208a824204b0c28f4dcc96b7248d02adde27c4e78cead3dc98c7e0dccdfe1506fce9fc10e09dbf543acda72d9ef75dd5d025ad",
            "file": "src/app/services/cart-storage/cart-storage.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IProduct } from '~types/product';\nimport { StorageService } from '../storage/storage.service';\n\nexport interface ICartItem {\n  product: IProduct;\n  count: number;\n}\nexport type Cart = ICartItem[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartStorageService {\n  private readonly key = <const>'cart';\n\n  constructor(private storageService: StorageService) {}\n\n  public getProducts(): Cart {\n    const cartData = this.storageService.getItem(this.key);\n    return cartData && Array.isArray(cartData) ? cartData : this.createCart();\n  }\n\n  public addProduct({ product, count }: ICartItem): Cart {\n    const cart: Cart = this.getProducts();\n\n    if (cart.length) {\n      if (count > 0) {\n        return this.addToExistingCart(cart, { product, count });\n      }\n      this.deleteFromStorage(cart, product.id);\n    }\n    return this.addToEmptyCart(cart, { product, count });\n  }\n\n  public replaceProductCount(id: number, count: number): Cart {\n    const cart = this.getProducts();\n\n    if (cart.length) {\n      const itemindex = cart.findIndex((cartItem) => cartItem.product.id === id);\n\n      if (itemindex === -1) {\n        return cart;\n      }\n      cart[itemindex].count = count;\n      this.storageService.setItem(this.key, cart);\n    }\n    return cart;\n  }\n\n  public deleteProduct(id: number): Cart {\n    const cart: Cart = this.getProducts();\n\n    if (cart.length) {\n      return this.deleteFromStorage(cart, id);\n    }\n    return cart;\n  }\n\n  public clearAll(): Cart {\n    this.storageService.setItem(this.key, []);\n    return [];\n  }\n\n  private createCartItem(product: IProduct, count: number) {\n    return { product, count };\n  }\n\n  private createCart(): Cart {\n    this.storageService.setItem(this.key, []);\n    return [];\n  }\n\n  private addToEmptyCart(cart: Cart, { product, count }: ICartItem): Cart {\n    cart.push({ product, count });\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n\n  private addToExistingCart(cart: Cart, { product, count }: ICartItem): Cart {\n    const productIndex: number = cart.findIndex(\n      (itemInCart) => itemInCart.product.id === product.id\n    );\n    if (productIndex === -1) {\n      cart.push(this.createCartItem(product, count));\n    } else {\n      cart[productIndex].count = Number(cart[productIndex].count) + count;\n    }\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n\n  private deleteFromStorage(cart: Cart, id: number): Cart {\n    const productIndex = cart.findIndex((itemInCart) => itemInCart.product.id === id);\n\n    if (productIndex !== -1) {\n      cart.splice(productIndex, 1);\n    }\n\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n}\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICategory",
            "id": "interface-ICategory-40c0acedb63eb08d36c53ee092857180f8d795932d8ef2d8054e2466f29e6a15b852d20a8e902467470d5b39b94029716be962eec144ea2a043a06892efb3779",
            "file": "src/app/components/category-filter/category-filter.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CategoriesParams } from '~types/product';\n\nexport interface ICategory {\n  title: string;\n  paramValue: CategoriesParams;\n}\nexport type DataIndex = string;\n\n@Component({\n  selector: 'app-category-filter',\n  templateUrl: './category-filter.component.html',\n  styleUrls: ['./category-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CategoryFilterComponent {\n  @Input() categories: ICategory[] = [];\n  @Input() activeCategories: Set<CategoriesParams> = new Set([]);\n  @Output() emitSelectCategory: EventEmitter<CategoriesParams> = new EventEmitter();\n\n  protected isActiveCategory(paramValue: CategoriesParams): boolean {\n    return this.activeCategories.has(paramValue);\n  }\n\n  protected handlerSelectCategory(ev: Partial<MouseEvent>): void {\n    const target = ev.target;\n    if (!target || !(target instanceof HTMLElement) || !target.getAttribute('data-param')) {\n      return;\n    }\n    const param = target.getAttribute('data-param');\n    if (param === null) {\n      return;\n    }\n    this.emitSelectCategory.emit(<CategoriesParams>param);\n  }\n}\n",
            "properties": [
                {
                    "name": "paramValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CategoriesParams",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICheckboxesGroup",
            "id": "interface-ICheckboxesGroup-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
            "file": "src/app/components/filters-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IRangeValue } from '~components/range/types';\r\nimport { Color, Flower, Format, Light } from '~types/product';\r\n\r\nexport interface IFiltersData extends ICheckboxesGroup, Record<string, unknown> {\r\n  price: IRangeValue;\r\n}\r\nexport interface ICheckboxesGroup {\r\n  light: Light[];\r\n  color: Color[];\r\n  format: Format[];\r\n  flower: Flower[];\r\n}\r\n\r\nexport type TCheckboxesData = Light[] | Color[] | Format[] | Flower[];\r\n\r\nexport type CheckboxControlData = boolean | null;\r\n\r\nexport interface ICheckboxesGroupData {\r\n  [key: string]: CheckboxControlData;\r\n}\r\n\r\nexport interface IFiltersFormData {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue;\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "flower",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Flower[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "format",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Format[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "light",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Light[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICheckboxesGroupData",
            "id": "interface-ICheckboxesGroupData-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
            "file": "src/app/components/filters-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IRangeValue } from '~components/range/types';\r\nimport { Color, Flower, Format, Light } from '~types/product';\r\n\r\nexport interface IFiltersData extends ICheckboxesGroup, Record<string, unknown> {\r\n  price: IRangeValue;\r\n}\r\nexport interface ICheckboxesGroup {\r\n  light: Light[];\r\n  color: Color[];\r\n  format: Format[];\r\n  flower: Flower[];\r\n}\r\n\r\nexport type TCheckboxesData = Light[] | Color[] | Format[] | Flower[];\r\n\r\nexport type CheckboxControlData = boolean | null;\r\n\r\nexport interface ICheckboxesGroupData {\r\n  [key: string]: CheckboxControlData;\r\n}\r\n\r\nexport interface IFiltersFormData {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "CheckboxControlData",
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "ICorporateUser",
            "id": "interface-ICorporateUser-8ccf6d585a1057533622ddd8ad47d91d381b5c3fc118ecf5aaafa63f7d9d3e025bcd07b68b1b007e4a44bee8af189278c74523f862af906e0a82ffe5be4659a5",
            "file": "src/app/pages/corporate-clients/component/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ICorporateUser {\r\n  corporateName: string;\r\n  postalAddress: string;\r\n  name: string;\r\n  phone: string;\r\n  bouquetPrice: string;\r\n  email: string;\r\n  unp: string;\r\n  paymentAccount: string;\r\n  bankCode: string;\r\n  numberRequestsMonth: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "bankCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "bouquetPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "corporateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "numberRequestsMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "paymentAccount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "postalAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "unp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IDelivery",
            "id": "interface-IDelivery-05392974e95e00bcacaacb1a8d23e0fcc85b391a65d1f5c05b82461f3afe701daf883a0b7c11ae34b6b3374abec304363eb361c800f7de8a607d89570f61cc5e",
            "file": "src/app/pages/order/component/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IOrderData {\r\n  user: {\r\n    firstName: string;\r\n    phone: string;\r\n    email: string;\r\n    recipient: {\r\n      firstName: string;\r\n      phone: string;\r\n    };\r\n    comment: string;\r\n  };\r\n  delivery: {\r\n    [K in keyof IDelivery]: IDelivery[K];\r\n  };\r\n  payment: Payment | '';\r\n}\r\n\r\nexport interface IDelivery {\r\n  method: 'courier' | 'pickup';\r\n  time: string;\r\n}\r\n\r\nexport interface IAddress {\r\n  city: 'minsk' | 'gomel';\r\n  street: string;\r\n  building: string;\r\n  house: string;\r\n  flat: string;\r\n}\r\n\r\nexport type Payment =\r\n  | 'card'\r\n  | 'cash'\r\n  | 'applePay'\r\n  | 'googlePay'\r\n  | 'cryptoCurrency'\r\n  | 'checkingAccount';\r\n",
            "properties": [
                {
                    "name": "method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"courier\" | \"pickup\"",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IEmitAddToCart",
            "id": "interface-IEmitAddToCart-e83ae1325ce3a482cb2a458cdf2a6db356f5ee1e786a5126bc9d8c67131225b132f4ce5f38fd06a478d76647fa3c332acccba7c0e4545a320c0177ee9a970e2e",
            "file": "src/app/components/cart-menu/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IProduct } from '~types/product';\r\n\r\nexport interface IEmitAddToCart {\r\n  product: IProduct;\r\n  count: number;\r\n}\r\n\r\nexport interface IEmitChangeProductCount {\r\n  id: number;\r\n  count: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IEmitChangeProductCount",
            "id": "interface-IEmitChangeProductCount-e83ae1325ce3a482cb2a458cdf2a6db356f5ee1e786a5126bc9d8c67131225b132f4ce5f38fd06a478d76647fa3c332acccba7c0e4545a320c0177ee9a970e2e",
            "file": "src/app/components/cart-menu/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IProduct } from '~types/product';\r\n\r\nexport interface IEmitAddToCart {\r\n  product: IProduct;\r\n  count: number;\r\n}\r\n\r\nexport interface IEmitChangeProductCount {\r\n  id: number;\r\n  count: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IEventHandlerArgs",
            "id": "interface-IEventHandlerArgs-102db81f4c0c0a8fcf287de46eec17e614da509de552515b54c817ab8d3a9343f88b1d96b86ed89aaa64a8a9f40d1c86053c1c688ffccf2e9a80e27d8fb3b71b",
            "file": "src/app/components/dropdown/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type Trigger = 'click' | 'hover';\r\nexport type UiEvent = MouseEvent | PointerEvent;\r\nexport type IsCloseBy = 'mouseleave' | null;\r\nexport interface IEventHandlerArgs {\r\n  event?: UiEvent;\r\n  value?: boolean;\r\n}\r\nexport type ContentPosition = 'left' | 'right' | 'center';\r\n",
            "properties": [
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiEvent",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IFeedbackData",
            "id": "interface-IFeedbackData-996829120ce007d4d5e40e2ef5ba2eb57fcebe90a579d5dba81c9941db1a1e10e1be8e59906e1e6053a7cab127477ccb3c8bdfbdf0e725ad3aa50e3de3ecc0c4",
            "file": "src/app/components/feedback-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IFeedbackData {\r\n  name: string;\r\n  phone: string;\r\n  comment: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IFiltersData",
            "id": "interface-IFiltersData-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
            "file": "src/app/components/filters-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IRangeValue } from '~components/range/types';\r\nimport { Color, Flower, Format, Light } from '~types/product';\r\n\r\nexport interface IFiltersData extends ICheckboxesGroup, Record<string, unknown> {\r\n  price: IRangeValue;\r\n}\r\nexport interface ICheckboxesGroup {\r\n  light: Light[];\r\n  color: Color[];\r\n  format: Format[];\r\n  flower: Flower[];\r\n}\r\n\r\nexport type TCheckboxesData = Light[] | Color[] | Format[] | Flower[];\r\n\r\nexport type CheckboxControlData = boolean | null;\r\n\r\nexport interface ICheckboxesGroupData {\r\n  [key: string]: CheckboxControlData;\r\n}\r\n\r\nexport interface IFiltersFormData {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue;\r\n}\r\n",
            "properties": [
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRangeValue",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "ICheckboxesGroup"
        },
        {
            "name": "IFiltersFormData",
            "id": "interface-IFiltersFormData-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
            "file": "src/app/components/filters-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IRangeValue } from '~components/range/types';\r\nimport { Color, Flower, Format, Light } from '~types/product';\r\n\r\nexport interface IFiltersData extends ICheckboxesGroup, Record<string, unknown> {\r\n  price: IRangeValue;\r\n}\r\nexport interface ICheckboxesGroup {\r\n  light: Light[];\r\n  color: Color[];\r\n  format: Format[];\r\n  flower: Flower[];\r\n}\r\n\r\nexport type TCheckboxesData = Light[] | Color[] | Format[] | Flower[];\r\n\r\nexport type CheckboxControlData = boolean | null;\r\n\r\nexport interface ICheckboxesGroupData {\r\n  [key: string]: CheckboxControlData;\r\n}\r\n\r\nexport interface IFiltersFormData {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-51f6f30cda491d25230cff3d7a256a89fa1f192de1420feeb4f7304b989b2684bb1bf47cfe725d11f9b6860fdfca95b21838dbf836708bec9131990f0939e938",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ICheckboxesGroupData | IRangeValue",
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "IFormData",
            "id": "interface-IFormData-a6694d6855847f055dc54949b98ee01ca702a05f7e0fd9ad229015c864f26ca46d6cad4f9022c86c9ab5d8441faf297112cf47f4ef08bc3fcdd3810b0d11bb2b",
            "file": "src/app/services/params/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ICheckboxesGroupData } from '~components/filters-form/types';\r\nimport { IRangeValue, RangeTarget } from '~components/range/types';\r\n\r\nexport interface IFormData<T = string> {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue | Array<T> | string | number;\r\n}\r\n\r\nexport type ObjectExceptRange = Omit<ICheckboxesGroupData, RangeTarget>;\r\n\r\nexport interface IQueryParams {\r\n  [key: string]: Array<string> | string | number;\r\n}\r\n\r\nexport interface IOptionsConvertParams {\r\n  isRemovedEmpty?: boolean;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-a6694d6855847f055dc54949b98ee01ca702a05f7e0fd9ad229015c864f26ca46d6cad4f9022c86c9ab5d8441faf297112cf47f4ef08bc3fcdd3810b0d11bb2b",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ICheckboxesGroupData | IRangeValue | Array | string | number",
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "IImages",
            "id": "interface-IImages-0b385bf106163f4e31cd37b0d5ef6e00c8527d9939703081c33b5860b534a68add70f710fb49d11b4fad9b99b59e4cbe93e14407c141147b07674890df6bac33",
            "file": "src/types/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Rating, RatingNotSet } from '~components/rating/types';\r\n\r\nexport interface IProduct {\r\n  id: number;\r\n  title: string;\r\n  images: IImages;\r\n  price: IPrice;\r\n  categories: Array<Categories>;\r\n  rating: ProductRating;\r\n  descr: string;\r\n  light: Light;\r\n  color: Color;\r\n  format: Format;\r\n  flowers: Array<Flower>;\r\n  isNew?: IsNew;\r\n}\r\n\r\ntype IsNew = boolean | null;\r\n\r\nexport enum EnumProductFeature {\r\n  price,\r\n  light,\r\n  color,\r\n  format,\r\n  flower\r\n}\r\n\r\nexport const PRODUCT_FEATURE_NAME = <const>{\r\n  [EnumProductFeature.price]: 'стоимость',\r\n  [EnumProductFeature.light]: 'по свету',\r\n  [EnumProductFeature.color]: 'по цвету',\r\n  [EnumProductFeature.format]: 'по формату',\r\n  [EnumProductFeature.flower]: 'по цветку'\r\n};\r\n\r\nexport type ProductFeature = keyof typeof EnumProductFeature;\r\nexport type ProductFeatureName =\r\n  (typeof PRODUCT_FEATURE_NAME)[(typeof EnumProductFeature)[keyof typeof EnumProductFeature]];\r\n\r\nexport type ProductRating = Rating | RatingNotSet;\r\nexport type ProductImage = string;\r\n\r\nexport interface IPrice {\r\n  value: number;\r\n  discount: number;\r\n}\r\n\r\nexport interface IImages {\r\n  main: ProductImage;\r\n  other: ProductImage[];\r\n}\r\n\r\nexport enum EnumFlower {\r\n  alstroemeria,\r\n  anthurium,\r\n  asparagus,\r\n  astilba,\r\n  astrance\r\n}\r\n\r\nexport const FLOWER_NAME = <const>{\r\n  [EnumFlower.alstroemeria]: 'Альстромерия',\r\n  [EnumFlower.anthurium]: 'Антуриум',\r\n  [EnumFlower.asparagus]: 'Аспарагус',\r\n  [EnumFlower.astilba]: 'Астильба',\r\n  [EnumFlower.astrance]: 'Астранция'\r\n};\r\n\r\nexport const FLOWER_PARAMS = <const>{\r\n  [EnumFlower.alstroemeria]: 'alstroemeria',\r\n  [EnumFlower.anthurium]: 'anthurium',\r\n  [EnumFlower.asparagus]: 'asparagus',\r\n  [EnumFlower.astilba]: 'astilba',\r\n  [EnumFlower.astrance]: 'astrance'\r\n};\r\n\r\nexport type Flower = keyof typeof EnumFlower;\r\nexport type FlowerName = (typeof FLOWER_NAME)[keyof typeof FLOWER_NAME];\r\nexport type FlowerParams = (typeof FLOWER_PARAMS)[keyof typeof FLOWER_PARAMS];\r\n\r\nexport enum EnumFormat {\r\n  bouquet,\r\n  vase,\r\n  envelope,\r\n  basket,\r\n  hatbox,\r\n  box\r\n}\r\n\r\nexport const FORMAT_NAME = <const>{\r\n  [EnumFormat.bouquet]: 'Букет',\r\n  [EnumFormat.vase]: 'В вазе',\r\n  [EnumFormat.envelope]: 'В конверте',\r\n  [EnumFormat.basket]: 'В корзине',\r\n  [EnumFormat.hatbox]: 'В шляпной коробке',\r\n  [EnumFormat.box]: 'В ящике'\r\n};\r\n\r\nexport const FORMAT_PARAMS = <const>{\r\n  [EnumFormat.bouquet]: 'bouquet',\r\n  [EnumFormat.vase]: 'vase',\r\n  [EnumFormat.envelope]: 'envelope',\r\n  [EnumFormat.basket]: 'basket',\r\n  [EnumFormat.hatbox]: 'hatbox',\r\n  [EnumFormat.box]: 'box'\r\n};\r\n\r\nexport type Format = keyof typeof EnumFormat;\r\nexport type FormatName = (typeof FORMAT_NAME)[keyof typeof FORMAT_NAME];\r\nexport type FormatParams = (typeof FORMAT_PARAMS)[keyof typeof FORMAT_PARAMS];\r\n\r\nexport enum EnumColor {\r\n  white,\r\n  yellow,\r\n  green,\r\n  red,\r\n  orange,\r\n  pink\r\n}\r\n\r\nexport const COLOR_NAME = <const>{\r\n  [EnumColor.white]: 'Белый',\r\n  [EnumColor.yellow]: 'Желтый',\r\n  [EnumColor.green]: 'Зеленый',\r\n  [EnumColor.red]: 'Красный',\r\n  [EnumColor.orange]: 'Оранжевый',\r\n  [EnumColor.pink]: 'Розовый'\r\n};\r\n\r\nexport const COLOR_PARAMS = <const>{\r\n  [EnumColor.white]: 'white',\r\n  [EnumColor.yellow]: 'yellow',\r\n  [EnumColor.green]: 'green',\r\n  [EnumColor.red]: 'red',\r\n  [EnumColor.orange]: 'orange',\r\n  [EnumColor.pink]: 'pink'\r\n};\r\n\r\nexport type Color = keyof typeof EnumColor;\r\nexport type ColorName = (typeof COLOR_NAME)[keyof typeof COLOR_NAME];\r\nexport type ColorParams = (typeof COLOR_PARAMS)[keyof typeof COLOR_PARAMS];\r\n\r\nexport enum EnumLight {\r\n  gentle,\r\n  bright\r\n}\r\nexport const LIGHT_NAME = <const>{\r\n  [EnumLight.gentle]: 'Нежный',\r\n  [EnumLight.bright]: 'Яркий'\r\n};\r\n\r\nexport const LIGHT_PARAMS = <const>{\r\n  [EnumLight.gentle]: 'gentle',\r\n  [EnumLight.bright]: 'bright'\r\n};\r\n\r\nexport type Light = keyof typeof EnumLight;\r\nexport type LightName = (typeof LIGHT_NAME)[keyof typeof LIGHT_NAME];\r\nexport type LightParams = (typeof LIGHT_PARAMS)[keyof typeof LIGHT_PARAMS];\r\n\r\nexport enum EnumPrice {\r\n  price\r\n}\r\nexport const PRICE_NAME = <const>{\r\n  [EnumPrice.price]: 'цена'\r\n};\r\n\r\nexport type Price = keyof typeof EnumPrice;\r\nexport type PriceName = (typeof PRICE_NAME)[keyof typeof PRICE_NAME];\r\n\r\nexport enum EnumCategories {\r\n  gypsophila,\r\n  chamomile,\r\n  chrysanthemum,\r\n  indoor,\r\n  mono,\r\n  prefabricated,\r\n  holiday,\r\n  compositions,\r\n  envelope,\r\n  postcards,\r\n  gifts,\r\n  driedFlowers,\r\n  balloon,\r\n  popular,\r\n  roses,\r\n  funeral,\r\n  packaging,\r\n  wedding,\r\n  interior,\r\n  autumn,\r\n  individual,\r\n  additionally\r\n}\r\n\r\nexport const CATEGORY_PARAMS = <const>{\r\n  [EnumCategories.gypsophila]: 'gypsophila',\r\n  [EnumCategories.chamomile]: 'chamomile',\r\n  [EnumCategories.chrysanthemum]: 'chrysanthemum',\r\n  [EnumCategories.indoor]: 'indoor',\r\n  [EnumCategories.mono]: 'mono',\r\n  [EnumCategories.holiday]: 'holiday',\r\n  [EnumCategories.compositions]: 'compositions',\r\n  [EnumCategories.envelope]: 'envelope',\r\n  [EnumCategories.postcards]: 'postcards',\r\n  [EnumCategories.gifts]: 'gifts',\r\n  [EnumCategories.driedFlowers]: 'driedFlowers',\r\n  [EnumCategories.balloon]: 'balloon',\r\n  [EnumCategories.popular]: 'popular',\r\n  [EnumCategories.roses]: 'roses',\r\n  [EnumCategories.funeral]: 'funeral',\r\n  [EnumCategories.packaging]: 'packaging',\r\n  [EnumCategories.wedding]: 'wedding',\r\n  [EnumCategories.interior]: 'interior',\r\n  [EnumCategories.individual]: 'individual',\r\n  [EnumCategories.additionally]: 'additionally',\r\n  [EnumCategories.autumn]: 'autumn',\r\n  [EnumCategories.prefabricated]: 'prefabricated'\r\n};\r\n\r\nexport const CATEGORY_NAME = <const>{\r\n  [EnumCategories.gypsophila]: 'Букеты из гипсофил',\r\n  [EnumCategories.chamomile]: 'Букеты из ромашек',\r\n  [EnumCategories.chrysanthemum]: 'Букеты из хризантем',\r\n  [EnumCategories.indoor]: 'Комнатные цветы в горшках',\r\n  [EnumCategories.mono]: 'Монобукеты',\r\n  [EnumCategories.holiday]: 'Букеты на праздник',\r\n  [EnumCategories.compositions]: 'Композиции из букетов',\r\n  [EnumCategories.envelope]: 'Конверты',\r\n  [EnumCategories.postcards]: 'Откытки',\r\n  [EnumCategories.gifts]: 'Подарки',\r\n  [EnumCategories.driedFlowers]: 'Букеты из сухоцветов',\r\n  [EnumCategories.balloon]: 'Шары',\r\n  [EnumCategories.popular]: 'Популярное',\r\n  [EnumCategories.roses]: 'Букеты роз',\r\n  [EnumCategories.funeral]: 'Цветы на похороны',\r\n  [EnumCategories.packaging]: 'Упаковка подарков',\r\n  [EnumCategories.wedding]: 'Свдебные',\r\n  [EnumCategories.interior]: 'Интерьерные композиции',\r\n  [EnumCategories.individual]: 'Индивидуальный букет',\r\n  [EnumCategories.additionally]: 'Дополнительно',\r\n  [EnumCategories.autumn]: 'Осенние',\r\n  [EnumCategories.prefabricated]: 'Сборные'\r\n};\r\n\r\nexport type Categories = keyof typeof EnumCategories;\r\nexport type CategoriesName = (typeof CATEGORY_NAME)[keyof typeof CATEGORY_NAME];\r\nexport type CategoriesParams = (typeof CATEGORY_PARAMS)[keyof typeof CATEGORY_PARAMS];\r\n",
            "properties": [
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductImage",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "other",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductImage[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "INewReview",
            "id": "interface-INewReview-6b9c6aa905f1af0e3eaca695f3a5340a79f7eb97122aa3aac7731ae6f70eb526afb47f146ce546a10b48c8ef4eb96ca0da3fc811cc88f978b418aaf8c03b5ceb",
            "file": "src/app/components/review-form/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Rating, RatingNotSet } from '../rating/types';\r\nimport { IReview } from '../review/types';\r\n\r\nexport interface INewReview extends Pick<IReview, 'author' | 'comment'> {\r\n  rating: Rating | RatingNotSet;\r\n  email: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Rating | RatingNotSet",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Pick"
        },
        {
            "name": "INotify",
            "id": "interface-INotify-3746b72ce20fa73bd11327c56c49952ef8118e6af70da41a74cd1731c4d9490e60eee7f0889d92f0e408d2f64824d884576a0fc16a9f94a8985956fe5d657508",
            "file": "src/app/components/notify/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface INotify {\r\n  title: string;\r\n  text?: string;\r\n  type: NotifyType;\r\n}\r\n\r\nexport type NotifyType = 'error' | 'warn' | 'success';\r\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotifyType",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "INotifyWithId",
            "id": "interface-INotifyWithId-6eb884a27e372810a03b09d5c59dd90c65aa05aefca3877a57908714db9761ae87f8b034742520dec07f92f25db31bf0bf795f8574d7332a12ff10668a246e37",
            "file": "src/app/store/notifications/notifications.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { INotify } from '~components/notify/types';\r\nimport { addAction, removeAction, removeAllAction } from './notifications.actions';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface INotifyWithId extends INotify {\r\n  id: string;\r\n}\r\n\r\nexport interface IState {\r\n  list: INotifyWithId[];\r\n}\r\n\r\nexport const initialState: IState = {\r\n  list: []\r\n};\r\n\r\nexport const FEATURE_KEY = 'notifications';\r\n\r\nexport const notificationsReducer = createReducer<IState>(\r\n  initialState,\r\n  on(addAction, (state, payload) => ({\r\n    ...state,\r\n    list: [...state.list, payload.notify]\r\n  })),\r\n  on(removeAction, (state, payload) => ({\r\n    ...state,\r\n    list: state.list.filter((notify: INotifyWithId) => notify.id !== payload.id)\r\n  })),\r\n  on(removeAllAction, (state) => ({\r\n    ...state,\r\n    list: []\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "INotify"
        },
        {
            "name": "IObject",
            "id": "interface-IObject-728471aa24100cebc65bd1969066dc2fcd71a766fcebac42a9ade5ee30f57b3def3e2b15efd41814b85b5f4b39860ada15e4640567633f1b29dfa63ba0cdbc78",
            "file": "src/types/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export { isArray, isNonNull, isObject } from './guards';\r\n\r\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\r\n\r\nexport interface IObject {\r\n  [key: string]: unknown;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-728471aa24100cebc65bd1969066dc2fcd71a766fcebac42a9ade5ee30f57b3def3e2b15efd41814b85b5f4b39860ada15e4640567633f1b29dfa63ba0cdbc78",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "",
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "IOption",
            "id": "interface-IOption-eec9b966885f6b2f1299f9bba44b2252a3bc7c4c9acc55b0b8943cb700185265c3c820eb7a93c3c36099733077a92c2d58c417316fcd078f13c069f2d08034b5",
            "file": "src/app/components/sorting/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type Sort = 'asc' | 'desc';\r\n\r\nexport interface IOption<T extends string = never> {\r\n  categoryTitle: CategoryTitle;\r\n  title: Title;\r\n  sort: Sort;\r\n  targetSort: T;\r\n}\r\n\r\nexport type Title = string;\r\nexport type CategoryTitle = string;\r\n",
            "properties": [
                {
                    "name": "categoryTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CategoryTitle",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sort",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "targetSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Title",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IOptionsConvertParams",
            "id": "interface-IOptionsConvertParams-a6694d6855847f055dc54949b98ee01ca702a05f7e0fd9ad229015c864f26ca46d6cad4f9022c86c9ab5d8441faf297112cf47f4ef08bc3fcdd3810b0d11bb2b",
            "file": "src/app/services/params/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ICheckboxesGroupData } from '~components/filters-form/types';\r\nimport { IRangeValue, RangeTarget } from '~components/range/types';\r\n\r\nexport interface IFormData<T = string> {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue | Array<T> | string | number;\r\n}\r\n\r\nexport type ObjectExceptRange = Omit<ICheckboxesGroupData, RangeTarget>;\r\n\r\nexport interface IQueryParams {\r\n  [key: string]: Array<string> | string | number;\r\n}\r\n\r\nexport interface IOptionsConvertParams {\r\n  isRemovedEmpty?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "isRemovedEmpty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IOrderData",
            "id": "interface-IOrderData-05392974e95e00bcacaacb1a8d23e0fcc85b391a65d1f5c05b82461f3afe701daf883a0b7c11ae34b6b3374abec304363eb361c800f7de8a607d89570f61cc5e",
            "file": "src/app/pages/order/component/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IOrderData {\r\n  user: {\r\n    firstName: string;\r\n    phone: string;\r\n    email: string;\r\n    recipient: {\r\n      firstName: string;\r\n      phone: string;\r\n    };\r\n    comment: string;\r\n  };\r\n  delivery: {\r\n    [K in keyof IDelivery]: IDelivery[K];\r\n  };\r\n  payment: Payment | '';\r\n}\r\n\r\nexport interface IDelivery {\r\n  method: 'courier' | 'pickup';\r\n  time: string;\r\n}\r\n\r\nexport interface IAddress {\r\n  city: 'minsk' | 'gomel';\r\n  street: string;\r\n  building: string;\r\n  house: string;\r\n  flat: string;\r\n}\r\n\r\nexport type Payment =\r\n  | 'card'\r\n  | 'cash'\r\n  | 'applePay'\r\n  | 'googlePay'\r\n  | 'cryptoCurrency'\r\n  | 'checkingAccount';\r\n",
            "properties": [
                {
                    "name": "delivery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "payment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Payment | string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPointerEvent",
            "id": "interface-IPointerEvent-5cb13f1e00105083f523911e921facfe2ef61aad4564bee82bd50cee71245396086f0ef92ef8f3fd6aed8c0f5d739ffab3bcbfcef19a81581a30b8ab870932f8",
            "file": "src/app/services/events/pointer/pointer-event.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, fromEvent, map, takeUntil } from 'rxjs';\n\nexport interface IPointerPosition {\n  clientX: PointerEvent['clientX'];\n  clientY: PointerEvent['clientX'];\n}\n\nexport interface IPointerEvent extends IPointerPosition {\n  pointerType: PointerEvent['pointerType'];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerEventService {\n  private _destroySubject: Subject<null>;\n  private _pointerSubject$: Subject<IPointerEvent>;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this._destroySubject = new Subject();\n    this._pointerSubject$ = new Subject<IPointerEvent>();\n    this.subscribeToPointermove();\n  }\n\n  private subscribeToPointermove(): void {\n    fromEvent<PointerEvent>(this.document, 'pointermove')\n      .pipe(takeUntil(this._destroySubject), map(this.getPointerPosition))\n      .subscribe(this._pointerSubject$);\n  }\n\n  private getPointerPosition(ev: PointerEvent): IPointerEvent {\n    return { pointerType: ev.pointerType, clientX: ev.clientX, clientY: ev.clientY };\n  }\n\n  public get pointermoveObservable$(): Observable<IPointerEvent> {\n    return this._pointerSubject$;\n  }\n\n  public destroy(): void {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "properties": [
                {
                    "name": "pointerType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "IPointerPosition"
        },
        {
            "name": "IPointerPosition",
            "id": "interface-IPointerPosition-5cb13f1e00105083f523911e921facfe2ef61aad4564bee82bd50cee71245396086f0ef92ef8f3fd6aed8c0f5d739ffab3bcbfcef19a81581a30b8ab870932f8",
            "file": "src/app/services/events/pointer/pointer-event.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, fromEvent, map, takeUntil } from 'rxjs';\n\nexport interface IPointerPosition {\n  clientX: PointerEvent['clientX'];\n  clientY: PointerEvent['clientX'];\n}\n\nexport interface IPointerEvent extends IPointerPosition {\n  pointerType: PointerEvent['pointerType'];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerEventService {\n  private _destroySubject: Subject<null>;\n  private _pointerSubject$: Subject<IPointerEvent>;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this._destroySubject = new Subject();\n    this._pointerSubject$ = new Subject<IPointerEvent>();\n    this.subscribeToPointermove();\n  }\n\n  private subscribeToPointermove(): void {\n    fromEvent<PointerEvent>(this.document, 'pointermove')\n      .pipe(takeUntil(this._destroySubject), map(this.getPointerPosition))\n      .subscribe(this._pointerSubject$);\n  }\n\n  private getPointerPosition(ev: PointerEvent): IPointerEvent {\n    return { pointerType: ev.pointerType, clientX: ev.clientX, clientY: ev.clientY };\n  }\n\n  public get pointermoveObservable$(): Observable<IPointerEvent> {\n    return this._pointerSubject$;\n  }\n\n  public destroy(): void {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "properties": [
                {
                    "name": "clientX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "clientY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPrice",
            "id": "interface-IPrice-0b385bf106163f4e31cd37b0d5ef6e00c8527d9939703081c33b5860b534a68add70f710fb49d11b4fad9b99b59e4cbe93e14407c141147b07674890df6bac33",
            "file": "src/types/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Rating, RatingNotSet } from '~components/rating/types';\r\n\r\nexport interface IProduct {\r\n  id: number;\r\n  title: string;\r\n  images: IImages;\r\n  price: IPrice;\r\n  categories: Array<Categories>;\r\n  rating: ProductRating;\r\n  descr: string;\r\n  light: Light;\r\n  color: Color;\r\n  format: Format;\r\n  flowers: Array<Flower>;\r\n  isNew?: IsNew;\r\n}\r\n\r\ntype IsNew = boolean | null;\r\n\r\nexport enum EnumProductFeature {\r\n  price,\r\n  light,\r\n  color,\r\n  format,\r\n  flower\r\n}\r\n\r\nexport const PRODUCT_FEATURE_NAME = <const>{\r\n  [EnumProductFeature.price]: 'стоимость',\r\n  [EnumProductFeature.light]: 'по свету',\r\n  [EnumProductFeature.color]: 'по цвету',\r\n  [EnumProductFeature.format]: 'по формату',\r\n  [EnumProductFeature.flower]: 'по цветку'\r\n};\r\n\r\nexport type ProductFeature = keyof typeof EnumProductFeature;\r\nexport type ProductFeatureName =\r\n  (typeof PRODUCT_FEATURE_NAME)[(typeof EnumProductFeature)[keyof typeof EnumProductFeature]];\r\n\r\nexport type ProductRating = Rating | RatingNotSet;\r\nexport type ProductImage = string;\r\n\r\nexport interface IPrice {\r\n  value: number;\r\n  discount: number;\r\n}\r\n\r\nexport interface IImages {\r\n  main: ProductImage;\r\n  other: ProductImage[];\r\n}\r\n\r\nexport enum EnumFlower {\r\n  alstroemeria,\r\n  anthurium,\r\n  asparagus,\r\n  astilba,\r\n  astrance\r\n}\r\n\r\nexport const FLOWER_NAME = <const>{\r\n  [EnumFlower.alstroemeria]: 'Альстромерия',\r\n  [EnumFlower.anthurium]: 'Антуриум',\r\n  [EnumFlower.asparagus]: 'Аспарагус',\r\n  [EnumFlower.astilba]: 'Астильба',\r\n  [EnumFlower.astrance]: 'Астранция'\r\n};\r\n\r\nexport const FLOWER_PARAMS = <const>{\r\n  [EnumFlower.alstroemeria]: 'alstroemeria',\r\n  [EnumFlower.anthurium]: 'anthurium',\r\n  [EnumFlower.asparagus]: 'asparagus',\r\n  [EnumFlower.astilba]: 'astilba',\r\n  [EnumFlower.astrance]: 'astrance'\r\n};\r\n\r\nexport type Flower = keyof typeof EnumFlower;\r\nexport type FlowerName = (typeof FLOWER_NAME)[keyof typeof FLOWER_NAME];\r\nexport type FlowerParams = (typeof FLOWER_PARAMS)[keyof typeof FLOWER_PARAMS];\r\n\r\nexport enum EnumFormat {\r\n  bouquet,\r\n  vase,\r\n  envelope,\r\n  basket,\r\n  hatbox,\r\n  box\r\n}\r\n\r\nexport const FORMAT_NAME = <const>{\r\n  [EnumFormat.bouquet]: 'Букет',\r\n  [EnumFormat.vase]: 'В вазе',\r\n  [EnumFormat.envelope]: 'В конверте',\r\n  [EnumFormat.basket]: 'В корзине',\r\n  [EnumFormat.hatbox]: 'В шляпной коробке',\r\n  [EnumFormat.box]: 'В ящике'\r\n};\r\n\r\nexport const FORMAT_PARAMS = <const>{\r\n  [EnumFormat.bouquet]: 'bouquet',\r\n  [EnumFormat.vase]: 'vase',\r\n  [EnumFormat.envelope]: 'envelope',\r\n  [EnumFormat.basket]: 'basket',\r\n  [EnumFormat.hatbox]: 'hatbox',\r\n  [EnumFormat.box]: 'box'\r\n};\r\n\r\nexport type Format = keyof typeof EnumFormat;\r\nexport type FormatName = (typeof FORMAT_NAME)[keyof typeof FORMAT_NAME];\r\nexport type FormatParams = (typeof FORMAT_PARAMS)[keyof typeof FORMAT_PARAMS];\r\n\r\nexport enum EnumColor {\r\n  white,\r\n  yellow,\r\n  green,\r\n  red,\r\n  orange,\r\n  pink\r\n}\r\n\r\nexport const COLOR_NAME = <const>{\r\n  [EnumColor.white]: 'Белый',\r\n  [EnumColor.yellow]: 'Желтый',\r\n  [EnumColor.green]: 'Зеленый',\r\n  [EnumColor.red]: 'Красный',\r\n  [EnumColor.orange]: 'Оранжевый',\r\n  [EnumColor.pink]: 'Розовый'\r\n};\r\n\r\nexport const COLOR_PARAMS = <const>{\r\n  [EnumColor.white]: 'white',\r\n  [EnumColor.yellow]: 'yellow',\r\n  [EnumColor.green]: 'green',\r\n  [EnumColor.red]: 'red',\r\n  [EnumColor.orange]: 'orange',\r\n  [EnumColor.pink]: 'pink'\r\n};\r\n\r\nexport type Color = keyof typeof EnumColor;\r\nexport type ColorName = (typeof COLOR_NAME)[keyof typeof COLOR_NAME];\r\nexport type ColorParams = (typeof COLOR_PARAMS)[keyof typeof COLOR_PARAMS];\r\n\r\nexport enum EnumLight {\r\n  gentle,\r\n  bright\r\n}\r\nexport const LIGHT_NAME = <const>{\r\n  [EnumLight.gentle]: 'Нежный',\r\n  [EnumLight.bright]: 'Яркий'\r\n};\r\n\r\nexport const LIGHT_PARAMS = <const>{\r\n  [EnumLight.gentle]: 'gentle',\r\n  [EnumLight.bright]: 'bright'\r\n};\r\n\r\nexport type Light = keyof typeof EnumLight;\r\nexport type LightName = (typeof LIGHT_NAME)[keyof typeof LIGHT_NAME];\r\nexport type LightParams = (typeof LIGHT_PARAMS)[keyof typeof LIGHT_PARAMS];\r\n\r\nexport enum EnumPrice {\r\n  price\r\n}\r\nexport const PRICE_NAME = <const>{\r\n  [EnumPrice.price]: 'цена'\r\n};\r\n\r\nexport type Price = keyof typeof EnumPrice;\r\nexport type PriceName = (typeof PRICE_NAME)[keyof typeof PRICE_NAME];\r\n\r\nexport enum EnumCategories {\r\n  gypsophila,\r\n  chamomile,\r\n  chrysanthemum,\r\n  indoor,\r\n  mono,\r\n  prefabricated,\r\n  holiday,\r\n  compositions,\r\n  envelope,\r\n  postcards,\r\n  gifts,\r\n  driedFlowers,\r\n  balloon,\r\n  popular,\r\n  roses,\r\n  funeral,\r\n  packaging,\r\n  wedding,\r\n  interior,\r\n  autumn,\r\n  individual,\r\n  additionally\r\n}\r\n\r\nexport const CATEGORY_PARAMS = <const>{\r\n  [EnumCategories.gypsophila]: 'gypsophila',\r\n  [EnumCategories.chamomile]: 'chamomile',\r\n  [EnumCategories.chrysanthemum]: 'chrysanthemum',\r\n  [EnumCategories.indoor]: 'indoor',\r\n  [EnumCategories.mono]: 'mono',\r\n  [EnumCategories.holiday]: 'holiday',\r\n  [EnumCategories.compositions]: 'compositions',\r\n  [EnumCategories.envelope]: 'envelope',\r\n  [EnumCategories.postcards]: 'postcards',\r\n  [EnumCategories.gifts]: 'gifts',\r\n  [EnumCategories.driedFlowers]: 'driedFlowers',\r\n  [EnumCategories.balloon]: 'balloon',\r\n  [EnumCategories.popular]: 'popular',\r\n  [EnumCategories.roses]: 'roses',\r\n  [EnumCategories.funeral]: 'funeral',\r\n  [EnumCategories.packaging]: 'packaging',\r\n  [EnumCategories.wedding]: 'wedding',\r\n  [EnumCategories.interior]: 'interior',\r\n  [EnumCategories.individual]: 'individual',\r\n  [EnumCategories.additionally]: 'additionally',\r\n  [EnumCategories.autumn]: 'autumn',\r\n  [EnumCategories.prefabricated]: 'prefabricated'\r\n};\r\n\r\nexport const CATEGORY_NAME = <const>{\r\n  [EnumCategories.gypsophila]: 'Букеты из гипсофил',\r\n  [EnumCategories.chamomile]: 'Букеты из ромашек',\r\n  [EnumCategories.chrysanthemum]: 'Букеты из хризантем',\r\n  [EnumCategories.indoor]: 'Комнатные цветы в горшках',\r\n  [EnumCategories.mono]: 'Монобукеты',\r\n  [EnumCategories.holiday]: 'Букеты на праздник',\r\n  [EnumCategories.compositions]: 'Композиции из букетов',\r\n  [EnumCategories.envelope]: 'Конверты',\r\n  [EnumCategories.postcards]: 'Откытки',\r\n  [EnumCategories.gifts]: 'Подарки',\r\n  [EnumCategories.driedFlowers]: 'Букеты из сухоцветов',\r\n  [EnumCategories.balloon]: 'Шары',\r\n  [EnumCategories.popular]: 'Популярное',\r\n  [EnumCategories.roses]: 'Букеты роз',\r\n  [EnumCategories.funeral]: 'Цветы на похороны',\r\n  [EnumCategories.packaging]: 'Упаковка подарков',\r\n  [EnumCategories.wedding]: 'Свдебные',\r\n  [EnumCategories.interior]: 'Интерьерные композиции',\r\n  [EnumCategories.individual]: 'Индивидуальный букет',\r\n  [EnumCategories.additionally]: 'Дополнительно',\r\n  [EnumCategories.autumn]: 'Осенние',\r\n  [EnumCategories.prefabricated]: 'Сборные'\r\n};\r\n\r\nexport type Categories = keyof typeof EnumCategories;\r\nexport type CategoriesName = (typeof CATEGORY_NAME)[keyof typeof CATEGORY_NAME];\r\nexport type CategoriesParams = (typeof CATEGORY_PARAMS)[keyof typeof CATEGORY_PARAMS];\r\n",
            "properties": [
                {
                    "name": "discount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPrice",
            "id": "interface-IPrice-e6b9867b253b1889c3ae646e1175b75205dc99ad77bc595e88001fbfb3d2c0eae121421c0ef8683ae3c876fdd3afcc84ad51f2b1b71adcd126972884d28eaea0-1",
            "file": "src/app/components/price/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IPrice {\r\n  value: number;\r\n  discount: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "discount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IPrice-1"
        },
        {
            "name": "IProduct",
            "id": "interface-IProduct-0b385bf106163f4e31cd37b0d5ef6e00c8527d9939703081c33b5860b534a68add70f710fb49d11b4fad9b99b59e4cbe93e14407c141147b07674890df6bac33",
            "file": "src/types/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Rating, RatingNotSet } from '~components/rating/types';\r\n\r\nexport interface IProduct {\r\n  id: number;\r\n  title: string;\r\n  images: IImages;\r\n  price: IPrice;\r\n  categories: Array<Categories>;\r\n  rating: ProductRating;\r\n  descr: string;\r\n  light: Light;\r\n  color: Color;\r\n  format: Format;\r\n  flowers: Array<Flower>;\r\n  isNew?: IsNew;\r\n}\r\n\r\ntype IsNew = boolean | null;\r\n\r\nexport enum EnumProductFeature {\r\n  price,\r\n  light,\r\n  color,\r\n  format,\r\n  flower\r\n}\r\n\r\nexport const PRODUCT_FEATURE_NAME = <const>{\r\n  [EnumProductFeature.price]: 'стоимость',\r\n  [EnumProductFeature.light]: 'по свету',\r\n  [EnumProductFeature.color]: 'по цвету',\r\n  [EnumProductFeature.format]: 'по формату',\r\n  [EnumProductFeature.flower]: 'по цветку'\r\n};\r\n\r\nexport type ProductFeature = keyof typeof EnumProductFeature;\r\nexport type ProductFeatureName =\r\n  (typeof PRODUCT_FEATURE_NAME)[(typeof EnumProductFeature)[keyof typeof EnumProductFeature]];\r\n\r\nexport type ProductRating = Rating | RatingNotSet;\r\nexport type ProductImage = string;\r\n\r\nexport interface IPrice {\r\n  value: number;\r\n  discount: number;\r\n}\r\n\r\nexport interface IImages {\r\n  main: ProductImage;\r\n  other: ProductImage[];\r\n}\r\n\r\nexport enum EnumFlower {\r\n  alstroemeria,\r\n  anthurium,\r\n  asparagus,\r\n  astilba,\r\n  astrance\r\n}\r\n\r\nexport const FLOWER_NAME = <const>{\r\n  [EnumFlower.alstroemeria]: 'Альстромерия',\r\n  [EnumFlower.anthurium]: 'Антуриум',\r\n  [EnumFlower.asparagus]: 'Аспарагус',\r\n  [EnumFlower.astilba]: 'Астильба',\r\n  [EnumFlower.astrance]: 'Астранция'\r\n};\r\n\r\nexport const FLOWER_PARAMS = <const>{\r\n  [EnumFlower.alstroemeria]: 'alstroemeria',\r\n  [EnumFlower.anthurium]: 'anthurium',\r\n  [EnumFlower.asparagus]: 'asparagus',\r\n  [EnumFlower.astilba]: 'astilba',\r\n  [EnumFlower.astrance]: 'astrance'\r\n};\r\n\r\nexport type Flower = keyof typeof EnumFlower;\r\nexport type FlowerName = (typeof FLOWER_NAME)[keyof typeof FLOWER_NAME];\r\nexport type FlowerParams = (typeof FLOWER_PARAMS)[keyof typeof FLOWER_PARAMS];\r\n\r\nexport enum EnumFormat {\r\n  bouquet,\r\n  vase,\r\n  envelope,\r\n  basket,\r\n  hatbox,\r\n  box\r\n}\r\n\r\nexport const FORMAT_NAME = <const>{\r\n  [EnumFormat.bouquet]: 'Букет',\r\n  [EnumFormat.vase]: 'В вазе',\r\n  [EnumFormat.envelope]: 'В конверте',\r\n  [EnumFormat.basket]: 'В корзине',\r\n  [EnumFormat.hatbox]: 'В шляпной коробке',\r\n  [EnumFormat.box]: 'В ящике'\r\n};\r\n\r\nexport const FORMAT_PARAMS = <const>{\r\n  [EnumFormat.bouquet]: 'bouquet',\r\n  [EnumFormat.vase]: 'vase',\r\n  [EnumFormat.envelope]: 'envelope',\r\n  [EnumFormat.basket]: 'basket',\r\n  [EnumFormat.hatbox]: 'hatbox',\r\n  [EnumFormat.box]: 'box'\r\n};\r\n\r\nexport type Format = keyof typeof EnumFormat;\r\nexport type FormatName = (typeof FORMAT_NAME)[keyof typeof FORMAT_NAME];\r\nexport type FormatParams = (typeof FORMAT_PARAMS)[keyof typeof FORMAT_PARAMS];\r\n\r\nexport enum EnumColor {\r\n  white,\r\n  yellow,\r\n  green,\r\n  red,\r\n  orange,\r\n  pink\r\n}\r\n\r\nexport const COLOR_NAME = <const>{\r\n  [EnumColor.white]: 'Белый',\r\n  [EnumColor.yellow]: 'Желтый',\r\n  [EnumColor.green]: 'Зеленый',\r\n  [EnumColor.red]: 'Красный',\r\n  [EnumColor.orange]: 'Оранжевый',\r\n  [EnumColor.pink]: 'Розовый'\r\n};\r\n\r\nexport const COLOR_PARAMS = <const>{\r\n  [EnumColor.white]: 'white',\r\n  [EnumColor.yellow]: 'yellow',\r\n  [EnumColor.green]: 'green',\r\n  [EnumColor.red]: 'red',\r\n  [EnumColor.orange]: 'orange',\r\n  [EnumColor.pink]: 'pink'\r\n};\r\n\r\nexport type Color = keyof typeof EnumColor;\r\nexport type ColorName = (typeof COLOR_NAME)[keyof typeof COLOR_NAME];\r\nexport type ColorParams = (typeof COLOR_PARAMS)[keyof typeof COLOR_PARAMS];\r\n\r\nexport enum EnumLight {\r\n  gentle,\r\n  bright\r\n}\r\nexport const LIGHT_NAME = <const>{\r\n  [EnumLight.gentle]: 'Нежный',\r\n  [EnumLight.bright]: 'Яркий'\r\n};\r\n\r\nexport const LIGHT_PARAMS = <const>{\r\n  [EnumLight.gentle]: 'gentle',\r\n  [EnumLight.bright]: 'bright'\r\n};\r\n\r\nexport type Light = keyof typeof EnumLight;\r\nexport type LightName = (typeof LIGHT_NAME)[keyof typeof LIGHT_NAME];\r\nexport type LightParams = (typeof LIGHT_PARAMS)[keyof typeof LIGHT_PARAMS];\r\n\r\nexport enum EnumPrice {\r\n  price\r\n}\r\nexport const PRICE_NAME = <const>{\r\n  [EnumPrice.price]: 'цена'\r\n};\r\n\r\nexport type Price = keyof typeof EnumPrice;\r\nexport type PriceName = (typeof PRICE_NAME)[keyof typeof PRICE_NAME];\r\n\r\nexport enum EnumCategories {\r\n  gypsophila,\r\n  chamomile,\r\n  chrysanthemum,\r\n  indoor,\r\n  mono,\r\n  prefabricated,\r\n  holiday,\r\n  compositions,\r\n  envelope,\r\n  postcards,\r\n  gifts,\r\n  driedFlowers,\r\n  balloon,\r\n  popular,\r\n  roses,\r\n  funeral,\r\n  packaging,\r\n  wedding,\r\n  interior,\r\n  autumn,\r\n  individual,\r\n  additionally\r\n}\r\n\r\nexport const CATEGORY_PARAMS = <const>{\r\n  [EnumCategories.gypsophila]: 'gypsophila',\r\n  [EnumCategories.chamomile]: 'chamomile',\r\n  [EnumCategories.chrysanthemum]: 'chrysanthemum',\r\n  [EnumCategories.indoor]: 'indoor',\r\n  [EnumCategories.mono]: 'mono',\r\n  [EnumCategories.holiday]: 'holiday',\r\n  [EnumCategories.compositions]: 'compositions',\r\n  [EnumCategories.envelope]: 'envelope',\r\n  [EnumCategories.postcards]: 'postcards',\r\n  [EnumCategories.gifts]: 'gifts',\r\n  [EnumCategories.driedFlowers]: 'driedFlowers',\r\n  [EnumCategories.balloon]: 'balloon',\r\n  [EnumCategories.popular]: 'popular',\r\n  [EnumCategories.roses]: 'roses',\r\n  [EnumCategories.funeral]: 'funeral',\r\n  [EnumCategories.packaging]: 'packaging',\r\n  [EnumCategories.wedding]: 'wedding',\r\n  [EnumCategories.interior]: 'interior',\r\n  [EnumCategories.individual]: 'individual',\r\n  [EnumCategories.additionally]: 'additionally',\r\n  [EnumCategories.autumn]: 'autumn',\r\n  [EnumCategories.prefabricated]: 'prefabricated'\r\n};\r\n\r\nexport const CATEGORY_NAME = <const>{\r\n  [EnumCategories.gypsophila]: 'Букеты из гипсофил',\r\n  [EnumCategories.chamomile]: 'Букеты из ромашек',\r\n  [EnumCategories.chrysanthemum]: 'Букеты из хризантем',\r\n  [EnumCategories.indoor]: 'Комнатные цветы в горшках',\r\n  [EnumCategories.mono]: 'Монобукеты',\r\n  [EnumCategories.holiday]: 'Букеты на праздник',\r\n  [EnumCategories.compositions]: 'Композиции из букетов',\r\n  [EnumCategories.envelope]: 'Конверты',\r\n  [EnumCategories.postcards]: 'Откытки',\r\n  [EnumCategories.gifts]: 'Подарки',\r\n  [EnumCategories.driedFlowers]: 'Букеты из сухоцветов',\r\n  [EnumCategories.balloon]: 'Шары',\r\n  [EnumCategories.popular]: 'Популярное',\r\n  [EnumCategories.roses]: 'Букеты роз',\r\n  [EnumCategories.funeral]: 'Цветы на похороны',\r\n  [EnumCategories.packaging]: 'Упаковка подарков',\r\n  [EnumCategories.wedding]: 'Свдебные',\r\n  [EnumCategories.interior]: 'Интерьерные композиции',\r\n  [EnumCategories.individual]: 'Индивидуальный букет',\r\n  [EnumCategories.additionally]: 'Дополнительно',\r\n  [EnumCategories.autumn]: 'Осенние',\r\n  [EnumCategories.prefabricated]: 'Сборные'\r\n};\r\n\r\nexport type Categories = keyof typeof EnumCategories;\r\nexport type CategoriesName = (typeof CATEGORY_NAME)[keyof typeof CATEGORY_NAME];\r\nexport type CategoriesParams = (typeof CATEGORY_PARAMS)[keyof typeof CATEGORY_PARAMS];\r\n",
            "properties": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Categories>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "descr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "flowers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Flower>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "format",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Format",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IImages",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isNew",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IsNew",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "light",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Light",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPrice",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductRating",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPromocodeData",
            "id": "interface-IPromocodeData-564e67ae8dc2559b8ad626192524714bdb1f82af5ea354b4d7ef2ac133707374b5cdd0826a2c0e34d63cd87d97ba768b77d03835d7a1641736df93c780d64e68",
            "file": "src/app/components/promocode-field/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IPromocodeData {\r\n  promocode: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "promocode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IQueryParams",
            "id": "interface-IQueryParams-a6694d6855847f055dc54949b98ee01ca702a05f7e0fd9ad229015c864f26ca46d6cad4f9022c86c9ab5d8441faf297112cf47f4ef08bc3fcdd3810b0d11bb2b",
            "file": "src/app/services/params/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ICheckboxesGroupData } from '~components/filters-form/types';\r\nimport { IRangeValue, RangeTarget } from '~components/range/types';\r\n\r\nexport interface IFormData<T = string> {\r\n  [key: string]: ICheckboxesGroupData | IRangeValue | Array<T> | string | number;\r\n}\r\n\r\nexport type ObjectExceptRange = Omit<ICheckboxesGroupData, RangeTarget>;\r\n\r\nexport interface IQueryParams {\r\n  [key: string]: Array<string> | string | number;\r\n}\r\n\r\nexport interface IOptionsConvertParams {\r\n  isRemovedEmpty?: boolean;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-a6694d6855847f055dc54949b98ee01ca702a05f7e0fd9ad229015c864f26ca46d6cad4f9022c86c9ab5d8441faf297112cf47f4ef08bc3fcdd3810b0d11bb2b",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Array | string | number",
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "IRangeValue",
            "id": "interface-IRangeValue-be5bc23993fbcb7a995494c9a996b0214c6debb93a9ea88fac79b15452947c547b7cfc7305bbf8fed05eae75a3bfd008ef73037c8f8e2283ac07ba8b0a92dd0a",
            "file": "src/app/components/range/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OnChangeCallback } from '~types/controlValueAccessor';\r\n\r\nexport interface IRangeValue {\r\n  from: number;\r\n  to: number;\r\n}\r\n\r\nexport type RangeTarget = 'from' | 'to';\r\nexport type RangeCallbackOnChange = OnChangeCallback<IRangeValue>;\r\n",
            "properties": [
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IReview",
            "id": "interface-IReview-a308c7a02ce57987ed57137ec8a7904d435917dc24710fa4a969cb17d4f92d097e653508f5581888eb02f57652cd59fa280715a01583158b3bcee048ecdffa6b",
            "file": "src/app/components/review/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Rating } from '../rating/types';\r\n\r\nexport interface IReview {\r\n  comment: string;\r\n  author: string;\r\n  createdAt: Date;\r\n  rating: Rating;\r\n}\r\n",
            "properties": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Rating",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRootState",
            "id": "interface-IRootState-03fd4a38d963c83fb1678dd5255b51e71de20a309bb523e000e97bfabc011a6722c812b4cf8fe71e74cb9f62d6fdc67e171363aecc33aab700a7585b1ecc4c9c",
            "file": "src/app/store/root.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionReducerMap } from '@ngrx/store';\r\nimport { productsStore } from './products';\r\nimport { cartStore } from './cart';\r\nimport { productStore } from '../pages/product/store/product';\r\nimport { commentsStore } from '../pages/product/store/comments';\r\nimport { feedbackStore } from './feedback';\r\nimport { orderStore } from './order';\r\nimport { corporateStore } from './corporate';\r\nimport { notificationsStore } from './notifications';\r\n\r\nexport interface IRootState {\r\n  products: productsStore.IState;\r\n  cart: cartStore.IState;\r\n  [productStore.FEATURE_KEY]: productStore.IState;\r\n  [commentsStore.FEATURE_KEY]: commentsStore.IState;\r\n  [feedbackStore.FEATURE_KEY]: feedbackStore.IState;\r\n  [orderStore.FEATURE_KEY]: orderStore.IState;\r\n  [corporateStore.FEATURE_KEY]: corporateStore.IState;\r\n  [notificationsStore.FEATURE_KEY]: notificationsStore.IState;\r\n}\r\n\r\nexport const rootReducer: ActionReducerMap<IRootState> = {\r\n  [productsStore.FEATURE_KEY]: productsStore.productsReducer,\r\n  [cartStore.FEATURE_KEY]: cartStore.cartReducer,\r\n  [productStore.FEATURE_KEY]: productStore.productReducer,\r\n  [commentsStore.FEATURE_KEY]: commentsStore.commentsReducer,\r\n  [feedbackStore.FEATURE_KEY]: feedbackStore.feedbackReducer,\r\n  [orderStore.FEATURE_KEY]: orderStore.orderReducer,\r\n  [corporateStore.FEATURE_KEY]: corporateStore.corporateReducer,\r\n  [notificationsStore.FEATURE_KEY]: notificationsStore.notificationsReducer\r\n};\r\n",
            "properties": [
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "cartStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "productsStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "productStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "commentsStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "feedbackStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "orderStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "corporateStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "notificationsStore.IState",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRouteData",
            "id": "interface-IRouteData-83e6f2ae083e1349ab80da81ec34a6c3fdecc042eb6b66f6d1fc882d9e6d68b0ec2938a97009983e3c14ab4fe86d5c6423cf7e1df002120cb5d0560d6c8b8823",
            "file": "src/data/routes.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IRouteData {\r\n  title: string;\r\n  url: string;\r\n}\r\n\r\nexport const routes = {\r\n  catalog: {\r\n    title: 'Каталог',\r\n    url: '/catalog'\r\n  },\r\n  delivery: {\r\n    title: 'Доставка и оплата',\r\n    url: '/delivery-payment'\r\n  },\r\n  about: {\r\n    title: 'О нас',\r\n    url: '/about-us'\r\n  },\r\n  contacts: {\r\n    title: 'Контакты',\r\n    url: '/contacts'\r\n  },\r\n  faq: {\r\n    title: 'FAQ',\r\n    url: '/faq'\r\n  }\r\n};\r\n\r\nexport const mainRoute = {\r\n  title: 'Главная',\r\n  url: '/'\r\n};\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRouteInfo",
            "id": "interface-IRouteInfo-bd7ee7b011ebfef85fe60d7f08e5c6d9f19f581b7ba169616fd42b1ce4cef12e70cd7030d14483b4c0df7d8c84831038679719445798c930142d0811857f3382",
            "file": "src/app/services/url-route/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Params } from '@angular/router';\r\n\r\nexport interface IRouteInfo {\r\n  url: null | string;\r\n  urlFull: null | string;\r\n  params: null | Params;\r\n}\r\n",
            "properties": [
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | Params",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "urlFull",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ISortingParams",
            "id": "interface-ISortingParams-aa5b36bf3752e3dac5edb4658f808154c5dafbca735f54ca04f3d261df1678d0266e250be1d55341066c268c628106a6641c3a8839faab2683f97e352c3a9c51",
            "file": "src/app/containers/sorting-container/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Sort } from '~components/sorting/types';\r\n\r\nexport type TargetSort = 'price' | 'rating';\r\nexport interface ISortingParams {\r\n  targetSort: TargetSort | null;\r\n  sort: Sort | null;\r\n}\r\n",
            "properties": [
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sort | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "targetSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TargetSort | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IState",
            "id": "interface-IState-adb8680370b13736c57c77475ca701d22e72f2f1a4dbf983cf414f5977e6141995584fd86a31d18cd57a2ab48652aad3e1953622dcfdfe1cd10b5c65c27159ed",
            "file": "src/app/store/cart/cart.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { INIT, createReducer, on } from '@ngrx/store';\r\nimport {\r\n  deleteProductAction,\r\n  deleteProductErrorAction,\r\n  deleteProductSuccessAction,\r\n  postChangeCountAction,\r\n  postChangeCountErrorAction,\r\n  postChangeCountSuccessAction,\r\n  postProductAction,\r\n  postProductErrorAction,\r\n  postProductSuccessAction,\r\n  requestAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './cart.actions';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\nimport { Cart } from 'src/app/services/cart-storage/cart-storage.service';\r\n\r\nexport interface IState {\r\n  inCart: Cart | null;\r\n  isLoading: TIsCartLoading;\r\n  isPostLoading: TIsCartLoading;\r\n  error: ErrorPayload['error'] | null;\r\n  postError: ErrorPayload['error'] | null;\r\n}\r\n\r\nexport type TCount = number;\r\nexport type TIsCartLoading = boolean;\r\n\r\nexport const initialState: IState = {\r\n  inCart: [],\r\n  isLoading: false,\r\n  isPostLoading: false,\r\n  error: null,\r\n  postError: null\r\n};\r\n\r\nexport const FEATURE_KEY = 'cart';\r\n\r\nexport const cartReducer = createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(postProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    postError: payload.error\r\n  })),\r\n  on(postChangeCountAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postChangeCountSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postChangeCountErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(deleteProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(deleteProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(deleteProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "inCart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Cart | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsCartLoading",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isPostLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsCartLoading",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "postError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IState",
            "id": "interface-IState-a14266a851f52137b6cf3d0e0166b31592d52965374533159ffade08a5ffe7a791f441551eed24216997e48ac9c6cdbf6ef20cb50d40bcf27d33c08446eac240-1",
            "file": "src/app/store/corporate/corporate.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './corporate.actions';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface IState {\r\n  isLoading: TIsLoading;\r\n  error: ErrorPayload['error'] | null;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const FEATURE_KEY = 'corporate';\r\n\r\nexport const corporateReducer = createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsLoading",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IState-1"
        },
        {
            "name": "IState",
            "id": "interface-IState-e523a44268e00ccfa68b5f2731bd77c78196b996a18ac8aecc39e56c13839036489a873d154ac0d58f59d2e0821af77b07f5d16fa232b1c14c5792601033c2d0-2",
            "file": "src/app/store/feedback/feedback.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './feedback.actions';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface IState {\r\n  isLoading: TIsLoading;\r\n  error: ErrorPayload['error'] | null;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const FEATURE_KEY = 'feedback';\r\n\r\nexport const feedbackReducer = createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsLoading",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "IState-2"
        },
        {
            "name": "IState",
            "id": "interface-IState-6eb884a27e372810a03b09d5c59dd90c65aa05aefca3877a57908714db9761ae87f8b034742520dec07f92f25db31bf0bf795f8574d7332a12ff10668a246e37-3",
            "file": "src/app/store/notifications/notifications.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { INotify } from '~components/notify/types';\r\nimport { addAction, removeAction, removeAllAction } from './notifications.actions';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface INotifyWithId extends INotify {\r\n  id: string;\r\n}\r\n\r\nexport interface IState {\r\n  list: INotifyWithId[];\r\n}\r\n\r\nexport const initialState: IState = {\r\n  list: []\r\n};\r\n\r\nexport const FEATURE_KEY = 'notifications';\r\n\r\nexport const notificationsReducer = createReducer<IState>(\r\n  initialState,\r\n  on(addAction, (state, payload) => ({\r\n    ...state,\r\n    list: [...state.list, payload.notify]\r\n  })),\r\n  on(removeAction, (state, payload) => ({\r\n    ...state,\r\n    list: state.list.filter((notify: INotifyWithId) => notify.id !== payload.id)\r\n  })),\r\n  on(removeAllAction, (state) => ({\r\n    ...state,\r\n    list: []\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INotifyWithId[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "IState-3"
        },
        {
            "name": "IState",
            "id": "interface-IState-2dce5892fa93f3d711a0279e63357f749ba471edab0c5aea5983b1749f9be12ff9b92ddbc584aa7e1bcf0021def3571e7fc490a23def2764a36758b28577a4d4-4",
            "file": "src/app/store/order/order.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './order.actions';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface IState {\r\n  isLoading: TIsLoading;\r\n  error: ErrorPayload['error'] | null;\r\n  id: string | null;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  isLoading: false,\r\n  error: null,\r\n  id: null\r\n};\r\n\r\nexport const FEATURE_KEY = 'order';\r\n\r\nexport const orderReducer = createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null,\r\n    id: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    id: payload.id\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsLoading",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "IState-4"
        },
        {
            "name": "IState",
            "id": "interface-IState-4a08f4166889b7d3a35017a98af1b21b9e7c896f2b1bfc1bfbc047eaba368f25e1cbc513e7fe28d1fc31fa8e8932f17d0f3ece3e4feafd6aef8d24c3445f6c2b-5",
            "file": "src/app/store/products/products.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport {\r\n  hydrateSuccessAction,\r\n  requestAction,\r\n  requestCancelAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './products.actions';\r\nimport { IProduct } from '~types/product';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\nimport { makeStateKey } from '@angular/platform-browser';\r\n\r\nexport type TIsLoading = boolean;\r\n\r\nexport interface IState {\r\n  products: IProduct[];\r\n  isLoading: TIsLoading;\r\n  error: ErrorPayload['error'] | null;\r\n  isHydrateSuccess: boolean;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  products: [],\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n};\r\n\r\nexport const FEATURE_KEY = 'products';\r\nexport const PRODUCTS_STORE_TRANSFER_KEY = makeStateKey<IState>('productsStoreTransferKey');\r\n\r\nexport const productsReducer = createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (state, action) => ({\r\n    ...state,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    products: payload.products\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isHydrateSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsLoading",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "IState-5"
        },
        {
            "name": "IState",
            "id": "interface-IState-dbc35bce452d810180bb7cc085e969b52f717fafbf388c95465a1c8080a7acd1e71d3beb3404291146d90cfce7ca120daf8001a8f956e890c33a0609e49ed398-6",
            "file": "src/app/pages/product/store/comments/comments.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport {\r\n  postAction,\r\n  postErrorAction,\r\n  postSuccessAction,\r\n  requestAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './comments.actions';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\nimport { IReview } from '~components/review/types';\r\n\r\nexport interface IState {\r\n  comments: IReview[] | null;\r\n  isLoading: boolean;\r\n  error: ErrorPayload['error'] | null;\r\n  postIsLoading: boolean;\r\n  postError: ErrorPayload['error'] | null;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  comments: null,\r\n  isLoading: false,\r\n  error: null,\r\n  postIsLoading: false,\r\n  postError: null\r\n};\r\n\r\nexport const FEATURE_KEY = 'comments';\r\n\r\nexport const commentsReducer = createReducer(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    comments: payload.comments\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postSuccessAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: false\r\n  })),\r\n  on(postErrorAction, (state, payload) => ({\r\n    ...state,\r\n    postIsLoading: false,\r\n    postError: payload.error\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IReview[] | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "postError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "postIsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 6,
            "duplicateName": "IState-6"
        },
        {
            "name": "IState",
            "id": "interface-IState-42231ac973b202a93a4eff1580557c5a43bce210188bdf17ac96dade6838073711bb3af230f0e0864d91aadc1e6d5f9737372799a4e24523b9ca7fdc827ce8ec-7",
            "file": "src/app/pages/product/store/product/product.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport {\r\n  hydrateErrorAction,\r\n  hydrateSuccessAction,\r\n  requestAction,\r\n  requestCancelAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './product.actions';\r\nimport { IProduct } from '~types/product';\r\nimport { ErrorPayload } from '~types/apiPayloads';\r\nimport { makeStateKey } from '@angular/platform-browser';\r\n\r\nexport interface IState {\r\n  product: IProduct | null;\r\n  isLoading: boolean;\r\n  error: ErrorPayload['error'] | null;\r\n  isHydrateSuccess: boolean;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  product: null,\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n};\r\n\r\nexport const FEATURE_KEY = 'product';\r\nexport const PRODUCT_STORE_TRANSFER_KEY = makeStateKey<IState>('productStoreTransferKey');\r\n\r\nexport const productReducer = createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (store, action) => ({\r\n    ...store,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(hydrateErrorAction, (store) => ({\r\n    ...store\r\n  })),\r\n  on(requestAction, (store) => ({\r\n    ...store,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    product: payload.product\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isHydrateSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 7,
            "duplicateName": "IState-7"
        },
        {
            "name": "IViewportSizes",
            "id": "interface-IViewportSizes-5765f1e210c2f15ed31868286a7f38d59599d60d5c7a3317aee63df31497b8dfe47ed0cbf498e37cb9b0e42ab32ca09bcf18f4c9c7ed89dcb828f987ec9bfec1",
            "file": "src/app/services/events/resize/viewport-size.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, debounceTime, fromEvent } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { IS_PLATFORM_BROWSER_TOKEN } from 'src/app/tokens/isPlatformBrowser';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\nexport interface IViewportSizes {\n  width: number;\n  height: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewportSizeService {\n  private _destroySubject = new Subject();\n  private _resizeSubject: BehaviorSubject<IViewportSizes>;\n  private _resizeObservable$ = this.isPlatformBrowser(this.platformId)\n    ? fromEvent<UIEvent>(this.window, 'resize').pipe(\n        takeUntil(this._destroySubject),\n        map(this.getSizesFromResizeEvent),\n        debounceTime(200)\n      )\n    : new Subject<IViewportSizes>();\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(IS_PLATFORM_BROWSER_TOKEN) private isPlatformBrowser: (id: string) => boolean\n  ) {\n    const { innerWidth: width, innerHeight: height } = this.window;\n    this._resizeSubject = new BehaviorSubject<IViewportSizes>({\n      width,\n      height\n    });\n    this._resizeObservable$.subscribe(this._resizeSubject);\n  }\n\n  private getSizesFromResizeEvent(event: UIEvent): IViewportSizes {\n    const target = <Window>event.target;\n\n    return {\n      width: target.innerWidth,\n      height: target.innerHeight\n    };\n  }\n\n  public get resizeObservable$(): Observable<IViewportSizes> {\n    return this._resizeSubject;\n  }\n\n  public destroy() {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "properties": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiCartService",
            "id": "injectable-ApiCartService-d9855138eeaad7e25261f3e5444553f1517504fc8f92664f8f03ba1bdac7a3131c209b0e84cff4fd671b16e71260d2e7d9f42dd0db28241b39ae86ab640a9cfe",
            "file": "src/app/services/api/api-cart/api-cart.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Cart>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeProductCount",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Cart>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Cart>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Cart>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Cart>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CartStorageService, Cart, ICartItem } from '../../cart-storage/cart-storage.service';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiCartService {\n  constructor(private cartStorageService: CartStorageService) {}\n\n  public getProducts(): Observable<Cart> {\n    return of(this.cartStorageService.getProducts());\n  }\n\n  public addProduct(cartItem: ICartItem): Observable<Cart> {\n    return of(this.cartStorageService.addProduct(cartItem));\n  }\n\n  public deleteProduct(id: number): Observable<Cart> {\n    return of(this.cartStorageService.deleteProduct(id));\n  }\n\n  public changeProductCount(id: number, count: number): Observable<Cart> {\n    return of(this.cartStorageService.replaceProductCount(id, count));\n  }\n\n  public clearAll(): Observable<Cart> {\n    return of(this.cartStorageService.clearAll());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartStorageService",
                        "type": "CartStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "cartStorageService",
                        "type": "CartStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiCommentsService",
            "id": "injectable-ApiCommentsService-0843504d5a5ae9ae90d1a73c6de5c8e0c0c1cf6b0bfc5ab59aca4ddf5ce01239b39bd8496959666127792c72650a78a8ad020f8ef35fdf238927a4ed4c79fed5",
            "file": "src/app/services/api/api-comments/api-comments.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "environment.api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getComments",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IReview[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postComment",
                    "args": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IReview[]>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpService } from '../../http/http.service';\nimport { IReview } from '~components/review/types';\nimport { INewReview } from '~components/review-form/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiCommentsService {\n  private api = environment.api;\n\n  constructor(private http: HttpService) {}\n\n  public getComments(id: number): Observable<IReview[]> {\n    return this.http.get(`${this.api}/comments/${id}`);\n  }\n\n  public postComment(formData: INewReview): Observable<IReview[]> {\n    return this.http.post(`${this.api}/comments`, formData);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiCorporateService",
            "id": "injectable-ApiCorporateService-b16b5b23d56e5b99ea91a059ca8862d30a6b2050b21dd8d5ab34b6d938e575a1df885a652c6a32c59dfa9281c03eb55beb02f264734d64dac710b602fabdb75f",
            "file": "src/app/services/api/api-corporate/api-corporate.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "environment.api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "postRequest",
                    "args": [
                        {
                            "name": "formData",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SuccessPayload>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpService } from '../../http/http.service';\nimport { ICorporateUser } from '~pages/corporate-clients/component/types';\nimport { SuccessPayload } from '~types/apiPayloads';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiCorporateService {\n  private api = environment.api;\n\n  constructor(private http: HttpService) {}\n\n  public postRequest(formData: ICorporateUser): Observable<SuccessPayload> {\n    return this.http.post(`${this.api}/corporate`, formData);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiFeedbackService",
            "id": "injectable-ApiFeedbackService-22d133bd11ff1582cd6f23ac6a8db95f4afff8d4e18882a8d6e4d9d766f82bd623b7f10151b873fa5a1f1e887b7a9832749644718c0f461117fd212ec3b28cfa",
            "file": "src/app/services/api/api-feedback/api-feedback.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "environment.api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "postFeedback",
                    "args": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SuccessPayload | Error>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IFeedbackData } from '~components/feedback-form/types';\nimport { SuccessPayload } from '~types/apiPayloads';\nimport { HttpService } from '../../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiFeedbackService {\n  private api = environment.api;\n\n  constructor(private http: HttpService) {}\n\n  public postFeedback(data: IFeedbackData): Observable<SuccessPayload | Error> {\n    return this.http.post(`${this.api}/feedback`, data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiOrderService",
            "id": "injectable-ApiOrderService-e08f50d3d1903b8447625f48934136f28e562e26d2c02c8f1f50c440c405c50c29c8cb9776e5d94da8c71ab047885878e0ff05ce55e7cf3e17354860dc60e7c6",
            "file": "src/app/services/api/api-order/api-order.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "postOrder",
                    "args": [
                        {
                            "name": "formData",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpService } from '../../http/http.service';\nimport { IOrderData } from '~pages/order/component/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiOrderService {\n  constructor(private http: HttpService) {}\n\n  public postOrder(formData: IOrderData): Observable<{ id: string }> {\n    return this.http.post(`${environment.api}/order`, formData);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiProductService",
            "id": "injectable-ApiProductService-bab2f4b479a36ae3e041795084423887d4b24df2c8e0297b4a8ca2273c633d7d4609c01f914101f456ca24c0a4234df823b48cd489e5e033d83b34693f1c2c5e",
            "file": "src/app/services/api/api-product/api-product.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "environment.api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IProduct>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Array<IProduct>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IProduct } from '~types/product';\nimport { HttpService } from '../../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiProductService {\n  constructor(private http: HttpService) {}\n\n  private url = environment.api;\n\n  public getProducts(): Observable<Array<IProduct>> {\n    return this.http.get<Array<IProduct>>(`${this.url}/products`);\n  }\n\n  public getProduct(id: IProduct['id']): Observable<IProduct> {\n    return this.http.get<IProduct>(`${this.url}/product/${id}`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AppEffects",
            "id": "injectable-AppEffects-81f88518f9caf3d19d08d27c057fd2422240dd2b9769cfaa6921fb1f56c7ceafaf4a6b4c0283f90778ac47b87f45a5143b4939d0ecd2c150dbe5c72486470e3b",
            "file": "src/app/store/app/app.effects.ts",
            "properties": [
                {
                    "name": "loadData$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(startedAction),\r\n      map(() => productsStore.requestAction()),\r\n      mergeMap((productsAction) => of(productsAction, cartStore.requestAction()))\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { startedAction } from './app.actions';\r\nimport { map, mergeMap, of } from 'rxjs';\r\nimport { productsStore } from '../products';\r\nimport { cartStore } from '../cart';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n  constructor(private actions$: Actions) {}\r\n\r\n  loadData$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(startedAction),\r\n      map(() => productsStore.requestAction()),\r\n      mergeMap((productsAction) => of(productsAction, cartStore.requestAction()))\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AppService",
            "id": "injectable-AppService-593a378f9d3e0ef19eee7bb3d43398d79fe54795f6938b4c6456e5e3803106c2b96d7144bfba7d8d07a65ddaa64c29830c2490c368444a4ba284ba2126d19256",
            "file": "src/app/services/app/app.service.ts",
            "properties": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isMainRouteCheck",
                    "args": [
                        {
                            "name": "url",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "observerChangeUrl",
                    "args": [
                        {
                            "name": "isChanged",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isChanged",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startApp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscribeToScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "Subscription",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "unsubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, Subscription, takeUntil } from 'rxjs';\nimport { UrlRouteService } from '../url-route/url-route.service';\nimport { mainRoute } from '~data/routes';\nimport { IRouteInfo } from '../url-route/types';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\nimport { StoreService } from '../store/store.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  private destroySubject = new Subject<null>();\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    private urlRoute: UrlRouteService,\n    private storeService: StoreService\n  ) {}\n\n  public startApp() {\n    this.storeService.dispatchStartAction();\n  }\n\n  public subscribeToScrollTop(): Subscription {\n    return this.urlRoute.isChangedUrlStream$\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isChanged) => this.observerChangeUrl(isChanged));\n  }\n\n  get currentUrl$(): Observable<IRouteInfo> {\n    return this.urlRoute.currentUrlStream$.pipe(takeUntil(this.destroySubject));\n  }\n\n  public unsubscribe(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private observerChangeUrl(isChanged: boolean): void {\n    if (!isChanged) {\n      return;\n    }\n    this.window.scrollTo({ top: 0 });\n  }\n\n  public isMainRouteCheck(url: string | null): boolean {\n    return url === mainRoute.url;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "urlRoute",
                        "type": "UrlRouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "urlRoute",
                        "type": "UrlRouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentUrl$": {
                    "name": "currentUrl$",
                    "getSignature": {
                        "name": "currentUrl$",
                        "type": "",
                        "returnType": "Observable<IRouteInfo>",
                        "line": 30
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "CartEffects",
            "id": "injectable-CartEffects-c7c953a1c70b54bbaae220c546437b698295a00cb62871d051747249cd6f939ff403dfa6c4521c8e99812fbd94636522d33b3be4fc823454cafbb11c59c69ae7",
            "file": "src/app/store/cart/cart.effects.ts",
            "properties": [
                {
                    "name": "changeProductCount$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postChangeCountAction),\r\n      switchMap((action) =>\r\n        this.apiCartService.changeProductCount(action.id, action.count).pipe(\r\n          map((inCart) => postChangeCountSuccessAction({ inCart })),\r\n          catchError((error) => of(postChangeCountErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "clearCart$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(clearAllAction),\r\n      switchMap(() =>\r\n        this.apiCartService.clearAll().pipe(\r\n          map((inCart) => postChangeCountSuccessAction({ inCart })),\r\n          catchError((error) => of(postChangeCountErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "deleteFromCart$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteProductAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.apiCartService.deleteProduct(id).pipe(\r\n          map((inCart) => deleteProductSuccessAction({ inCart })),\r\n          catchError((error) => of(deleteProductErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "loadCart$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap(() =>\r\n        this.apiCartService.getProducts().pipe(\r\n          map((inCart) => requestSuccessAction({ inCart })),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "postToCart$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postProductAction),\r\n      map((action) => ({ product: action.product, count: action.count })),\r\n      switchMap((payload) =>\r\n        this.apiCartService.addProduct(payload).pipe(\r\n          map((inCart) => postProductSuccessAction({ inCart })),\r\n          catchError((error) => of(postProductErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport {\r\n  clearAllAction,\r\n  deleteProductAction,\r\n  deleteProductErrorAction,\r\n  deleteProductSuccessAction,\r\n  postChangeCountAction,\r\n  postChangeCountErrorAction,\r\n  postChangeCountSuccessAction,\r\n  postProductAction,\r\n  postProductErrorAction,\r\n  postProductSuccessAction,\r\n  requestAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './cart.actions';\r\nimport { ApiCartService } from 'src/app/services/api/api-cart/api-cart.service';\r\n\r\n@Injectable()\r\nexport class CartEffects {\r\n  constructor(private actions$: Actions, private apiCartService: ApiCartService) {}\r\n\r\n  loadCart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap(() =>\r\n        this.apiCartService.getProducts().pipe(\r\n          map((inCart) => requestSuccessAction({ inCart })),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  postToCart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postProductAction),\r\n      map((action) => ({ product: action.product, count: action.count })),\r\n      switchMap((payload) =>\r\n        this.apiCartService.addProduct(payload).pipe(\r\n          map((inCart) => postProductSuccessAction({ inCart })),\r\n          catchError((error) => of(postProductErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  deleteFromCart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteProductAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.apiCartService.deleteProduct(id).pipe(\r\n          map((inCart) => deleteProductSuccessAction({ inCart })),\r\n          catchError((error) => of(deleteProductErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  changeProductCount$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postChangeCountAction),\r\n      switchMap((action) =>\r\n        this.apiCartService.changeProductCount(action.id, action.count).pipe(\r\n          map((inCart) => postChangeCountSuccessAction({ inCart })),\r\n          catchError((error) => of(postChangeCountErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  clearCart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(clearAllAction),\r\n      switchMap(() =>\r\n        this.apiCartService.clearAll().pipe(\r\n          map((inCart) => postChangeCountSuccessAction({ inCart })),\r\n          catchError((error) => of(postChangeCountErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiCartService",
                        "type": "ApiCartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiCartService",
                        "type": "ApiCartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CartService",
            "id": "injectable-CartService-a3e2f73a66b990501dcc9b1926eab8e47167ee8166ebe936809a3255686b226b21732e1a85b3710247cd37651d3b770a3a21a45ac8cab5e474bf7e1ab2682e44",
            "file": "src/app/services/cart/cart.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeProductCount",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCart",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCountInCart",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getDiscount",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { cartStore } from 'src/app/store/cart';\nimport { IProduct } from '~types/product';\nimport { ICartItem } from '../cart-storage/cart-storage.service';\nimport { StoreService } from '../store/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  constructor(private StoreService: StoreService) {}\n\n  public requestCart(): void {\n    this.StoreService.dispatchRequestCart();\n  }\n\n  public getCountInCart(): Observable<number> {\n    return this.StoreService.getCountInCart();\n  }\n\n  public getCart(): Observable<cartStore.IState['inCart']> {\n    return this.StoreService.getCart();\n  }\n\n  public getPrice(): Observable<number> {\n    return this.StoreService.getCartPrice();\n  }\n\n  public getDiscount(): Observable<number> {\n    return this.StoreService.getCartDiscount();\n  }\n\n  public addToCart(cartItem: ICartItem): void {\n    this.StoreService.dispatchPostToCart(cartItem);\n  }\n\n  public deleteFromCart(id: IProduct['id']): void {\n    this.StoreService.dispatchDeleteFromCart({ id });\n  }\n\n  public changeProductCount(id: number, count: number): void {\n    this.StoreService.dispatchChangeProductCount({ id, count });\n  }\n\n  public clearAll(): void {\n    this.StoreService.dispatchClearCart();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CartStorageService",
            "id": "injectable-CartStorageService-92ef952e2954d1efd4a6c6a194208a824204b0c28f4dcc96b7248d02adde27c4e78cead3dc98c7e0dccdfe1506fce9fc10e09dbf543acda72d9ef75dd5d025ad",
            "file": "src/app/services/cart-storage/cart-storage.service.ts",
            "properties": [
                {
                    "name": "key",
                    "defaultValue": "<const>'cart'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addToEmptyCart",
                    "args": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addToExistingCart",
                    "args": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "createCart",
                    "args": [],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "createCartItem",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ product: IProduct; count: number; }",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFromStorage",
                    "args": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "cart",
                            "type": "Cart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "replaceProductCount",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cart",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IProduct } from '~types/product';\nimport { StorageService } from '../storage/storage.service';\n\nexport interface ICartItem {\n  product: IProduct;\n  count: number;\n}\nexport type Cart = ICartItem[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartStorageService {\n  private readonly key = <const>'cart';\n\n  constructor(private storageService: StorageService) {}\n\n  public getProducts(): Cart {\n    const cartData = this.storageService.getItem(this.key);\n    return cartData && Array.isArray(cartData) ? cartData : this.createCart();\n  }\n\n  public addProduct({ product, count }: ICartItem): Cart {\n    const cart: Cart = this.getProducts();\n\n    if (cart.length) {\n      if (count > 0) {\n        return this.addToExistingCart(cart, { product, count });\n      }\n      this.deleteFromStorage(cart, product.id);\n    }\n    return this.addToEmptyCart(cart, { product, count });\n  }\n\n  public replaceProductCount(id: number, count: number): Cart {\n    const cart = this.getProducts();\n\n    if (cart.length) {\n      const itemindex = cart.findIndex((cartItem) => cartItem.product.id === id);\n\n      if (itemindex === -1) {\n        return cart;\n      }\n      cart[itemindex].count = count;\n      this.storageService.setItem(this.key, cart);\n    }\n    return cart;\n  }\n\n  public deleteProduct(id: number): Cart {\n    const cart: Cart = this.getProducts();\n\n    if (cart.length) {\n      return this.deleteFromStorage(cart, id);\n    }\n    return cart;\n  }\n\n  public clearAll(): Cart {\n    this.storageService.setItem(this.key, []);\n    return [];\n  }\n\n  private createCartItem(product: IProduct, count: number) {\n    return { product, count };\n  }\n\n  private createCart(): Cart {\n    this.storageService.setItem(this.key, []);\n    return [];\n  }\n\n  private addToEmptyCart(cart: Cart, { product, count }: ICartItem): Cart {\n    cart.push({ product, count });\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n\n  private addToExistingCart(cart: Cart, { product, count }: ICartItem): Cart {\n    const productIndex: number = cart.findIndex(\n      (itemInCart) => itemInCart.product.id === product.id\n    );\n    if (productIndex === -1) {\n      cart.push(this.createCartItem(product, count));\n    } else {\n      cart[productIndex].count = Number(cart[productIndex].count) + count;\n    }\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n\n  private deleteFromStorage(cart: Cart, id: number): Cart {\n    const productIndex = cart.findIndex((itemInCart) => itemInCart.product.id === id);\n\n    if (productIndex !== -1) {\n      cart.splice(productIndex, 1);\n    }\n\n    this.storageService.setItem(this.key, cart);\n    return cart;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storageService",
                        "type": "StorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "storageService",
                        "type": "StorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CommentsEffects",
            "id": "injectable-CommentsEffects-1aa34207061e3f6098a471835eba323f3c021fd516abfefe742a43440f72b7f4515f57276eefaa26bc56e0bcebd8cc95926dd2857a68d9a41149bf8be940a18b",
            "file": "src/app/pages/product/store/comments/comments.effects.ts",
            "properties": [
                {
                    "name": "loadComments$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions.pipe(\r\n      ofType(requestAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.apiCommentsService.getComments(id).pipe(\r\n          map((comments) => requestSuccessAction({ comments })),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "postComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions.pipe(\r\n      ofType(postAction),\r\n      switchMap(({ data }) =>\r\n        this.apiCommentsService.postComment(data).pipe(\r\n          map(() => {\r\n            this.reviewsService.resetForm();\r\n            return postSuccessAction();\r\n          }),\r\n          catchError((error) => of(postErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport {\r\n  postAction,\r\n  postErrorAction,\r\n  postSuccessAction,\r\n  requestAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './comments.actions';\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { ApiCommentsService } from 'src/app/services/api/api-comments/api-comments.service';\r\nimport { ReviewsService } from 'src/app/services/reviews/reviews.service';\r\n\r\n@Injectable()\r\nexport class CommentsEffects {\r\n  constructor(\r\n    private actions: Actions,\r\n    private apiCommentsService: ApiCommentsService,\r\n    private reviewsService: ReviewsService\r\n  ) {}\r\n\r\n  loadComments$ = createEffect(() =>\r\n    this.actions.pipe(\r\n      ofType(requestAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.apiCommentsService.getComments(id).pipe(\r\n          map((comments) => requestSuccessAction({ comments })),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  postComment$ = createEffect(() =>\r\n    this.actions.pipe(\r\n      ofType(postAction),\r\n      switchMap(({ data }) =>\r\n        this.apiCommentsService.postComment(data).pipe(\r\n          map(() => {\r\n            this.reviewsService.resetForm();\r\n            return postSuccessAction();\r\n          }),\r\n          catchError((error) => of(postErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiCommentsService",
                        "type": "ApiCommentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "actions",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiCommentsService",
                        "type": "ApiCommentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CommentsService",
            "id": "injectable-CommentsService-75921d95bee597ce7c97deb2f767e619b4e2c6f4735b978d8bb08bb134d77f562d6cf441ef72b704afe982dec94415a9e21e6ae8835475c1f3a6ba32190c337b",
            "file": "src/app/services/comments/comments.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "commentsIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<[] | null>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCommentsError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "postComment",
                    "args": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postCommentError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable< | null>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "postCommentLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestComments",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StoreService } from '../store/store.service';\nimport { commentsStore } from '~pages/product/store/comments';\nimport { IReview } from '~components/review/types';\nimport { INewReview } from '~components/review-form/types';\nimport { ErrorPayload } from '~types/apiPayloads';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n  constructor(private StoreService: StoreService) {}\n\n  public requestComments(id: number): void {\n    this.StoreService.dispatchRequestComments(id);\n  }\n\n  public getComments(): Observable<IReview[] | null> {\n    return this.StoreService.getComments();\n  }\n\n  public getCommentsError(): Observable<commentsStore.IState['error']> {\n    return this.StoreService.getCommentsError();\n  }\n\n  public postComment(formData: INewReview): void {\n    this.StoreService.dispatchPostComment(formData);\n  }\n\n  public postCommentLoading(): Observable<boolean> {\n    return this.StoreService.commentIsLoading();\n  }\n\n  public postCommentError(): Observable<ErrorPayload['error'] | null> {\n    return this.StoreService.commentError();\n  }\n\n  public commentsIsLoading(): Observable<boolean> {\n    return this.StoreService.commentsIsLoading();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CorporateClientsService",
            "id": "injectable-CorporateClientsService-84ac6f9721ee57d7b10864a247fbc3a2d95da2fc62831005b93357989d06b1e35c074cf72985926b1d5a6d8cbf8ac45dd01075d90aaf4ddde83da8e9472e7b02",
            "file": "src/app/services/corporate/corporate-clients.service.ts",
            "properties": [
                {
                    "name": "clearFormStream$",
                    "defaultValue": "this.clearFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearFormSubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "doClearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getRequestLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ICorporateUser } from '~pages/corporate-clients/component/types';\nimport { StoreService } from '../store/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CorporateClientsService {\n  private clearFormSubject: Subject<true> = new Subject();\n  private clearFormStream$: Observable<true> = this.clearFormSubject.asObservable();\n\n  constructor(private StoreService: StoreService) {}\n\n  public submitForm(data: ICorporateUser): void {\n    this.StoreService.dispatchCorporateClients(data);\n  }\n\n  get clearFormStream(): Observable<true> {\n    return this.clearFormStream$;\n  }\n\n  public doClearForm(): void {\n    this.clearFormSubject.next(true);\n  }\n\n  public getRequestLoading(): Observable<boolean> {\n    return this.StoreService.corporateLoading();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "clearFormStream": {
                    "name": "clearFormStream",
                    "getSignature": {
                        "name": "clearFormStream",
                        "type": "",
                        "returnType": "Observable<undefined>",
                        "line": 19
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "CorporateEffects",
            "id": "injectable-CorporateEffects-0b6dd684fd0a276745fb7e75c9d3c59550bac4d9ff5b67d7d058f5314bc41a9c74904316907535d3ac38064a1f244c82081bf2e6b204c521339210dc05cdb65c",
            "file": "src/app/store/corporate/corporate.effects.ts",
            "properties": [
                {
                    "name": "postFeedback$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiCorporateService.postRequest(data).pipe(\r\n          map(() => {\r\n            this.corporateClientsService.doClearForm();\r\n            return requestSuccessAction();\r\n          }),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './corporate.actions';\r\nimport { ApiCorporateService } from 'src/app/services/api/api-corporate/api-corporate.service';\r\nimport { CorporateClientsService } from 'src/app/services/corporate/corporate-clients.service';\r\n\r\n@Injectable()\r\nexport class CorporateEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiCorporateService: ApiCorporateService,\r\n    private corporateClientsService: CorporateClientsService\r\n  ) {}\r\n\r\n  postFeedback$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiCorporateService.postRequest(data).pipe(\r\n          map(() => {\r\n            this.corporateClientsService.doClearForm();\r\n            return requestSuccessAction();\r\n          }),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiCorporateService",
                        "type": "ApiCorporateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "corporateClientsService",
                        "type": "CorporateClientsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiCorporateService",
                        "type": "ApiCorporateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "corporateClientsService",
                        "type": "CorporateClientsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DeliveryService",
            "id": "injectable-DeliveryService-9cbca831954d709d73f2516e7e0c63661118556ff962941fa8667c6ac10c52266869ddab2dc9272af3acdb0dcdb0de9491c5f3fd4f23afadc313cc9ee4ea6dc4",
            "file": "src/app/services/delivery/delivery.service.ts",
            "properties": [
                {
                    "name": "deliveryPrice",
                    "defaultValue": "{\n    courier: 400,\n    pickup: 0\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getPrice",
                    "args": [
                        {
                            "name": "method",
                            "type": "\"courier\" | \"pickup\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "\"courier\" | \"pickup\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryService {\n  private deliveryPrice = {\n    courier: 400,\n    pickup: 0\n  };\n\n  public getPrice(method: 'courier' | 'pickup'): number {\n    if (method in this.deliveryPrice) {\n      return this.deliveryPrice[method];\n    }\n    return 0;\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "DestroyerSubscriptionsService",
            "id": "injectable-DestroyerSubscriptionsService-58e63e5bb81be7cedbe341eeb357ff6d71b8774b7cd2f6245f88258f9491124a55e4138f755c8d4743e595b7489b7bc15430b45c582cb724e89b0c0abba79a10",
            "file": "src/app/services/events/destroyer-subscriptions.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "destroyAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { KeydownEventService } from './keydown/keydown-event.service';\nimport { PointerEventService } from './pointer/pointer-event.service';\nimport { ViewportSizeService } from './resize/viewport-size.service';\nimport { ScrollEventService } from './scroll/scroll-event.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestroyerSubscriptionsService {\n  constructor(\n    private vss: ViewportSizeService,\n    private pointerEventService: PointerEventService,\n    private keydownEventService: KeydownEventService,\n    private scrollEventService: ScrollEventService\n  ) {}\n\n  public destroyAll(): void {\n    this.keydownEventService.destroy();\n    this.pointerEventService.destroy();\n    this.scrollEventService.destroy();\n    this.vss.destroy();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pointerEventService",
                        "type": "PointerEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "keydownEventService",
                        "type": "KeydownEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "scrollEventService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pointerEventService",
                        "type": "PointerEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "keydownEventService",
                        "type": "KeydownEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "scrollEventService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FakeBackendService",
            "id": "injectable-FakeBackendService-4ad9065a54bbbaa076b4b89d6356b6b2980e570d54d201a4e2fd8d5572bb02325f12092970e24cb79da089444f2303be61b16b1f628dac15071ce65771e6c74b",
            "file": "src/app/services/fake/fake-backend/fake-backend.service.ts",
            "properties": [
                {
                    "name": "comments",
                    "defaultValue": "[\n    {\n      author: 'Анна',\n      comment: 'Лучшая доставка цветов в городе!',\n      date: new Date('04.16.2023'),\n      rating: 5\n    },\n    {\n      author: 'Василий',\n      comment: `Лучшая доставка цветов в городе! Быстро доставили, привезли к нужному\n      времени, а сам букет превзошел все ожидания!`,\n      date: new Date('04.16.2023'),\n      rating: 5\n    },\n    {\n      author: 'Дмитрий',\n      comment: 'Лучшая доставка цветов в городе!',\n      date: new Date('04.16.2023'),\n      rating: 4\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<IProduct[]>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postComment",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "postFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "postOrder",
                    "args": [
                        {
                            "name": "isResponseSuccess",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type | Error>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isResponseSuccess",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postRequestCorporate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError, timer, toArray } from 'rxjs';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { products } from 'src/data/fakeBackendData/products';\nimport { IProduct } from '~types/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeBackendService {\n  public get(url: string) {\n    if (url.includes('/products')) {\n      return this.getProducts();\n    }\n    if (url.includes('/product')) {\n      const id = url.match(/\\d+/)?.[0];\n      return id\n        ? this.getProduct(Number(id))\n        : throwError(() => ({\n            error: 'Not found'\n          }));\n    }\n\n    if (url.includes('/comments')) {\n      return this.getComments();\n    }\n\n    return throwError(() => ({\n      error: 'Error'\n    }));\n  }\n\n  public post(url: string, data: any) {\n    if (url.includes('/order')) {\n      return this.postOrder();\n    }\n    if (url.includes('/corporate')) {\n      return this.postRequestCorporate();\n    }\n    if (url.includes('/feedback')) {\n      return this.postFeedback();\n    }\n    if (url.includes('/comment')) {\n      return this.postComment();\n    }\n\n    return throwError(() => ({\n      error: 'Error'\n    }));\n  }\n\n  private getProducts(): Observable<IProduct[]> {\n    return from(products).pipe(toArray());\n  }\n  private postOrder(isResponseSuccess = true): Observable<{ id: string } | Error> {\n    return timer(4000).pipe(\n      switchMap(() =>\n        of(isResponseSuccess).pipe(\n          map((value) => (value ? { id: '234234234' } : Error('Payment error')))\n        )\n      )\n    );\n  }\n  private postRequestCorporate(): Observable<{ data: 'success' }> {\n    return timer(4000).pipe(map(() => ({ data: 'success' })));\n  }\n  private postFeedback(): Observable<{ data: 'success' }> {\n    return timer(4000).pipe(map(() => ({ data: 'success' })));\n  }\n  private postComment(): Observable<{ data: 'success' }> {\n    return timer(4000).pipe(map(() => ({ data: 'success' })));\n  }\n  private getProduct(id: number): Observable<any> {\n    return from(products).pipe(first((product) => Number(product.id) === Number(id)));\n  }\n  private getComments() {\n    return timer(4000).pipe(map(() => this.comments));\n  }\n\n  comments = [\n    {\n      author: 'Анна',\n      comment: 'Лучшая доставка цветов в городе!',\n      date: new Date('04.16.2023'),\n      rating: 5\n    },\n    {\n      author: 'Василий',\n      comment: `Лучшая доставка цветов в городе! Быстро доставили, привезли к нужному\n      времени, а сам букет превзошел все ожидания!`,\n      date: new Date('04.16.2023'),\n      rating: 5\n    },\n    {\n      author: 'Дмитрий',\n      comment: 'Лучшая доставка цветов в городе!',\n      date: new Date('04.16.2023'),\n      rating: 4\n    }\n  ];\n}\n",
            "type": "injectable"
        },
        {
            "name": "FakeHttpClientService",
            "id": "injectable-FakeHttpClientService-185f7c9cbcebddf6d7fff250b1a6c3e863a7981f8082e2d396041fe7d0931c42604db03a50b00703a998eb8694c500cc664700e621d95c3e09a492a4992985c5",
            "file": "src/app/services/fake/fake-http-client/fake-http-client.service.ts",
            "properties": [
                {
                    "name": "timerValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, switchMap, timer } from 'rxjs';\nimport { FakeBackendService } from '../fake-backend/fake-backend.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeHttpClientService {\n  timerValue = 0;\n\n  constructor(private fakeBackendService: FakeBackendService) {}\n\n  public get<T>(url: string, options: {}): Observable<T> {\n    return timer(this.timerValue).pipe(switchMap(() => this.fakeBackendService.get(url)));\n  }\n\n  public post<T>(url: string, data: any, options?: {}): Observable<any> {\n    return timer(this.timerValue).pipe(switchMap(() => this.fakeBackendService.post(url, data)));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fakeBackendService",
                        "type": "FakeBackendService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "fakeBackendService",
                        "type": "FakeBackendService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FeedbackEffects",
            "id": "injectable-FeedbackEffects-3584d6336a71c02562434597ad2a77b8cc5fee025619d14714b2ada441f68c6a2885153d424da4ab4dbd145980c10ebeb8d02a31fb0c3efaba08c91fc6f93d6e",
            "file": "src/app/store/feedback/feedback.effects.ts",
            "properties": [
                {
                    "name": "postFeedback$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiFeedbackService.postFeedback(data).pipe(\r\n          map(() => {\r\n            this.feedbackService.doClearForm();\r\n            return requestSuccessAction();\r\n          }),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\n\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './feedback.actions';\r\nimport { FeedbackService } from 'src/app/services/feedback/feedback.service';\r\nimport { ApiFeedbackService } from 'src/app/services/api/api-feedback/api-feedback.service';\r\n\r\n@Injectable()\r\nexport class FeedbackEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiFeedbackService: ApiFeedbackService,\r\n    private feedbackService: FeedbackService\r\n  ) {}\r\n\r\n  postFeedback$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiFeedbackService.postFeedback(data).pipe(\r\n          map(() => {\r\n            this.feedbackService.doClearForm();\r\n            return requestSuccessAction();\r\n          }),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiFeedbackService",
                        "type": "ApiFeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiFeedbackService",
                        "type": "ApiFeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FeedbackService",
            "id": "injectable-FeedbackService-6395faf01838f23452a2217e3956d5b686bb11382aeaabdf7569408fd865432377bfdf05ef8f9711b45069b0d34ba95ffc444ba9731f69c81c88df4f8814e3c1",
            "file": "src/app/services/feedback/feedback.service.ts",
            "properties": [
                {
                    "name": "clearForm$",
                    "defaultValue": "this.clearFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearFormSubject",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "doClearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getClearFormStream$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getFeedbackIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { IFeedbackData } from '~components/feedback-form/types';\nimport { StoreService } from '../store/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  private clearFormSubject = new Subject<boolean>();\n  private clearForm$ = this.clearFormSubject.asObservable();\n\n  constructor(private StoreService: StoreService) {}\n\n  public submitForm(data: IFeedbackData): void {\n    this.StoreService.dispatchPostFeedback(data);\n  }\n\n  public getClearFormStream$(): Observable<boolean> {\n    return this.clearForm$;\n  }\n\n  public getFeedbackIsLoading(): Observable<boolean> {\n    return this.StoreService.feedbackIsLoading();\n  }\n\n  public doClearForm(): void {\n    this.clearFormSubject.next(true);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpService",
            "id": "injectable-HttpService-7ea746b26bc4b40a96947ccf18a2ca0739ab9585799e1ca648df3020be12315f1cada44d7e69b220645310fbc648120f4bdf1e31a17af925e6fb67209b2332a0",
            "file": "src/app/services/http/http.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "U",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | any>",
                    "typeParameters": [
                        "T",
                        "U"
                    ],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "U",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FakeHttpClientService } from '../fake/fake-http-client/fake-http-client.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  constructor(private http: FakeHttpClientService) {}\r\n\r\n  public get<T>(url: string, options = {}): Observable<T> {\r\n    return this.http.get<T>(url, options);\r\n  }\r\n\r\n  public post<T, U>(url: string, data: U): Observable<T | any> {\r\n    return this.http.post<T>(url, data);\r\n  }\r\n\r\n  // public put<T, U>(url: string, data: U): Observable<T> {\r\n  //   return this.http.put<T>(url, data);\r\n  // }\r\n\r\n  // public delete<T, U>(url: string, data: U): Observable<T> {\r\n  //   return this.http.delete<T>(url, data);\r\n  // }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "FakeHttpClientService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "FakeHttpClientService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HydrationStoreService",
            "id": "injectable-HydrationStoreService-a044546308400e731948bb5efbc61218c1b77a44aff0d3072420eece2a4ce3c9b351503558f63e86952369d38c2388347cbc118bc64fe492f751e5ab11526a02",
            "file": "src/app/services/hydration-store.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTransferProductsStore",
                    "args": [],
                    "optional": false,
                    "returnType": "productsStore.IState",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getTransferProductStore",
                    "args": [],
                    "optional": false,
                    "returnType": "productStore.IState",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isExistTransferedProductsStore",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isExistTransferedProductStore",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isTransferedProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isTransferedProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "transferProductsStore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "transferProductStore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { StoreService } from './store/store.service';\nimport { TransferState } from '@angular/platform-browser';\nimport { PRODUCTS_STORE_TRANSFER_KEY } from '../store/products/products.reducer';\nimport { PRODUCT_STORE_TRANSFER_KEY } from '~pages/product/store/product/product.reducer';\nimport { productStore } from '~pages/product/store/product';\nimport { productsStore } from '../store/products';\nimport { Observable } from 'rxjs';\nimport { IS_PLATFORM_BROWSER_TOKEN } from '../tokens/isPlatformBrowser';\nimport { IS_PLATFORM_SERVER_TOKEN } from '../tokens/isPlatformServer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HydrationStoreService {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(IS_PLATFORM_BROWSER_TOKEN) private isPlatformBrowserFn: (id: string) => boolean,\n    @Inject(IS_PLATFORM_SERVER_TOKEN) private isPlatformServerFn: (id: string) => boolean,\n    private transferState: TransferState,\n    private storeService: StoreService\n  ) {}\n\n  public transferProductsStore(): void {\n    if (this.isPlatformServerFn(this.platformId)) {\n      this.storeService.getRootStore().subscribe((store) => {\n        this.transferState.set(PRODUCTS_STORE_TRANSFER_KEY, store[productsStore.FEATURE_KEY]);\n      });\n    }\n  }\n\n  public transferProductStore(): void {\n    if (this.isPlatformServerFn(this.platformId)) {\n      this.storeService.getRootStore().subscribe((store) => {\n        this.transferState.set(PRODUCT_STORE_TRANSFER_KEY, store[productStore.FEATURE_KEY]);\n      });\n    }\n  }\n\n  public isExistTransferedProductsStore(): boolean {\n    return this.transferState.hasKey(PRODUCTS_STORE_TRANSFER_KEY);\n  }\n\n  public isExistTransferedProductStore(): boolean {\n    return this.transferState.hasKey(PRODUCT_STORE_TRANSFER_KEY);\n  }\n\n  public getTransferProductsStore(): productsStore.IState {\n    return this.transferState.get(PRODUCTS_STORE_TRANSFER_KEY, productsStore.initialState);\n  }\n\n  public getTransferProductStore(): productStore.IState {\n    return this.transferState.get(PRODUCT_STORE_TRANSFER_KEY, productStore.initialState);\n  }\n\n  public isTransferedProducts(): Observable<boolean> {\n    return this.storeService.isHydrateProducts();\n  }\n\n  public isTransferedProduct(): Observable<boolean> {\n    return this.storeService.isHydrateProduct();\n  }\n\n  get isPlatformServer(): boolean {\n    return this.isPlatformServerFn(this.platformId);\n  }\n\n  get isPlatformBrowser(): boolean {\n    return this.isPlatformBrowserFn(this.platformId);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isPlatformBrowserFn",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ]
                    },
                    {
                        "name": "isPlatformServerFn",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ]
                    },
                    {
                        "name": "transferState",
                        "type": "TransferState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isPlatformBrowserFn",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isPlatformServerFn",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transferState",
                        "type": "TransferState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isPlatformServer": {
                    "name": "isPlatformServer",
                    "getSignature": {
                        "name": "isPlatformServer",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 64
                    }
                },
                "isPlatformBrowser": {
                    "name": "isPlatformBrowser",
                    "getSignature": {
                        "name": "isPlatformBrowser",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 68
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "KeydownEventService",
            "id": "injectable-KeydownEventService-c94e6bf789ebc930a2e0e77b1d247e1da75ac20036023b0f23f31e3d6c726374448550feef440e6168afa95df542590bb4a59d19b738098d5bd5b3daf0bce137",
            "file": "src/app/services/events/keydown/keydown-event.service.ts",
            "properties": [
                {
                    "name": "_destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_keydownObservable$",
                    "defaultValue": "fromEvent<KeyboardEvent>(this.document, 'keydown').pipe(\r\n    takeUntil(this._destroySubject),\r\n    map(this.getKey)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_keydownSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<KeydownKey>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getKey",
                    "args": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable, Subject, fromEvent, map, takeUntil } from 'rxjs';\r\n\r\nexport type KeydownKey = KeyboardEvent['key'];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeydownEventService {\r\n  private _destroySubject = new Subject();\r\n  private _keydownSubject: Subject<KeydownKey>;\r\n  private _keydownObservable$ = fromEvent<KeyboardEvent>(this.document, 'keydown').pipe(\r\n    takeUntil(this._destroySubject),\r\n    map(this.getKey)\r\n  );\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {\r\n    this._keydownSubject = new Subject<KeydownKey>();\r\n    this._keydownObservable$.subscribe(this._keydownSubject);\r\n  }\r\n\r\n  private getKey(ev: KeyboardEvent): KeyboardEvent['key'] {\r\n    return ev.key;\r\n  }\r\n\r\n  public get keydownObservable$(): Observable<KeydownKey> {\r\n    return this._keydownSubject;\r\n  }\r\n\r\n  public destroy() {\r\n    this._destroySubject.next(null);\r\n    this._destroySubject.complete();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "keydownObservable$": {
                    "name": "keydownObservable$",
                    "getSignature": {
                        "name": "keydownObservable$",
                        "type": "",
                        "returnType": "Observable<KeydownKey>",
                        "line": 27
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "NotificationsEffects",
            "id": "injectable-NotificationsEffects-b76900910e216173cec5a6488ea18cc19ee57b9fc4460efd62cc23c80d678c292703e6f192627ed1e37c53ed78ddce8acabc369359efe14e9008a41dc21df43a",
            "file": "src/app/store/notifications/notifications.effects.ts",
            "properties": [
                {
                    "name": "addToCart$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(cartStore.postProductSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Товар добавлен в корзину!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "postComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(commentsStore.postSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "postCorporate$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(corporateStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "postFeedback$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(feedbackStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "postOrder$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(orderStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map } from 'rxjs';\r\nimport { addAction } from './notifications.actions';\r\nimport { corporateStore } from '../corporate';\r\nimport { feedbackStore } from '../feedback';\r\nimport { orderStore } from '../order';\r\nimport { commentsStore } from '~pages/product/store/comments';\r\nimport { cartStore } from '../cart';\r\nimport { generateRandomString } from '~utils/randomString';\r\n\r\n@Injectable()\r\nexport class NotificationsEffects {\r\n  constructor(private actions$: Actions) {}\r\n\r\n  postFeedback$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(feedbackStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n\r\n  postCorporate$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(corporateStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n\r\n  postOrder$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(orderStore.requestSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n\r\n  postComment$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(commentsStore.postSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Данные успешно отправлены!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n\r\n  addToCart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(cartStore.postProductSuccessAction),\r\n      map(() =>\r\n        addAction({\r\n          notify: {\r\n            title: 'Товар добавлен в корзину!',\r\n            type: 'success',\r\n            id: generateRandomString()\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NotificationsService",
            "id": "injectable-NotificationsService-3fa82ec4aa83d15a019394107fb663d86a9733b39aa3e1d1ca60ff340c097f932ab1057720efdbd3957378ebb6ebb8fa83b437632aaca8a4e95d1f5e25d21be3",
            "file": "src/app/services/notifications/notifications.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getNotifications",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<[] | >",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { INotifyWithId } from 'src/app/store/notifications/notifications.reducer';\nimport { StoreService } from '../store/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  constructor(private StoreService: StoreService) {}\n\n  public getNotifications(): Observable<INotifyWithId[] | []> {\n    return this.StoreService.getNotifications();\n  }\n\n  public remove(id: INotifyWithId['id']): void {\n    this.StoreService.dispatchRemoveNotify(id);\n  }\n\n  public removeAll(): void {\n    this.StoreService.dispatchRemoveNotifyAll();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrderEffects",
            "id": "injectable-OrderEffects-e15eee78e971b256816fa8d9b9003ab810f95f5ced10a7f3f9c468f0ff350676d0e52664501e1ed0f19d3b6a21c3f129a8bf6197afc3b434386dcf2a6079ec15",
            "file": "src/app/store/order/order.effects.ts",
            "properties": [
                {
                    "name": "submitOrder$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiOrderService.postOrder(data).pipe(\r\n          map((response: { id: string }) => {\r\n            this.orderService.doClearForm();\r\n            this.cartService.clearAll();\r\n            this.router.navigate(['/order/successful', response.id]);\r\n            return requestSuccessAction(response);\r\n          }),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        )\r\n      )\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\n\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { requestAction, requestErrorAction, requestSuccessAction } from './order.actions';\r\nimport { Router } from '@angular/router';\r\nimport { ApiOrderService } from 'src/app/services/api/api-order/api-order.service';\r\nimport { OrderService } from 'src/app/services/order/order.service';\r\nimport { CartService } from 'src/app/services/cart/cart.service';\r\n\r\n@Injectable()\r\nexport class OrderEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private apiOrderService: ApiOrderService,\r\n    private orderService: OrderService,\r\n    private cartService: CartService\r\n  ) {}\r\n\r\n  submitOrder$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap((data) =>\r\n        this.apiOrderService.postOrder(data).pipe(\r\n          map((response: { id: string }) => {\r\n            this.orderService.doClearForm();\r\n            this.cartService.clearAll();\r\n            this.router.navigate(['/order/successful', response.id]);\r\n            return requestSuccessAction(response);\r\n          }),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiOrderService",
                        "type": "ApiOrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiOrderService",
                        "type": "ApiOrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrderService",
            "id": "injectable-OrderService-e8cd9ea94532287de3335aeef68509af8c1ab21728a8e8bb8fe6f1b77727fa167ed79d74974b28d70207ad532c5559d6d57a277d99c5c556495e67c8e1b84007",
            "file": "src/app/services/order/order.service.ts",
            "properties": [
                {
                    "name": "resetFormStream",
                    "defaultValue": "this.resetFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resetFormSubject",
                    "defaultValue": "new Subject<true>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "doClearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getOrderLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getResetFormStream",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "postOrder",
                    "args": [
                        {
                            "name": "data",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreService } from '../store/store.service';\nimport { IOrderData } from '~pages/order/component/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private resetFormSubject = new Subject<true>();\n  private resetFormStream = this.resetFormSubject.asObservable();\n\n  constructor(private store: StoreService) {}\n\n  public doClearForm(): void {\n    this.resetFormSubject.next(true);\n  }\n\n  public getResetFormStream(): Observable<true> {\n    return this.resetFormStream;\n  }\n\n  public getOrderLoading(): Observable<boolean> {\n    return this.store.orderLoading();\n  }\n\n  public postOrder(data: IOrderData): void {\n    this.store.dispatchOrder(data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ParamsService",
            "id": "injectable-ParamsService-abd27b332a30f28722d2ee4142d40bf52dcd445c9104e34be4f7b6768899bad4403852c29aad26a9ca42be8945cead9c918ce31b054de0847cdea6f457343854",
            "file": "src/app/services/params/params.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "convertDataToParams",
                    "args": [
                        {
                            "name": "formData",
                            "type": "Partial<IFormData>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "IOptionsConvertParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n      isRemovedEmpty: true\n    }"
                        }
                    ],
                    "optional": false,
                    "returnType": "IQueryParams",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "Partial<IFormData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "IOptionsConvertParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n      isRemovedEmpty: true\n    }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertParamsToData",
                    "args": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "initData",
                            "type": "IFormData<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string | number | symbol, any>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initData",
                            "type": "IFormData<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertRangeToParams",
                    "args": [
                        {
                            "name": "rangeValue",
                            "type": "Partial<IRangeValue>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IQueryParams",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rangeValue",
                            "type": "Partial<IRangeValue>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getArrayFilledVallues",
                    "args": [
                        {
                            "name": "objectValues",
                            "type": "ICheckboxesGroupData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isRemovedEmpty",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "objectValues",
                            "type": "ICheckboxesGroupData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isRemovedEmpty",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDataWidthoutDefault",
                    "args": [
                        {
                            "name": "current",
                            "type": "Partial<IFormData> | Partial<ICheckboxesGroupData>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "initial",
                            "type": "Partial<IFormData> | Partial<ICheckboxesGroupData>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Partial | Partial",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "current",
                            "type": "Partial<IFormData> | Partial<ICheckboxesGroupData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initial",
                            "type": "Partial<IFormData> | Partial<ICheckboxesGroupData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getExternalParams",
                    "args": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string, string>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDifferArray",
                    "args": [
                        {
                            "name": "arrayFirst",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arraySecond",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "arrayFirst",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arraySecond",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNotDiffersArray",
                    "args": [
                        {
                            "name": "valueFirst",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "valueSecond",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "valueFirst",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "valueSecond",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateRelativeActivated",
                    "args": [
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetParams",
                    "args": [
                        {
                            "name": "resettableParams",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "resettableParams",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setParams",
                    "args": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "initialParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { IObject, isArray, isObject } from 'src/types';\nimport { IRangeValue } from '~components/range/types';\nimport { IFormData, IOptionsConvertParams, IQueryParams } from './types';\nimport { ICheckboxesGroupData } from '~components/filters-form/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParamsService {\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  public getExternalParams(currentParams: Params, allParams: Params) {\n    const result: Record<string, string> = {};\n\n    for (const [key, value] of Object.entries(allParams)) {\n      if (!(key in currentParams)) {\n        result[key] = value;\n      }\n    }\n    return result;\n  }\n\n  resetParams<T extends Params>(resettableParams: T) {\n    const queryParamsAll = this.activatedRoute.snapshot.queryParams;\n    const externalParams = this.getExternalParams(resettableParams, queryParamsAll);\n    this.navigateRelativeActivated(externalParams);\n  }\n\n  setParams(currentParams: Params, initialParams: Params) {\n    const queryParamsAll = this.activatedRoute.snapshot.queryParams;\n    const externalParams = this.getExternalParams(initialParams, queryParamsAll);\n    const filterParamsWithExternal = {\n      ...currentParams,\n      ...externalParams\n    };\n    this.navigateRelativeActivated(filterParamsWithExternal);\n  }\n\n  private navigateRelativeActivated(params: Params): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: params\n    });\n  }\n\n  public convertDataToParams(\n    formData: Partial<IFormData>,\n    options: IOptionsConvertParams = {\n      isRemovedEmpty: true\n    }\n  ): IQueryParams {\n    let queryParams: IQueryParams = {};\n\n    for (const [key, value] of Object.entries(formData)) {\n      if (Array.isArray(value) && value.length === 0 && options.isRemovedEmpty) {\n        continue;\n      }\n      if (Array.isArray(value)) {\n        queryParams[key] = value;\n        continue;\n      }\n      if (value && typeof value === 'object' && ('from' in value || 'to' in value)) {\n        queryParams = {\n          ...queryParams,\n          ...this.convertRangeToParams(<IRangeValue>value, key)\n        };\n      }\n      if (\n        value &&\n        typeof value === 'object' &&\n        !Array.isArray(value) &&\n        !('from' in value || 'to' in value)\n      ) {\n        queryParams[key] = this.getArrayFilledVallues(\n          <ICheckboxesGroupData>value,\n          options.isRemovedEmpty\n        );\n        continue;\n      }\n      if (\n        (value !== null &&\n          !value &&\n          !options.isRemovedEmpty &&\n          (typeof value === 'string' || typeof value === 'number')) ||\n        (value && typeof value === 'string') ||\n        typeof value === 'number'\n      ) {\n        queryParams[key] = value;\n      }\n    }\n    return queryParams;\n  }\n\n  public convertRangeToParams(rangeValue: Partial<IRangeValue>, key: string): IQueryParams {\n    const rangeParams: IQueryParams = {};\n\n    if ('from' in rangeValue && rangeValue.from) {\n      const keyFrom = key + 'from';\n      rangeParams[keyFrom] = rangeValue.from;\n    }\n    if ('to' in rangeValue && rangeValue.to) {\n      const keyTo = key + 'to';\n      rangeParams[keyTo] = rangeValue.to;\n    }\n    return rangeParams;\n  }\n\n  private getArrayFilledVallues(\n    objectValues: ICheckboxesGroupData,\n    isRemovedEmpty = true\n  ): string[] {\n    const result = [];\n\n    for (const [key, value] of Object.entries(objectValues)) {\n      if (!isRemovedEmpty) {\n        result.push(key);\n        continue;\n      }\n      if ((value === false || value === null) && isRemovedEmpty) {\n        continue;\n      }\n      result.push(key);\n    }\n    return result;\n  }\n\n  public getDataWidthoutDefault(\n    current: Partial<IFormData> | Partial<ICheckboxesGroupData>,\n    initial: Partial<IFormData> | Partial<ICheckboxesGroupData>\n  ): Partial<IFormData> | Partial<ICheckboxesGroupData> {\n    const result: Partial<IFormData> = {};\n\n    for (const [key, value] of Object.entries(current)) {\n      const initialValue = initial[key];\n      if (this.isNotDiffersArray(value, initialValue)) {\n        continue;\n      }\n      if (\n        value &&\n        typeof value === 'object' &&\n        !isArray(value) &&\n        isObject(initialValue) &&\n        !isArray(initialValue)\n      ) {\n        const resultInnerValue = this.getDataWidthoutDefault(value, initialValue);\n        if (Object.entries(resultInnerValue).length) {\n          result[key] = <ICheckboxesGroupData>resultInnerValue;\n        }\n        continue;\n      }\n      if (value === initial[key]) {\n        continue;\n      }\n      if (\n        (value === null || value === false) &&\n        (initial[key] === null || initial[key] === false)\n      ) {\n        continue;\n      }\n      result[key] = value;\n    }\n    return result;\n  }\n\n  private isNotDiffersArray(valueFirst: unknown, valueSecond: unknown): boolean {\n    return Boolean(\n      valueFirst &&\n        valueSecond &&\n        Array.isArray(valueFirst) &&\n        Array.isArray(valueSecond) &&\n        !this.isDifferArray(valueFirst, valueSecond)\n    );\n  }\n\n  public isDifferArray(arrayFirst: string[], arraySecond: string[]): boolean {\n    if (arrayFirst.length !== arraySecond.length) {\n      return true;\n    }\n    for (const itemFirst of arrayFirst) {\n      if (arraySecond.some((itemSecond) => itemSecond === itemFirst)) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public convertParamsToData<T = Array<string>>(currentParams: Params, initData: IFormData<T>) {\n    const result = <Record<keyof IFormData<T>, IFormData<T>[keyof IFormData<T>]>>{};\n\n    if (!currentParams) {\n      return result;\n    }\n\n    for (const key of Object.keys(initData)) {\n      if (key in currentParams) {\n        const valuesFromParams = currentParams[key];\n\n        if (Array.isArray(valuesFromParams) && Array.isArray(initData[key])) {\n          result[key] = valuesFromParams;\n        }\n        if (\n          !Array.isArray(valuesFromParams) &&\n          typeof valuesFromParams !== 'object' &&\n          Array.isArray(initData[key])\n        ) {\n          result[key] = [currentParams[key]];\n        }\n        if (\n          !Array.isArray(valuesFromParams) &&\n          typeof valuesFromParams !== 'object' &&\n          !Array.isArray(initData[key]) &&\n          typeof initData[key] === 'object'\n        ) {\n          result[key] = result[key] ?? {};\n          (<IObject>result[key])[valuesFromParams] = true;\n        }\n        if (\n          Array.isArray(currentParams[key]) &&\n          typeof currentParams[key] === 'object' &&\n          !Array.isArray(initData[key]) &&\n          typeof initData[key] === 'object'\n        ) {\n          result[key] = result[key] ?? {};\n          currentParams[key].forEach((item: string) => ((<IObject>result[key])[item] = true));\n        }\n      }\n      const valueFromInit = initData[key];\n\n      if (\n        valueFromInit &&\n        typeof valueFromInit === 'object' &&\n        valueFromInit &&\n        'to' in valueFromInit &&\n        key + 'to' in currentParams\n      ) {\n        result[key] = result[key] ?? {};\n        (<IObject>result[key])['to'] = Number(currentParams[key + 'to']);\n      }\n      if (\n        valueFromInit &&\n        typeof valueFromInit === 'object' &&\n        valueFromInit &&\n        'from' in valueFromInit &&\n        key + 'from' in currentParams\n      ) {\n        result[key] = result[key] ?? {};\n        (<IObject>result[key])['from'] = Number(currentParams[key + 'from']);\n      }\n      if (typeof valueFromInit === 'string' && typeof currentParams[key] === 'string') {\n        result[key] = currentParams[key];\n      }\n      if (typeof valueFromInit === 'number' && typeof currentParams[key] === 'number') {\n        result[key] = currentParams[key];\n      }\n    }\n\n    return result;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PointerEventService",
            "id": "injectable-PointerEventService-5cb13f1e00105083f523911e921facfe2ef61aad4564bee82bd50cee71245396086f0ef92ef8f3fd6aed8c0f5d739ffab3bcbfcef19a81581a30b8ab870932f8",
            "file": "src/app/services/events/pointer/pointer-event.service.ts",
            "properties": [
                {
                    "name": "_destroySubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pointerSubject$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<IPointerEvent>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getPointerPosition",
                    "args": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IPointerEvent",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToPointermove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, fromEvent, map, takeUntil } from 'rxjs';\n\nexport interface IPointerPosition {\n  clientX: PointerEvent['clientX'];\n  clientY: PointerEvent['clientX'];\n}\n\nexport interface IPointerEvent extends IPointerPosition {\n  pointerType: PointerEvent['pointerType'];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerEventService {\n  private _destroySubject: Subject<null>;\n  private _pointerSubject$: Subject<IPointerEvent>;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this._destroySubject = new Subject();\n    this._pointerSubject$ = new Subject<IPointerEvent>();\n    this.subscribeToPointermove();\n  }\n\n  private subscribeToPointermove(): void {\n    fromEvent<PointerEvent>(this.document, 'pointermove')\n      .pipe(takeUntil(this._destroySubject), map(this.getPointerPosition))\n      .subscribe(this._pointerSubject$);\n  }\n\n  private getPointerPosition(ev: PointerEvent): IPointerEvent {\n    return { pointerType: ev.pointerType, clientX: ev.clientX, clientY: ev.clientY };\n  }\n\n  public get pointermoveObservable$(): Observable<IPointerEvent> {\n    return this._pointerSubject$;\n  }\n\n  public destroy(): void {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "pointermoveObservable$": {
                    "name": "pointermoveObservable$",
                    "getSignature": {
                        "name": "pointermoveObservable$",
                        "type": "",
                        "returnType": "Observable<IPointerEvent>",
                        "line": 37
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "ProductContainerService",
            "id": "injectable-ProductContainerService-d5eeabc54e49a77e5c239789cf10da79548d1393f66148bcc69946e941945208e3d8fd5ba4bf8a0ce952e26205a293793c08d1a1881874d6e68a93abf68dca95",
            "file": "src/app/services/product-container/product-container.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "itemCart",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "itemCart",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getKeywordsMeta",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MetaDefinition",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProductError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHydrateProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CATEGORY_NAME, EnumCategories, EnumFlower, FLOWER_NAME, IProduct } from '~types/product';\nimport { productStore } from '~pages/product/store/product';\nimport { ICartItem } from '../cart-storage/cart-storage.service';\nimport { CartService } from '../cart/cart.service';\nimport { ProductsService } from '../products/products.service';\nimport { MetaDefinition } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductContainerService {\n  constructor(private productService: ProductsService, private cartService: CartService) {}\n\n  public requestProduct(id: IProduct['id']) {\n    this.productService.requestProduct(id);\n  }\n\n  public getProduct(): Observable<productStore.IState['product']> {\n    return this.productService.getProduct();\n  }\n\n  public getProductError(): Observable<productStore.IState['error']> {\n    return this.productService.getProductError();\n  }\n\n  public productIsLoading(): Observable<productStore.IState['isLoading']> {\n    return this.productService.productIsLoading();\n  }\n\n  public addToCart(itemCart: ICartItem): void {\n    this.cartService.addToCart(itemCart);\n  }\n\n  public isHydrateProduct(): Observable<productStore.IState['isHydrateSuccess']> {\n    return this.productService.isHydrateProduct();\n  }\n\n  public getKeywordsMeta(product: IProduct): MetaDefinition {\n    const categoriesWords = product.categories\n      .map((category) => CATEGORY_NAME[EnumCategories[category]])\n      .join(' ');\n    const flowersWords = product.flowers.map((flower) => FLOWER_NAME[EnumFlower[flower]]).join(' ');\n\n    return {\n      name: 'keywords',\n      content: `${product.title} ${categoriesWords} ${flowersWords}`\n    };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductEffects",
            "id": "injectable-ProductEffects-fbd5b23707e14f64df309748395d19fc85c5d956ff0a2db3c1a6a8228e83f1899031c8130114ccc8a365085450fcc820c4bba4c40171aec9085c8d82ae86bc69",
            "file": "src/app/pages/product/store/product/product.effects.ts",
            "properties": [
                {
                    "name": "hydrate$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(hydrateAction),\r\n      map(() => {\r\n        if (this.hydrationStoreService.isExistTransferedProductStore()) {\r\n          return hydrateSuccessAction({\r\n            payload: this.hydrationStoreService.getTransferProductStore()\r\n          });\r\n        }\r\n        return hydrateErrorAction();\r\n      })\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "loadProduct$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.hydrationStoreService.isTransferedProduct().pipe(\r\n          first(),\r\n          map((isTransfer) => ({ isTransfer, id }))\r\n        )\r\n      ),\r\n      switchMap(({ isTransfer, id }) => {\r\n        if (isTransfer) {\r\n          return of(requestCancelAction());\r\n        }\r\n        return this.apiProductService.getProduct(id).pipe(\r\n          map((product) => requestSuccessAction({ product })),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        );\r\n      })\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "transferProduct$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(requestSuccessAction),\r\n        map(() => {\r\n          if (this.hydrationStoreService.isPlatformServer) {\r\n            this.hydrationStoreService.transferProductStore();\r\n          }\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                }
            ],
            "methods": [
                {
                    "name": "ngrxOnInitEffects",
                    "args": [],
                    "optional": false,
                    "returnType": "Action",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport {\r\n  hydrateAction,\r\n  hydrateErrorAction,\r\n  hydrateSuccessAction,\r\n  noHydrateAction,\r\n  requestAction,\r\n  requestCancelAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './product.actions';\r\nimport { catchError, first, map, of, switchMap } from 'rxjs';\r\nimport { ApiProductService } from 'src/app/services/api/api-product/api-product.service';\r\nimport { Action } from '@ngrx/store';\r\nimport { HydrationStoreService } from 'src/app/services/hydration-store.service';\r\n\r\n@Injectable()\r\nexport class ProductEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiProductService: ApiProductService,\r\n    private hydrationStoreService: HydrationStoreService\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    if (this.hydrationStoreService.isPlatformBrowser) {\r\n      return hydrateAction();\r\n    }\r\n    return noHydrateAction();\r\n  }\r\n\r\n  hydrate$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(hydrateAction),\r\n      map(() => {\r\n        if (this.hydrationStoreService.isExistTransferedProductStore()) {\r\n          return hydrateSuccessAction({\r\n            payload: this.hydrationStoreService.getTransferProductStore()\r\n          });\r\n        }\r\n        return hydrateErrorAction();\r\n      })\r\n    )\r\n  );\r\n\r\n  loadProduct$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      map((action) => action.id),\r\n      switchMap((id) =>\r\n        this.hydrationStoreService.isTransferedProduct().pipe(\r\n          first(),\r\n          map((isTransfer) => ({ isTransfer, id }))\r\n        )\r\n      ),\r\n      switchMap(({ isTransfer, id }) => {\r\n        if (isTransfer) {\r\n          return of(requestCancelAction());\r\n        }\r\n        return this.apiProductService.getProduct(id).pipe(\r\n          map((product) => requestSuccessAction({ product })),\r\n          catchError((error) => {\r\n            return of(requestErrorAction({ error }));\r\n          })\r\n        );\r\n      })\r\n    )\r\n  );\r\n\r\n  transferProduct$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(requestSuccessAction),\r\n        map(() => {\r\n          if (this.hydrationStoreService.isPlatformServer) {\r\n            this.hydrationStoreService.transferProductStore();\r\n          }\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiProductService",
                        "type": "ApiProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiProductService",
                        "type": "ApiProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductsEffects",
            "id": "injectable-ProductsEffects-4c4f41a9435761ed99fbf160d98fc9da52129e7870890792e95294de96d72e6b154d49e32a375a2424f32e0d64725f422380a9f0fd264415516866d6697ed87e",
            "file": "src/app/store/products/products.effects.ts",
            "properties": [
                {
                    "name": "hydrate$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(hydrateAction),\r\n      map(() => {\r\n        if (this.hydrationStoreService.isExistTransferedProductsStore()) {\r\n          return hydrateSuccessAction({\r\n            payload: this.hydrationStoreService.getTransferProductsStore()\r\n          });\r\n        }\r\n        return hydrateErrorAction();\r\n      })\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "loadProducts$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap(() => this.hydrationStoreService.isTransferedProducts().pipe(first())),\r\n      switchMap((isTransfered) => {\r\n        if (isTransfered) {\r\n          return of(requestCancelAction());\r\n        }\r\n        return this.apiProductsService.getProducts().pipe(\r\n          map((products: Array<IProduct>) => requestSuccessAction({ products })),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        );\r\n      })\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "transferProducts$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(requestSuccessAction),\r\n        map(() => {\r\n          if (this.isPlatformServer(this.platformId)) {\r\n            this.hydrationStoreService.transferProductsStore();\r\n          }\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "methods": [
                {
                    "name": "ngrxOnInitEffects",
                    "args": [],
                    "optional": false,
                    "returnType": "Action",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { Actions, OnInitEffects, createEffect, ofType } from '@ngrx/effects';\r\n\r\nimport { catchError, first, map, of, switchMap } from 'rxjs';\r\nimport {\r\n  hydrateAction,\r\n  hydrateErrorAction,\r\n  hydrateSuccessAction,\r\n  requestAction,\r\n  requestCancelAction,\r\n  requestErrorAction,\r\n  requestSuccessAction\r\n} from './products.actions';\r\nimport { IProduct } from '~types/product';\r\nimport { ApiProductService } from 'src/app/services/api/api-product/api-product.service';\r\nimport { Action } from '@ngrx/store';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { HydrationStoreService } from 'src/app/services/hydration-store.service';\r\nimport { IS_PLATFORM_SERVER_TOKEN } from 'src/app/tokens/isPlatformServer';\r\n\r\n@Injectable()\r\nexport class ProductsEffects implements OnInitEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiProductsService: ApiProductService,\r\n    @Inject(PLATFORM_ID) private platformId: string,\r\n    @Inject(IS_PLATFORM_SERVER_TOKEN) private isPlatformServer: (id: string) => boolean,\r\n    private hydrationStoreService: HydrationStoreService\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    return hydrateAction();\r\n  }\r\n\r\n  hydrate$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(hydrateAction),\r\n      map(() => {\r\n        if (this.hydrationStoreService.isExistTransferedProductsStore()) {\r\n          return hydrateSuccessAction({\r\n            payload: this.hydrationStoreService.getTransferProductsStore()\r\n          });\r\n        }\r\n        return hydrateErrorAction();\r\n      })\r\n    )\r\n  );\r\n\r\n  loadProducts$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(requestAction),\r\n      switchMap(() => this.hydrationStoreService.isTransferedProducts().pipe(first())),\r\n      switchMap((isTransfered) => {\r\n        if (isTransfered) {\r\n          return of(requestCancelAction());\r\n        }\r\n        return this.apiProductsService.getProducts().pipe(\r\n          map((products: Array<IProduct>) => requestSuccessAction({ products })),\r\n          catchError((error) => of(requestErrorAction({ error })))\r\n        );\r\n      })\r\n    )\r\n  );\r\n\r\n  transferProducts$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(requestSuccessAction),\r\n        map(() => {\r\n          if (this.isPlatformServer(this.platformId)) {\r\n            this.hydrationStoreService.transferProductsStore();\r\n          }\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiProductsService",
                        "type": "ApiProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isPlatformServer",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ]
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiProductsService",
                        "type": "ApiProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isPlatformServer",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductsFilterService",
            "id": "injectable-ProductsFilterService-2aa68899cc2d6f88d1d17a7d968f058c0adf19b971b2862ec7a6f93948adebab7d2814d178f1da7e8505d938b6a280cee6c6ae6dcc211157b2d76faaf89ecac1",
            "file": "src/app/services/products-filter/products-filter.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFilteredProducts",
                    "args": [
                        {
                            "name": "products",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<IProduct>",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "products",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasCategory",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasColor",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasFlower",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasFormat",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasLight",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasMaxPrice",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasMinPrice",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHasTitle",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Categories, Color, Flower, Format, IProduct, Light } from '~types/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsFilterService {\n  public isHasCategory(product: IProduct, filter: { category: Categories | Categories[] }) {\n    const categories = filter['category'];\n    if (categories && typeof categories === 'string') {\n      return product.categories.some((category) => category === categories);\n    }\n    if (categories && Array.isArray(categories)) {\n      return product.categories.some((category) => categories.some((item) => item === category));\n    }\n    return true;\n  }\n\n  public isHasMinPrice(product: IProduct, filter: { pricefrom: number }) {\n    if (filter['pricefrom']) {\n      return product.price.value - product.price.discount >= filter['pricefrom'];\n    }\n    return true;\n  }\n\n  public isHasMaxPrice(product: IProduct, filter: { priceto: number }) {\n    if (filter['priceto']) {\n      return product.price.value - product.price.discount <= filter['priceto'];\n    }\n    return true;\n  }\n\n  public isHasColor(product: IProduct, filter: { color: Color | Color[] }) {\n    const colors = filter['color'];\n    if (colors && typeof colors === 'string') {\n      return product.color === colors;\n    }\n    if (colors && Array.isArray(colors)) {\n      return colors.some((color) => color === product.color);\n    }\n    return true;\n  }\n\n  public isHasLight(product: IProduct, filter: { light: Light | Light[] }) {\n    const lights = filter['light'];\n    if (lights && typeof lights === 'string') {\n      return product.light === lights;\n    }\n    if (lights && Array.isArray(lights)) {\n      return lights.some((light) => light === product.light);\n    }\n    return true;\n  }\n\n  public isHasFormat(product: IProduct, filter: { format: Format | Format[] }) {\n    const formats = filter['format'];\n    if (formats && typeof formats === 'string') {\n      return product.format === formats;\n    }\n    if (formats && Array.isArray(formats)) {\n      return formats.some((format) => format === product.format);\n    }\n    return true;\n  }\n\n  public isHasTitle(product: IProduct, filter: { title: string }) {\n    if (filter['title']) {\n      return product.title.toLowerCase().includes(filter['title'].toLowerCase());\n    }\n    return true;\n  }\n\n  public isHasFlower(product: IProduct, filter: { flower: Flower | Flower[] }) {\n    const flowers = filter['flower'];\n    if (flowers && typeof flowers === 'string') {\n      return product.flowers.some((flower) => flower === flowers);\n    }\n    if (flowers && Array.isArray(flowers)) {\n      return product.flowers.some((flower) =>\n        flowers.some((filterFlower) => filterFlower === flower)\n      );\n    }\n    return true;\n  }\n\n  public getFilteredProducts(products: Array<IProduct>, filter: Params): Array<IProduct> {\n    const filteredProducts: Array<IProduct> = [];\n\n    products.forEach((product) => {\n      if (\n        this.isHasCategory(product, <Pick<Params, 'category'>>filter) &&\n        this.isHasMinPrice(product, <Pick<Params, 'pricefrom'>>filter) &&\n        this.isHasMaxPrice(product, <Pick<Params, 'priceto'>>filter) &&\n        this.isHasColor(product, <Pick<Params, 'color'>>filter) &&\n        this.isHasLight(product, <Pick<Params, 'light'>>filter) &&\n        this.isHasFormat(product, <Pick<Params, 'format'>>filter) &&\n        this.isHasFlower(product, <Pick<Params, 'flower'>>filter)\n      ) {\n        filteredProducts.push(product);\n      }\n      return true;\n    });\n\n    return filteredProducts;\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "ProductsService",
            "id": "injectable-ProductsService-3db93809731953b021b4094366e91dc3a6610bb421fd24517c1abe64840ec5c1892d3d2745b03d1845cef1bed43510f930ec7520b5a8dd93b4cb3ec07f3c1dc5",
            "file": "src/app/services/products/products.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProductError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHydrateProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "requestProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StoreService } from '../store/store.service';\nimport { productsStore } from 'src/app/store/products';\nimport { productStore } from '~pages/product/store/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  constructor(private StoreService: StoreService) {}\n\n  public requestProducts(): void {\n    this.StoreService.dispatchRequestProducts();\n  }\n\n  public requestProduct(id: number): void {\n    this.StoreService.dispatchRequestProduct(id);\n  }\n\n  public getProducts(): Observable<productsStore.IState['products']> {\n    return this.StoreService.getProducts();\n  }\n\n  public productsIsLoading(): Observable<productsStore.IState['isLoading']> {\n    return this.StoreService.productsIsLoading();\n  }\n\n  public productsError(): Observable<productsStore.IState['error']> {\n    return this.StoreService.productsError();\n  }\n\n  public getProduct(): Observable<productStore.IState['product']> {\n    return this.StoreService.getProduct();\n  }\n\n  public getProductError(): Observable<productStore.IState['error']> {\n    return this.StoreService.getProductError();\n  }\n\n  public productIsLoading(): Observable<productStore.IState['isLoading']> {\n    return this.StoreService.productIsLoading();\n  }\n\n  public isHydrateProduct(): Observable<productStore.IState['isHydrateSuccess']> {\n    return this.StoreService.isHydrateProduct();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "StoreService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductsSortingService",
            "id": "injectable-ProductsSortingService-bd820eecf12b73248557d4c591ed6bee20e2313d7430dd54e352767e7ad1b16cec3cc64573cec2add80d0fbdb2fd09edc09e1fd4d8565df43664e28182626a70",
            "file": "src/app/services/products-sorting/products-sorting.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "sortedProducts",
                    "args": [
                        {
                            "name": "products",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sort",
                            "type": "Sort | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortTarget",
                            "type": "TargetSort | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "products",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "Sort | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortTarget",
                            "type": "TargetSort | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sorting",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "products",
                            "type": "IProduct[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortTarget",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IProduct[]",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "products",
                            "type": "IProduct[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortTarget",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IProduct } from '~types/product';\nimport { Sort } from '~components/sorting/types';\nimport { TargetSort } from 'src/app/containers/sorting-container/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsSortingService {\n  public sortedProducts(\n    products: Array<IProduct>,\n    sort: Sort | null,\n    sortTarget: TargetSort | null\n  ) {\n    if (!sort || !sortTarget) {\n      return products;\n    }\n    const cloneProducts = [...products];\n    this.sorting(sort, cloneProducts, sortTarget);\n\n    return cloneProducts;\n  }\n\n  private sorting(sort: Sort, products: IProduct[], sortTarget: TargetSort): IProduct[] {\n    return products.sort((a: IProduct, b: IProduct) => {\n      if (sortTarget === 'price') {\n        return sort === 'asc'\n          ? a.price.value - a.price.discount - (b.price.value - b.price.discount)\n          : b.price.value - b.price.discount - (a.price.value - a.price.discount);\n      }\n      if (sortTarget === 'rating') {\n        return sort === 'asc'\n          ? (a.rating ?? 0) - (b.rating ?? 0)\n          : (b.rating ?? 0) - (a.rating ?? 0);\n      }\n      return 0;\n    });\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "PromocodeService",
            "id": "injectable-PromocodeService-f4e157f7c9d12c64ee3a381f3c38d931b9f371d597871cf1c3151a88645cef5effada249929a1b5eb9900eb2cb60f1f157aadfce3227c05ca73fd747b7dcc4ab",
            "file": "src/app/services/promocode/promocode.service.ts",
            "properties": [
                {
                    "name": "promocodeStream$",
                    "defaultValue": "this.promocodeSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "promocodeSubject",
                    "defaultValue": "new Subject<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDiscount",
                    "args": [
                        {
                            "name": "promocode",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "promocode",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nexport const PROMOCODE = {\n  'SALE-10': 100,\n  'SALE-20': 200,\n  SALE: 50\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PromocodeService {\n  private promocodeSubject = new Subject<number>();\n  private promocodeStream$ = this.promocodeSubject.asObservable();\n\n  public getDiscount<T extends string = keyof typeof PROMOCODE>(promocode: T): void {\n    if (\n      typeof promocode !== 'undefined' &&\n      promocode in PROMOCODE &&\n      (promocode === 'SALE-10' || promocode === 'SALE-20' || promocode === 'SALE')\n    ) {\n      this.promocodeSubject.next((PROMOCODE as Record<typeof promocode, number>)[promocode]);\n      return;\n    }\n    this.promocodeSubject.next(0);\n  }\n\n  get promocodeDiscount(): Observable<number> {\n    return this.promocodeStream$;\n  }\n}\n",
            "accessors": {
                "promocodeDiscount": {
                    "name": "promocodeDiscount",
                    "getSignature": {
                        "name": "promocodeDiscount",
                        "type": "",
                        "returnType": "Observable<number>",
                        "line": 29
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "ReviewsService",
            "id": "injectable-ReviewsService-b30d2d07f947b8bd7ada5eedba9330814cbfff7c5af9a51250972fcfb701083150cd47f1a307efd8a43c853f18f027436c245a949542c92b5d87710a90778584",
            "file": "src/app/services/reviews/reviews.service.ts",
            "properties": [
                {
                    "name": "resetFormStream$",
                    "defaultValue": "this.resetFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resetFormSubject",
                    "defaultValue": "new Subject<true>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "commentsIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<[] | null>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCommentsError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable< | null>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getResetFormStream",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "postComment",
                    "args": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postCommentError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable< | null>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "postCommentIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestComments",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CommentsService } from '../comments/comments.service';\nimport { IReview } from '~components/review/types';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { INewReview } from '~components/review-form/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewsService {\n  private resetFormSubject = new Subject<true>();\n  private resetFormStream$ = this.resetFormSubject.asObservable();\n\n  constructor(private CommentsService: CommentsService) {}\n\n  public requestComments(id: number): void {\n    this.CommentsService.requestComments(id);\n  }\n\n  public getComments(): Observable<IReview[] | null> {\n    return this.CommentsService.getComments();\n  }\n\n  public commentsIsLoading(): Observable<boolean> {\n    return this.CommentsService.commentsIsLoading();\n  }\n\n  public getCommentsError(): Observable<ErrorPayload['error'] | null> {\n    return this.CommentsService.getCommentsError();\n  }\n\n  public postComment(formData: INewReview): void {\n    this.CommentsService.postComment(formData);\n  }\n\n  public getResetFormStream(): Observable<true> {\n    return this.resetFormStream$;\n  }\n\n  public postCommentIsLoading(): Observable<boolean> {\n    return this.CommentsService.postCommentLoading();\n  }\n\n  public postCommentError(): Observable<ErrorPayload['error'] | null> {\n    return this.CommentsService.postCommentError();\n  }\n\n  public resetForm(): void {\n    this.resetFormSubject.next(true);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "CommentsService",
                        "type": "CommentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "CommentsService",
                        "type": "CommentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ScrollEventService",
            "id": "injectable-ScrollEventService-f4406016e2d86ccb8dc97843571f2d2959a90d6c735b5cf0ac08a4d5e6c9e1b959e1a1be9207c775e0d7bfa8286eafeaf422eefadd87de150573f0bb8357b466",
            "file": "src/app/services/events/scroll/scroll-event.service.ts",
            "properties": [
                {
                    "name": "_destroySubject",
                    "defaultValue": "new Subject<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_scrollObservable$",
                    "defaultValue": "fromEvent<Scroll>(this.document, 'scroll').pipe(\n    takeUntil(this._destroySubject)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Scroll } from '@angular/router';\nimport { Observable, Subject, fromEvent, takeUntil } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollEventService {\n  private _destroySubject = new Subject<null>();\n  private _scrollObservable$ = fromEvent<Scroll>(this.document, 'scroll').pipe(\n    takeUntil(this._destroySubject)\n  );\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  public get scrollObservable$(): Observable<Scroll> {\n    return this._scrollObservable$;\n  }\n\n  public destroy(): void {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "scrollObservable$": {
                    "name": "scrollObservable$",
                    "getSignature": {
                        "name": "scrollObservable$",
                        "type": "",
                        "returnType": "Observable<Scroll>",
                        "line": 17
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "StorageService",
            "id": "injectable-StorageService-41d8252a5f76ea38b7fbd1919099130e8b0e155cc2c1a31b8f239513e547c69d08fcfa0243496e12751d19168bda7b7b02567228419f2a9e12d7d4cc4d01b4d0",
            "file": "src/app/services/storage/storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clearStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { LOCAL_STORAGE_TOKEN } from 'src/app/tokens/localStorage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  constructor(@Inject(LOCAL_STORAGE_TOKEN) private storage: WindowLocalStorage['localStorage']) {}\n\n  public setItem<T>(key: string, value: T): void {\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n\n  public getItem(key: string): unknown {\n    const data = this.storage.getItem(key);\n    return data !== null ? JSON.parse(data) : null;\n  }\n\n  public removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  public clearStorage(): void {\n    this.storage.clear();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storage",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "storage",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StoreService",
            "id": "injectable-StoreService-2aacb04b1c6eb9e7f856278e07d151afa17afad0016dcaeb9fd6923e42815af0fe4498170b0ee96a11f052a8515cf7aadd6f5f0d796d3a29e549ba86c5a33d63",
            "file": "src/app/services/store/store.service.ts",
            "properties": [
                {
                    "name": "appStore",
                    "defaultValue": "appStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cartStore",
                    "defaultValue": "cartStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "commentsStore",
                    "defaultValue": "commentsStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "corporateStore",
                    "defaultValue": "corporateStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "feedbackStore",
                    "defaultValue": "feedbackStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "notificationsStore",
                    "defaultValue": "notificationsStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "orderStore",
                    "defaultValue": "orderStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "productsStore",
                    "defaultValue": "productsStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "productStore",
                    "defaultValue": "productStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "cartError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cartIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cartPostingLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "commentError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "commentIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "commentsIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "corporateLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispatchChangeProductCount",
                    "args": [
                        {
                            "name": "payload",
                            "type": "ChangeCountRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "ChangeCountRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchClearCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispatchCorporateClients",
                    "args": [
                        {
                            "name": "data",
                            "type": "CorporateClientsRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CorporateClientsRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchDeleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "DeleteFromCartRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "DeleteFromCartRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchOrder",
                    "args": [
                        {
                            "name": "orderData",
                            "type": "OrderRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "orderData",
                            "type": "OrderRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchPostComment",
                    "args": [
                        {
                            "name": "data",
                            "type": "CommentRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CommentRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchPostFeedback",
                    "args": [
                        {
                            "name": "data",
                            "type": "FeedbackRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FeedbackRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchPostToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "PostToCartRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "PostToCartRequestPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchRemoveNotify",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchRemoveNotifyAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispatchRequestCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispatchRequestComments",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchRequestProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchRequestProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispatchStartAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "feedbackIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCart",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCartDiscount",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCartPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCommentsError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getCountInCart",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getNotifications",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProductError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getRootStore",
                    "args": [],
                    "optional": false,
                    "returnType": "Store<IRootState>",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHydrateProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHydrateProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "orderLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsError",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { appStore } from 'src/app/store/app';\nimport { cartStore } from 'src/app/store/cart';\nimport { IState } from 'src/app/store/cart/cart.reducer';\nimport { corporateStore } from 'src/app/store/corporate';\nimport { feedbackStore } from 'src/app/store/feedback';\nimport { notificationsStore } from 'src/app/store/notifications';\nimport { INotifyWithId } from 'src/app/store/notifications/notifications.reducer';\nimport { orderStore } from 'src/app/store/order';\nimport { productsStore } from 'src/app/store/products';\nimport { IRootState } from 'src/app/store/root.reducer';\nimport { commentsStore } from '~pages/product/store/comments';\nimport { productStore } from '~pages/product/store/product';\nimport {\n  ChangeCountRequestPayload,\n  CommentRequestPayload,\n  CorporateClientsRequestPayload,\n  DeleteFromCartRequestPayload,\n  FeedbackRequestPayload,\n  OrderRequestPayload,\n  PostToCartRequestPayload\n} from '~types/apiPayloads';\nimport { IProduct } from '~types/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  private notificationsStore = notificationsStore;\n  private orderStore = orderStore;\n  private corporateStore = corporateStore;\n  private cartStore = cartStore;\n  private commentsStore = commentsStore;\n  private productsStore = productsStore;\n  private productStore = productStore;\n  private appStore = appStore;\n  private feedbackStore = feedbackStore;\n\n  constructor(private store: Store<IRootState>) {}\n\n  public getProducts(): Observable<productsStore.IState['products']> {\n    return this.store.select(productsStore.productsAllSelector);\n  }\n\n  public productsIsLoading(): Observable<productsStore.IState['isLoading']> {\n    return this.store.select(productsStore.productsLoadingSelector);\n  }\n\n  public productsError(): Observable<productsStore.IState['error']> {\n    return this.store.select(productsStore.productsErrorSelector);\n  }\n\n  public getProduct(): Observable<productStore.IState['product']> {\n    return this.store.select(productStore.productSelector);\n  }\n\n  public getProductError(): Observable<productStore.IState['error']> {\n    return this.store.select(productStore.productErrorSelector);\n  }\n\n  public productIsLoading(): Observable<productStore.IState['isLoading']> {\n    return this.store.select(productStore.productLoadingSelector);\n  }\n\n  public isHydrateProduct(): Observable<productStore.IState['isHydrateSuccess']> {\n    return this.store.select(productStore.productIsHydrateSelector);\n  }\n\n  public isHydrateProducts(): Observable<productStore.IState['isHydrateSuccess']> {\n    return this.store.select(productsStore.productsIsHydrateSelector);\n  }\n\n  public getComments(): Observable<commentsStore.IState['comments']> {\n    return this.store.select(commentsStore.commentsSelector);\n  }\n\n  public getCommentsError(): Observable<commentsStore.IState['error']> {\n    return this.store.select(commentsStore.commentsErrorSelector);\n  }\n\n  public commentsIsLoading(): Observable<commentsStore.IState['isLoading']> {\n    return this.store.select(commentsStore.commentsLoadingSelector);\n  }\n\n  public commentIsLoading(): Observable<commentsStore.IState['postIsLoading']> {\n    return this.store.select(commentsStore.commentLoadingSelector);\n  }\n\n  public commentError(): Observable<commentsStore.IState['error']> {\n    return this.store.select(commentsStore.commentErrorSelector);\n  }\n\n  public getCart(): Observable<cartStore.IState['inCart']> {\n    return this.store.select(cartStore.inCartSelector);\n  }\n\n  public getCartPrice(): Observable<number> {\n    return this.store.select(cartStore.cartPriceSelector);\n  }\n\n  public getCartDiscount(): Observable<number> {\n    return this.store.select(cartStore.cartDiscountSelector);\n  }\n\n  public getCountInCart(): Observable<number> {\n    return this.store.select(cartStore.countInCartSelector);\n  }\n\n  public cartIsLoading(): Observable<IState['isLoading']> {\n    return this.store.select(cartStore.cartLoadingSelector);\n  }\n\n  public cartError(): Observable<IState['error']> {\n    return this.store.select(cartStore.cartErrorSelector);\n  }\n\n  public cartPostingLoading(): Observable<IState['isPostLoading']> {\n    return this.store.select(cartStore.cartPostLoadingSelector);\n  }\n\n  public feedbackIsLoading(): Observable<feedbackStore.IState['isLoading']> {\n    return this.store.select(feedbackStore.feedbackLoadingSelector);\n  }\n\n  public orderLoading(): Observable<orderStore.IState['isLoading']> {\n    return this.store.select(orderStore.orderLoadingSelector);\n  }\n\n  public corporateLoading(): Observable<orderStore.IState['isLoading']> {\n    return this.store.select(corporateStore.requestLoadingSelector);\n  }\n\n  public getNotifications(): Observable<notificationsStore.IState['list']> {\n    return this.store.select(this.notificationsStore.notificationsListSelector);\n  }\n\n  public getRootStore(): Store<IRootState> {\n    return this.store;\n  }\n\n  public dispatchRemoveNotify(id: INotifyWithId['id']): void {\n    this.store.dispatch(this.notificationsStore.removeAction({ id }));\n  }\n\n  public dispatchRemoveNotifyAll(): void {\n    this.store.dispatch(this.notificationsStore.removeAllAction());\n  }\n\n  public dispatchOrder(orderData: OrderRequestPayload): void {\n    this.store.dispatch(this.orderStore.requestAction(orderData));\n  }\n\n  public dispatchCorporateClients(data: CorporateClientsRequestPayload): void {\n    this.store.dispatch(this.corporateStore.requestAction(data));\n  }\n\n  public dispatchChangeProductCount(payload: ChangeCountRequestPayload): void {\n    this.store.dispatch(this.cartStore.postChangeCountAction(payload));\n  }\n\n  public dispatchPostToCart(cartItem: PostToCartRequestPayload): void {\n    this.store.dispatch(this.cartStore.postProductAction(cartItem));\n  }\n\n  public dispatchClearCart(): void {\n    this.store.dispatch(this.cartStore.clearAllAction());\n  }\n\n  public dispatchRequestCart(): void {\n    this.store.dispatch(this.cartStore.requestAction());\n  }\n\n  public dispatchDeleteFromCart(id: DeleteFromCartRequestPayload): void {\n    this.store.dispatch(this.cartStore.deleteProductAction(id));\n  }\n\n  public dispatchRequestComments(id: IProduct['id']): void {\n    this.store.dispatch(this.commentsStore.requestAction({ id }));\n  }\n\n  public dispatchPostComment(data: CommentRequestPayload): void {\n    this.store.dispatch(this.commentsStore.postAction({ data }));\n  }\n\n  public dispatchRequestProducts(): void {\n    this.store.dispatch(this.productsStore.requestAction());\n  }\n\n  public dispatchRequestProduct(id: IProduct['id']): void {\n    this.store.dispatch(this.productStore.requestAction({ id }));\n  }\n\n  public dispatchStartAction(): void {\n    this.store.dispatch(this.appStore.startedAction());\n  }\n\n  public dispatchPostFeedback(data: FeedbackRequestPayload): void {\n    this.store.dispatch(this.feedbackStore.requestAction(data));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IRootState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IRootState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UrlRouteService",
            "id": "injectable-UrlRouteService-66b820e7d10b61bccf9156797c6b44b40595993b9eeb19e1425029be782ad063a13549f288cca26544a1c414418599fcb7b803f8a127ce667105dfbb7c172efb",
            "file": "src/app/services/url-route/url-route.service.ts",
            "properties": [
                {
                    "name": "_currentUrlStream$",
                    "defaultValue": "this._currentUrlSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_currentUrlSubject",
                    "defaultValue": "new BehaviorSubject<IRouteInfo>(this.createRouteInfo())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isChangedUrlStream$",
                    "defaultValue": "this._isChangedUrlSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isChangedUrlSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_previousUrlStream$",
                    "defaultValue": "this._previousUrlSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_previousUrlSubject",
                    "defaultValue": "new BehaviorSubject<IRouteInfo>(this.createRouteInfo())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentParams",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | Params",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentUrlFull",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "previousParams",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | Params",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "previousUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "previousUrlFull",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkOnChanged",
                    "args": [
                        {
                            "name": "prevUrl",
                            "type": "null | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentUrl",
                            "type": "null | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "prevUrl",
                            "type": "null | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentUrl",
                            "type": "null | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createRouteInfo",
                    "args": [
                        {
                            "name": "url",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        },
                        {
                            "name": "urlFull",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "IRouteInfo",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "urlFull",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notifySubscribers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToRouterEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, combineLatest, filter } from 'rxjs';\nimport { IRouteInfo } from './types';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlRouteService {\n  private _previousUrlSubject = new BehaviorSubject<IRouteInfo>(this.createRouteInfo());\n  private _previousUrlStream$ = this._previousUrlSubject.asObservable();\n  private _currentUrlSubject = new BehaviorSubject<IRouteInfo>(this.createRouteInfo());\n  private _currentUrlStream$ = this._currentUrlSubject.asObservable();\n  private _isChangedUrlSubject = new BehaviorSubject<boolean>(false);\n  private _isChangedUrlStream$ = this._isChangedUrlSubject.asObservable();\n  private previousUrl: null | string = null;\n  private previousParams: null | Params = null;\n  private previousUrlFull: null | string = null;\n  private currentUrl: null | string = null;\n  private currentParams: null | Params = null;\n  private currentUrlFull: null | string = null;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.subscribeToRouterEvents();\n  }\n\n  private subscribeToRouterEvents() {\n    combineLatest([this.router.events, this.activatedRoute.queryParams])\n      .pipe(filter(([event]) => event instanceof NavigationEnd))\n      .subscribe(([event, queryParams]) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.previousParams = this.currentParams;\n          this.previousUrlFull = this.currentUrlFull;\n\n          this.currentUrl = event.url.split('?')[0];\n          this.currentParams = queryParams;\n          this.currentUrlFull = event.url;\n\n          this.notifySubscribers();\n          this.checkOnChanged(this.previousUrl, this.currentUrl);\n        }\n      });\n  }\n\n  private notifySubscribers(): void {\n    this._previousUrlSubject.next(\n      this.createRouteInfo(this.previousUrl, this.previousUrlFull, this.previousParams)\n    );\n    this._currentUrlSubject.next(\n      this.createRouteInfo(this.currentUrl, this.currentUrlFull, this.currentParams)\n    );\n  }\n\n  private createRouteInfo(\n    url: IRouteInfo['url'] = null,\n    urlFull: IRouteInfo['urlFull'] = null,\n    params: IRouteInfo['params'] = null\n  ): IRouteInfo {\n    return {\n      url,\n      urlFull,\n      params\n    };\n  }\n\n  private checkOnChanged(prevUrl: null | string, currentUrl: null | string): void {\n    const prevUrlWithoutParams = prevUrl && prevUrl.split('?')[0];\n    const currentUrlWithoutParams = currentUrl && currentUrl.split('?')[0];\n    this._isChangedUrlSubject.next(prevUrlWithoutParams !== currentUrlWithoutParams);\n  }\n\n  public get previousUrlStream$(): Observable<IRouteInfo> {\n    return this._previousUrlStream$;\n  }\n\n  public get currentUrlStream$(): Observable<IRouteInfo> {\n    return this._currentUrlStream$;\n  }\n\n  public get isChangedUrlStream$(): Observable<boolean> {\n    return this._isChangedUrlStream$;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "previousUrlStream$": {
                    "name": "previousUrlStream$",
                    "getSignature": {
                        "name": "previousUrlStream$",
                        "type": "",
                        "returnType": "Observable<IRouteInfo>",
                        "line": 72
                    }
                },
                "currentUrlStream$": {
                    "name": "currentUrlStream$",
                    "getSignature": {
                        "name": "currentUrlStream$",
                        "type": "",
                        "returnType": "Observable<IRouteInfo>",
                        "line": 76
                    }
                },
                "isChangedUrlStream$": {
                    "name": "isChangedUrlStream$",
                    "getSignature": {
                        "name": "isChangedUrlStream$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 80
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "UtilsService",
            "id": "injectable-UtilsService-04ffd5008dd138e4a8defac4626e8f3ffd9702357ac7c4bf7a38bf1095f5d1255b6d03619486b2d4806cb3c9e59ae5993561ec3075897775e242febc84c29789",
            "file": "src/app/services/utils/utils.service.ts",
            "properties": [
                {
                    "name": "deepClone",
                    "defaultValue": "deepClone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateRandomString",
                    "defaultValue": "generateRandomString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { deepClone } from 'src/utils/deepClone';\r\nimport { generateRandomString } from 'src/utils/randomString';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n  public generateRandomString = generateRandomString;\r\n  public deepClone = deepClone;\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "ViewportSizeService",
            "id": "injectable-ViewportSizeService-5765f1e210c2f15ed31868286a7f38d59599d60d5c7a3317aee63df31497b8dfe47ed0cbf498e37cb9b0e42ab32ca09bcf18f4c9c7ed89dcb828f987ec9bfec1",
            "file": "src/app/services/events/resize/viewport-size.service.ts",
            "properties": [
                {
                    "name": "_destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_resizeObservable$",
                    "defaultValue": "this.isPlatformBrowser(this.platformId)\n    ? fromEvent<UIEvent>(this.window, 'resize').pipe(\n        takeUntil(this._destroySubject),\n        map(this.getSizesFromResizeEvent),\n        debounceTime(200)\n      )\n    : new Subject<IViewportSizes>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_resizeSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<IViewportSizes>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSizesFromResizeEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IViewportSizes",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, debounceTime, fromEvent } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { IS_PLATFORM_BROWSER_TOKEN } from 'src/app/tokens/isPlatformBrowser';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\nexport interface IViewportSizes {\n  width: number;\n  height: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewportSizeService {\n  private _destroySubject = new Subject();\n  private _resizeSubject: BehaviorSubject<IViewportSizes>;\n  private _resizeObservable$ = this.isPlatformBrowser(this.platformId)\n    ? fromEvent<UIEvent>(this.window, 'resize').pipe(\n        takeUntil(this._destroySubject),\n        map(this.getSizesFromResizeEvent),\n        debounceTime(200)\n      )\n    : new Subject<IViewportSizes>();\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(IS_PLATFORM_BROWSER_TOKEN) private isPlatformBrowser: (id: string) => boolean\n  ) {\n    const { innerWidth: width, innerHeight: height } = this.window;\n    this._resizeSubject = new BehaviorSubject<IViewportSizes>({\n      width,\n      height\n    });\n    this._resizeObservable$.subscribe(this._resizeSubject);\n  }\n\n  private getSizesFromResizeEvent(event: UIEvent): IViewportSizes {\n    const target = <Window>event.target;\n\n    return {\n      width: target.innerWidth,\n      height: target.innerHeight\n    };\n  }\n\n  public get resizeObservable$(): Observable<IViewportSizes> {\n    return this._resizeSubject;\n  }\n\n  public destroy() {\n    this._destroySubject.next(null);\n    this._destroySubject.complete();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isPlatformBrowser",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ]
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isPlatformBrowser",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "resizeObservable$": {
                    "name": "resizeObservable$",
                    "getSignature": {
                        "name": "resizeObservable$",
                        "type": "",
                        "returnType": "Observable<IViewportSizes>",
                        "line": 48
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "YmapsService",
            "id": "injectable-YmapsService-4fe1dd147f43f36a35adc3628887a48c640550a069442243623a3eac9daaa9ba6979b54fb40cd69f722edaf5b3312c7c1787c48a7429ceab8a844c35461d2978",
            "file": "src/app/services/ymaps/ymaps.service.ts",
            "properties": [
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ymaps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createMap",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getObject",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ type: string; id: number; geometry: { type: string; coordinates: {}; }; properties: { hintContent: string; }; }",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initMap",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadScriptMap",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMarks",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YmapsService {\n  private ymaps: any;\n  private maps: any;\n  private map: any;\n\n  constructor(@Inject(WINDOW_TOKEN) private window: Window) {}\n\n  public initMap(data: { lat: number; lon: number }[]) {\n    return this.loadScriptMap(data).then(() => {\n      return this.createMap(data);\n    });\n  }\n\n  private loadScriptMap(data: { lat: number; lon: number }[]) {\n    if (this.window.ymaps) {\n      return Promise.resolve();\n    }\n    const scriptYmaps = document.createElement('script');\n    scriptYmaps.src =\n      'https://api-maps.yandex.ru/2.1/?apikey=50f8a21f-bac2-4553-bf58-f203bc76de68&lang=ru_RU';\n    document.body.appendChild(scriptYmaps);\n\n    return new Promise((resolve, reject) => {\n      scriptYmaps.onload = () =>\n        this.window.ymaps.ready(() => {\n          resolve(true);\n        });\n\n      scriptYmaps.onerror = (err) => {\n        reject(err);\n      };\n    });\n  }\n\n  private createMap(data: { lat: number; lon: number }[]) {\n    if (!this.ymaps) {\n      this.ymaps = this.window.ymaps;\n    }\n    return this.ymaps\n      .load()\n      .then((maps: any) => {\n        this.maps = maps;\n        this.map = new maps.Map('address-map', {\n          center: [data[0].lat, data[0].lon],\n          zoom: 16\n        });\n      })\n      .catch((error: Error) => {\n        throw (error.message = 'Failed to load Yandex Maps: ' + error.message);\n      })\n      .then(() => {\n        this.setMarks(data);\n        return this.map;\n      });\n  }\n\n  private setMarks(data: { lat: number; lon: number }[]): void {\n    const objectManager = new this.maps.ObjectManager();\n\n    data.forEach((item: any, index: number) => {\n      objectManager.add(this.getObject({ id: index, lat: item.lat, lon: item.lon }));\n    });\n\n    this.map.geoObjects.add(objectManager);\n  }\n\n  private getObject({ id, lat, lon }: { id: number; lat: number; lon: number }) {\n    return {\n      type: 'Feature',\n      id: id,\n      geometry: {\n        type: 'Point',\n        coordinates: [lat, lon]\n      },\n      properties: {\n        hintContent: 'LoverFlower'\n      }\n    };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "ButtonScrollDirective",
            "id": "directive-ButtonScrollDirective-82bc45fa3cce874cace3b21f98febe100ef1ce7ac3d835c67528afee6c2262fe01b351f734cae5fce1974fcc7c226c2b6c759e38a26d019e0c4579a9ccdc879f",
            "file": "src/app/directives/button-scroll/button-scroll.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subject, asyncScheduler, takeUntil, throttleTime } from 'rxjs';\nimport { ScrollEventService } from 'src/app/services/events/scroll/scroll-event.service';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\n@Directive({\n  selector: '[appButtonScroll]'\n})\nexport class ButtonScrollDirective implements AfterViewInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  private scrollY: number;\n  @Input() positionTop = 0;\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    private scrollEventService: ScrollEventService,\n    private elRef: ElementRef<HTMLElement>\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.subscribeToScrollEvent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private get host(): HTMLElement {\n    return this.elRef.nativeElement;\n  }\n\n  private subscribeToScrollEvent() {\n    this.scrollEventService.scrollObservable$\n      .pipe(takeUntil(this.destroySubject), throttleTime(700, asyncScheduler, { trailing: true }))\n      .subscribe(() => {\n        this.scrollY = this.window.scrollY;\n        this.switchVisibility();\n      });\n  }\n\n  private switchVisibility() {\n    if (this.scrollY && this.scrollY > 500) {\n      this.host.classList.add('btn-scroll--active');\n      return;\n    }\n    this.host.classList.remove('btn-scroll--active');\n  }\n\n  @HostListener('click')\n  handlerScroll() {\n    this.window.scrollTo({ top: this.positionTop, behavior: 'smooth' });\n  }\n}\n",
            "selector": "[appButtonScroll]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "positionTop",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToScrollEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "switchVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "scrollEventService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "scrollEventService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 37
                    }
                }
            }
        },
        {
            "name": "ChangeRouteDirective",
            "id": "directive-ChangeRouteDirective-e5eb1dc6ac47fff4c5ef97acbe2b37db2ade1709761777dfb232f17cdf48c863f5f0ae3d4c1284de14f571e627e2f743df5154b2167d6c692e109d8afc3e42b4",
            "file": "src/app/directives/change-route/change-route.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subject, filter } from 'rxjs';\n\n@Directive({\n  selector: '[appChangeRoute]'\n})\nexport class ChangeRouteDirective implements OnDestroy {\n  private destroySubscribtions: Subject<null> = new Subject();\n\n  @Output() appChangeRoute: EventEmitter<undefined> = new EventEmitter();\n\n  constructor(private router: Router) {\n    this.subscribeToRouterEvents();\n  }\n\n  private subscribeToRouterEvents(): void {\n    this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe({\n      next: () => this.appChangeRoute.emit()\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubscribtions.next(null);\n    this.destroySubscribtions.complete();\n  }\n}\n",
            "selector": "[appChangeRoute]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "appChangeRoute",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<undefined>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "destroySubscribtions",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToRouterEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "EmptyDirective",
            "id": "directive-EmptyDirective-a1ed6a567aa0dc08ae07b25ed57de71e8b52311c3ec2b9aae648b9628d05785844307a23693ccbdcbdddfabb4e0ac9f8a09401c3ad6804e6d34b04443fbf5896",
            "file": "src/app/directives/validators/empty.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { empty } from 'src/app/validators/empty.validator';\n\n@Directive({\n  selector: '[appEmpty]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: EmptyDirective,\n      multi: true\n    }\n  ]\n})\nexport class EmptyDirective implements Validator {\n  validate(control: AbstractControl<string>): ValidationErrors | null {\n    return empty(control);\n  }\n}\n",
            "selector": "[appEmpty]",
            "providers": [
                {
                    "name": "{\n    provide: NG_VALIDATORS, useExisting: EmptyDirective, multi: true\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl<string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationErrors | null",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl<string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "Validator"
            ]
        },
        {
            "name": "ForEntriesDirective",
            "id": "directive-ForEntriesDirective-abd977e4076354ec1a797826ef337efd6c9a79b59df7bd421e4684c8c9f9480646829999ab0204922b6f69b9509865a0c61658062bd0936c7b53431ca30f5ba4",
            "file": "src/app/directives/for-entries/for-entries.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  DoCheck,\n  Input,\n  KeyValueChanges,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[appForEntries]'\n})\nexport class ForEntriesDirective implements DoCheck {\n  @Input() appForEntriesOf: { [key: string]: unknown } = {};\n\n  objectDiffer: KeyValueDiffer<string, unknown>;\n\n  constructor(\n    private templateRef: TemplateRef<unknown>,\n    private viewContainerRef: ViewContainerRef,\n    private keyValueDiffers: KeyValueDiffers\n  ) {\n    this.objectDiffer = this.keyValueDiffers.find(this.appForEntriesOf).create();\n  }\n\n  ngDoCheck(): void {\n    const objectChanges: KeyValueChanges<string, unknown> | null = this.objectDiffer.diff(\n      this.appForEntriesOf\n    );\n    if (objectChanges) {\n      this.viewContainerRef.clear();\n      objectChanges.forEachAddedItem((record) => {\n        this.viewContainerRef.createEmbeddedView(this.templateRef, {\n          $implicit: {\n            name: record.key,\n            value: record.currentValue\n          }\n        });\n      });\n    }\n  }\n}\n",
            "selector": "[appForEntries]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appForEntriesOf",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "objectDiffer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValueDiffer<string | >",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "DoCheck"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "keyValueDiffers",
                        "type": "KeyValueDiffers",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "keyValueDiffers",
                        "type": "KeyValueDiffers",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ImageUploadStatusDirective",
            "id": "directive-ImageUploadStatusDirective-c27efd8137feb8b31d46c6d0585023952e67773d839de8a1c9a362be38dbf7bb7768715feb2d1238e2a2586f41f7d260206662f16e8bbd0e431b7ee2cff0ce5b",
            "file": "src/app/directives/image-upload-status/image-upload-status.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, DoCheck, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: 'img[appImageUploadStatus]',\n  exportAs: 'appImageUploadStatus'\n})\nexport class ImageUploadStatusDirective implements DoCheck {\n  private elementWithSettedClass: HTMLElement | null;\n  @Input() classNameLoading = 'image-loading';\n  @Input() otherTargetForOutput: HTMLElement;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngDoCheck(): void {\n    if (!this.elRef.nativeElement.complete && !this.elementWithSettedClass) {\n      const targetForStatusOutput = this.otherTargetForOutput || this.elRef.nativeElement;\n      targetForStatusOutput.classList.add(this.classNameLoading);\n      this.elementWithSettedClass = targetForStatusOutput;\n    }\n  }\n\n  @HostListener('load')\n  private handlerOnLoad(): void {\n    if (!this.elementWithSettedClass) {\n      return;\n    }\n    this.elementWithSettedClass.classList.remove(this.classNameLoading);\n    this.elementWithSettedClass = null;\n  }\n}\n",
            "selector": "img[appImageUploadStatus]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "classNameLoading",
                    "defaultValue": "'image-loading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "otherTargetForOutput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "HTMLElement",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "load",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23
                }
            ],
            "propertiesClass": [
                {
                    "name": "elementWithSettedClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerOnLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'load'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "DoCheck"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "IntersectionDirective",
            "id": "directive-IntersectionDirective-f8e324db42f630cbf2cb3aba67b871f50b9f43e9d07bddb4c3d1bc89d37848ab43585c834d2c2cd6846c5efd2d8a204193388295680241c9c03b1c7871360ce2",
            "file": "src/app/directives/intersection/intersection.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appIntersection]'\n})\nexport class IntersectionDirective {\n  private observer: IntersectionObserver;\n  @Input() rootMargin = '100';\n  @Output() appIntersection = new EventEmitter<boolean>();\n\n  constructor(public elRef: ElementRef) {\n    this.observer = new IntersectionObserver(this.callback, {\n      rootMargin: `${this.rootMargin}px`,\n      threshold: 0.5,\n      root: null\n    });\n    this.observer.observe(this.elRef.nativeElement);\n  }\n\n  private callback: ConstructorParameters<typeof IntersectionObserver>[0] = (entries) =>\n    entries\n      .filter((entry) => entry.isIntersecting)\n      .forEach((entry) => {\n        const rootBounds = entry.rootBounds;\n        if (!rootBounds) {\n          return;\n        }\n        const isAbove = entry.boundingClientRect.y < entry.rootBounds.y;\n        this.appIntersection.emit(isAbove);\n      });\n}\n",
            "selector": "[appIntersection]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "rootMargin",
                    "defaultValue": "'100'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "appIntersection",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "callback",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "observer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IntersectionObserver",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "OutsideClickDirective",
            "id": "directive-OutsideClickDirective-14c4d6ad47d8def15913aa6a9ad926f88455e356c75a5a3021456027ac4695ef17380a715d00e232f4c7a496fafc05ed55b882c3bf42e4af7e6308bb97f3d1c1",
            "file": "src/app/directives/outside-click/outside-click.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appOutsideClick]'\n})\nexport class OutsideClickDirective {\n  @Output() appOutsideClick: EventEmitter<void> = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {}\n\n  get host() {\n    return this.elementRef.nativeElement;\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  handlerFocusout(target: HTMLElement) {\n    if (!this.host.contains(target)) {\n      this.appOutsideClick.emit();\n    }\n  }\n}\n",
            "selector": "[appOutsideClick]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "appOutsideClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "EventEmitter<void>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handlerFocusout",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event.target']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            }
        },
        {
            "name": "OutsideFocusDirective",
            "id": "directive-OutsideFocusDirective-2fdd275398f94e9847d289c219587ff146ef6b38cab526998b20c039b9b1ed8f1c6ae1f22faccb60a2a34ce26fe667c14d9cf8745bdb8bee88194bc820f4fab8",
            "file": "src/app/directives/outside-focus/outside-focus.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appOutsideFocus]'\n})\nexport class OutsideFocusDirective {\n  @Output() appOutsideFocus: EventEmitter<void> = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {}\n\n  get host() {\n    return this.elementRef.nativeElement;\n  }\n\n  @HostListener('document:focusin', ['$event.target'])\n  handlerFocusout(target: HTMLElement) {\n    if (!this.host.contains(target)) {\n      this.appOutsideFocus.emit();\n    }\n  }\n}\n",
            "selector": "[appOutsideFocus]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "appOutsideFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "EventEmitter<void>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:focusin",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handlerFocusout",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:focusin', ['$event.target']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            }
        },
        {
            "name": "ParallaxDirective",
            "id": "directive-ParallaxDirective-a01c063feed18e98b56cf94995b086870d5c46385dfdc90c202ce1208c2c85efb80618971ccfc43998a4cde6c668314b63ad40a82adeecafaf3f438ed8b7f057",
            "file": "src/app/directives/parallax/parallax.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy } from '@angular/core';\nimport { Observable, Subject, takeUntil, throttleTime } from 'rxjs';\nimport {\n  IPointerEvent,\n  PointerEventService\n} from 'src/app/services/events/pointer/pointer-event.service';\nimport { TargetVariant } from './types';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\ninterface EventHandlerArgs {\n  element: HTMLElement;\n  bgOffsetX: number;\n  bgOffsetY: number;\n  pointerEvent: IPointerEvent;\n}\n\n@Directive({\n  selector: '[appParallax]'\n})\nexport class ParallaxDirective implements AfterViewInit, OnDestroy {\n  private destroySubject: Subject<null>;\n  private durationAnim = 0.5;\n  private pointerEvent$: Observable<IPointerEvent>;\n  @Input() appParallaxBgOffsetX = 0;\n  @Input() appParallaxBgOffsetY = 0;\n  @Input() appParallaxTargetVariant: TargetVariant = 'background';\n  @Input() appParallaxScale = 1;\n  @Input() appParallaxThrottleTime = 100;\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    pointerEventService: PointerEventService,\n    private elRef: ElementRef<HTMLElement>\n  ) {\n    this.destroySubject = new Subject();\n    this.pointerEvent$ = pointerEventService.pointermoveObservable$;\n  }\n\n  get host(): HTMLElement {\n    return this.elRef.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    this.setParallax(\n      this.host,\n      this.appParallaxBgOffsetX,\n      this.appParallaxBgOffsetY,\n      this.durationAnim\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.pointerEvent$;\n  }\n\n  private setParallax(\n    element: HTMLElement,\n    bgOffsetX: number,\n    bgOffsetY: number,\n    durationAnim: number = this.durationAnim\n  ): void {\n    this.setPreparatoryStyles(element, durationAnim);\n\n    this.pointerEvent$\n      .pipe(takeUntil(this.destroySubject), throttleTime(this.appParallaxThrottleTime))\n      .subscribe((pointerEvent) => {\n        this.backgroundMove({ element, bgOffsetX, bgOffsetY, pointerEvent });\n      });\n  }\n\n  private setPreparatoryStyles(element: HTMLElement, durationAnim: number): void {\n    if (this.appParallaxTargetVariant === 'background') {\n      element.style.setProperty('transition', `background-position ${durationAnim}s ease-out`);\n    }\n    if (this.appParallaxTargetVariant === 'img') {\n      element.style.setProperty('transition', `transform ${durationAnim}s ease-out`);\n    }\n  }\n\n  private backgroundMove({ element, bgOffsetX, bgOffsetY, pointerEvent }: EventHandlerArgs) {\n    if (pointerEvent.pointerType !== 'mouse') {\n      return;\n    }\n    const offsetX = (pointerEvent.clientX / this.window.innerWidth) * bgOffsetX - bgOffsetX;\n    const offsetY = (pointerEvent.clientY / this.window.innerHeight) * bgOffsetY - bgOffsetY;\n\n    if (this.appParallaxTargetVariant === 'background') {\n      element.style.setProperty('background-position', `${offsetX}px ${offsetY}px`);\n    }\n    if (this.appParallaxTargetVariant === 'img') {\n      element.style.setProperty(\n        'transform',\n        `translate(${offsetX}px, ${offsetY}px) scale(${this.appParallaxScale})`\n      );\n    }\n  }\n}\n",
            "selector": "[appParallax]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appParallaxBgOffsetX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appParallaxBgOffsetY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appParallaxScale",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appParallaxTargetVariant",
                    "defaultValue": "'background'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TargetVariant",
                    "decorators": []
                },
                {
                    "name": "appParallaxThrottleTime",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "durationAnim",
                    "defaultValue": "0.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pointerEvent$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IPointerEvent>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "backgroundMove",
                    "args": [
                        {
                            "type": "EventHandlerArgs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "type": "EventHandlerArgs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setParallax",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "bgOffsetX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "bgOffsetY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "durationAnim",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.durationAnim"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "bgOffsetX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "bgOffsetY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "durationAnim",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.durationAnim",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPreparatoryStyles",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "durationAnim",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "durationAnim",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pointerEventService",
                        "type": "PointerEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pointerEventService",
                        "type": "PointerEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 39
                    }
                }
            }
        },
        {
            "name": "UiButtonDirective",
            "id": "directive-UiButtonDirective-eec863f9fd1b1c1b86333ab019b109072ea8babb05514930472ded181d6f3510664c36b48fe75676c0e1d4d74213d7ca79bd413759f3f1067a08c539c99d5941",
            "file": "src/app/directives/ui/ui-button/ui-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\nconst buttonVariantClasses = <const>{\n  '1': 'button-1',\n  '2': 'button-2',\n  '3': 'button-3',\n  '4': 'button-4'\n};\n\nexport type ButtonVariant = keyof typeof buttonVariantClasses;\n\n@Directive({\n  selector: 'button[appUiButton], a[appUiButton]'\n})\nexport class UiButtonDirective implements OnInit {\n  private buttonVariantClasses = buttonVariantClasses;\n  private _variant: ButtonVariant;\n  private defaultVariant = <const>'1';\n\n  @Input('appUiButton')\n  set variant(value: ButtonVariant | '') {\n    this._variant =\n      value !== '' && value in this.buttonVariantClasses ? value : this.defaultVariant;\n  }\n\n  constructor(private elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.initButton();\n  }\n\n  private get host() {\n    return this.elRef.nativeElement;\n  }\n\n  private initButton() {\n    this.renderer.addClass(this.host, this.buttonVariantClasses[this._variant]);\n  }\n}\n",
            "selector": "button[appUiButton], a[appUiButton]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appUiButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ButtonVariant | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonVariant",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "buttonVariantClasses",
                    "defaultValue": "buttonVariantClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultVariant",
                    "defaultValue": "<const>'1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "variant": {
                    "name": "variant",
                    "setSignature": {
                        "name": "variant",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "ButtonVariant | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "ButtonVariant | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            }
        },
        {
            "name": "VisibilityByScrollDirective",
            "id": "directive-VisibilityByScrollDirective-193dc97fd78adb9cc3374807d2e1cff41d26769557e0663e5400bc76b334ebaa2aff6aa77a210e556681b1f972af53cf1b29821f2720648905e4613f6c53c624",
            "file": "src/app/directives/visibility-by-scroll/visibility-by-scroll.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Scroll } from '@angular/router';\nimport { Observable, Subject, asyncScheduler, takeUntil, throttleTime } from 'rxjs';\nimport { ScrollEventService } from 'src/app/services/events/scroll/scroll-event.service';\nimport { WINDOW_TOKEN } from 'src/app/tokens/window';\n\ntype Action = 'hidden' | 'visible';\n\n@Directive({\n  selector: '[appVisibilityByScroll]',\n  exportAs: 'appVisibilityByScroll'\n})\nexport class VisibilityByScrollDirective implements OnInit, AfterViewInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  private prevScroll: number;\n  private currentScroll: number;\n  private scrollObservable$: Observable<Scroll>;\n  private isVisibleHost = true;\n  @Input() inactionTop = 0;\n  @Output() emitIsOnMove: EventEmitter<boolean>;\n\n  get host(): HTMLElement {\n    return this.elRef.nativeElement;\n  }\n\n  constructor(\n    @Inject(WINDOW_TOKEN) private window: Window,\n    private elRef: ElementRef<HTMLElement>,\n    private scrollService: ScrollEventService\n  ) {\n    this.emitIsOnMove = new EventEmitter();\n    this.scrollObservable$ = this.scrollService.scrollObservable$;\n    this.currentScroll = this.getPageYOffset();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToScroll();\n  }\n\n  ngAfterViewInit(): void {\n    this.setPreporatoryStyles();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToScroll() {\n    this.scrollObservable$\n      .pipe(takeUntil(this.destroySubject), throttleTime(400, asyncScheduler, { trailing: true }))\n      .subscribe(() => {\n        this.switchVisible();\n      });\n  }\n\n  private setPreporatoryStyles() {\n    this.host.style.setProperty('position', 'sticky');\n    this.host.style.setProperty('transition', 'transform 0.2s');\n    this.host.style.setProperty('transform', 'translateY(0)');\n  }\n\n  private switchVisible(): void {\n    this.currentScroll = this.getPageYOffset();\n\n    if (this.currentScroll <= this.inactionTop) {\n      this.changeVisibility('visible');\n      this.emitIsOnMove.emit(false);\n      return;\n    }\n    if (this.currentScroll > this.prevScroll && this.isVisibleHost) {\n      this.changeVisibility('hidden');\n      this.emitIsOnMove.emit(true);\n    }\n    if (this.currentScroll < this.prevScroll && this.isVisibleHost) {\n      this.changeVisibility('visible');\n      this.emitIsOnMove.emit(true);\n    }\n\n    this.prevScroll = this.currentScroll;\n  }\n\n  private changeVisibility(action: Action): void {\n    if (action === 'hidden') {\n      this.host.style.setProperty('transform', 'translateY(-100%)');\n      return;\n    }\n    this.host.style.setProperty('transform', 'translateY(0)');\n  }\n\n  private getPageYOffset(): number {\n    return this.window.scrollY;\n  }\n}\n",
            "selector": "[appVisibilityByScroll]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "inactionTop",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitIsOnMove",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "currentScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isVisibleHost",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "prevScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollObservable$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Scroll>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeVisibility",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPageYOffset",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setPreporatoryStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "switchVisible",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "scrollService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "window",
                        "type": "Window",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "scrollService",
                        "type": "ScrollEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "host": {
                    "name": "host",
                    "getSignature": {
                        "name": "host",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 32
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AboutUsComponent",
            "id": "component-AboutUsComponent-45bef2d5359c8f8bfb23f2140b36de687b3d87903d2f181d8ad062fd7ecaa64cbed61f9f3cc2978a2edb77d3ad6cd233fa0c77bcea964243e053ce39f4b1b19a",
            "file": "src/app/pages/about-us/about-us.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-us",
            "styleUrls": [
                "./about-us.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-us.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { pageData } from '~pages/about-us/data/pageData';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AboutUsComponent {\n  public data = pageData;\n\n  constructor(private meta: Meta) {\n    this.setMeta();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.about-us {\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: -25px;\r\n      z-index: -1;\r\n      width: 704px;\r\n      height: 717px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/about-us/yellow-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/about-us/yellow-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: -280px;\r\n      top: 0;\r\n      z-index: -1;\r\n      width: 575px;\r\n      height: 438px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/about-us/yellow-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/about-us/yellow-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateY(180deg) rotateZ(312deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/about-us/yellow-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(76deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 10px;\r\n        top: -12px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/about-us/yellow-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(120deg);\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        right: -277px;\r\n        bottom: 101px;\r\n        z-index: -1;\r\n        width: 704px;\r\n        height: 717px;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/about-us/yellow-flowers-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/about-us/yellow-flowers-bg.png')\r\n        );\r\n        background-size: contain;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(335deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 193px;\r\n        top: 486px;\r\n        z-index: -1;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/about-us/yellow-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-3 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -223px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/about-us/yellow-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(126deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -338px;\r\n        bottom: -367px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/about-us/yellow-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(93deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 46px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 98px;\r\n    padding-left: 100px;\r\n  }\r\n\r\n  &__lover-flower {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__guarantees {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__services {\r\n    margin-bottom: 162px;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    max-width: 944px;\r\n    margin-bottom: 40px;\r\n    font-family: 'Cormorant', sans-serif;\r\n    font-size: 60px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    padding-left: 17vw;\r\n    max-width: 730px;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n.subtitle {\r\n  font-size: 60px;\r\n  font-family: 'Cormorant';\r\n  font-weight: 300;\r\n}\r\n\r\n.lover-flower {\r\n  &__container {\r\n    display: grid;\r\n    grid-template-columns: 1fr 250px 2fr;\r\n  }\r\n\r\n  &__title {\r\n    position: relative;\r\n    grid-column: 2/3;\r\n    grid-row: 1/2;\r\n    margin-bottom: 0;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: calc(100% + 20px);\r\n      bottom: 0.5em;\r\n      width: 60px;\r\n      height: 2px;\r\n      background-color: #43ffd2;\r\n    }\r\n  }\r\n\r\n  &__lover-flower-text {\r\n    grid-column: 3/4;\r\n    grid-row: 2/3;\r\n  }\r\n}\r\n\r\n.lover-flower-text {\r\n  padding: 40px 20px;\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    max-width: 653px;\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.guarantees {\r\n  &__container {\r\n    padding-left: 185px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph {\r\n    max-width: 690px;\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.services {\r\n  &__container {\r\n    padding-left: 185px;\r\n  }\r\n\r\n  &__title {\r\n    max-width: 700px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__list {\r\n    padding-left: 17vw;\r\n  }\r\n\r\n  &__item {\r\n    font-size: 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .about-us {\r\n    &__title {\r\n      padding-left: 50px;\r\n    }\r\n\r\n    &--bg {\r\n      position: relative;\r\n\r\n      &::after {\r\n        right: -106px;\r\n        width: 420px;\r\n      }\r\n\r\n      &::before {\r\n        left: -369px;\r\n      }\r\n    }\r\n\r\n    &__decor-color-bg {\r\n      &-2 {\r\n        &::after {\r\n          right: -280px;\r\n          bottom: -91px;\r\n          width: 583px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .lover-flower {\r\n    &__container {\r\n      display: grid;\r\n      grid-template-columns: 1fr 250px 5fr;\r\n    }\r\n  }\r\n\r\n  .guarantees {\r\n    &__container {\r\n      padding-left: 90px;\r\n    }\r\n  }\r\n\r\n  .services {\r\n    &__container {\r\n      padding-left: 90px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .subtitle {\r\n    font-size: 40px;\r\n  }\r\n\r\n  .lover-flower {\r\n    &__container {\r\n      grid-template-columns: 1fr 168px 5fr;\r\n    }\r\n  }\r\n\r\n  .about-us {\r\n    &__paragraph-1 {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .about-us {\r\n    &--bg {\r\n      &::before {\r\n        left: -415px;\r\n        transform: rotateY(180deg) rotateZ(254deg);\r\n      }\r\n      &:after {\r\n        right: -253px;\r\n      }\r\n    }\r\n\r\n    &__decor-color-bg-2 {\r\n      &::before {\r\n        content: none;\r\n      }\r\n      &::after {\r\n        right: -103px;\r\n        bottom: -285px;\r\n        width: 306px;\r\n      }\r\n    }\r\n\r\n    &__container {\r\n      padding-bottom: 110px;\r\n    }\r\n\r\n    &__lover-flower {\r\n      margin-bottom: 70px;\r\n    }\r\n\r\n    &__guarantees {\r\n      margin-bottom: 70px;\r\n    }\r\n\r\n    &__services {\r\n      margin-bottom: 66px;\r\n    }\r\n\r\n    &__paragraph-1 {\r\n      margin-bottom: 24px;\r\n      font-size: 20px;\r\n    }\r\n\r\n    &__paragraph-2 {\r\n      max-width: 182px;\r\n      padding-left: 0;\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .lover-flower {\r\n    &__container {\r\n      grid-template-columns: 45px 45px 1fr;\r\n      padding-right: 10px;\r\n      padding-left: 10px;\r\n    }\r\n\r\n    &__title {\r\n      grid-column: 1/3;\r\n\r\n      &::after {\r\n        width: 20px;\r\n        left: calc(100% + 10px);\r\n      }\r\n    }\r\n\r\n    &__lover-flower-text {\r\n      grid-column: 2/4;\r\n    }\r\n  }\r\n\r\n  .lover-flower-text {\r\n    padding: 10px;\r\n\r\n    &__paragraph-1 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-2 {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .guarantees {\r\n    &__container {\r\n      padding-left: 10px;\r\n    }\r\n\r\n    &__paragraph {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .services {\r\n    &__container {\r\n      padding-left: 10px;\r\n    }\r\n\r\n    &__list {\r\n      padding-left: 20px;\r\n    }\r\n\r\n    &__item {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./about-us.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"about-us about-us--bg\">\n  <div class=\"about-us__decor-color-bg-1\"></div>\n  <div class=\"about-us__decor-color-bg-2\"></div>\n  <div class=\"about-us__decor-color-bg-3\"></div>\n\n  <div class=\"about-us__container container--pt\">\n    <div class=\"container\">\n      <app-breadcrumbs\n        class=\"about-us__breadcrumbs\"\n        [links]=\"data.breadcrumbs\"\n      ></app-breadcrumbs>\n\n      <h1 class=\"about-us__title section-title text-uppercase\">\n        {{ data.title }}\n      </h1>\n    </div>\n\n    <section class=\"about-us__lover-flower lover-flower\">\n      <div class=\"lover-flower__container\">\n        <h2 class=\"lover-flower__title text-color--1 text-uppercase subtitle\">\n          {{ data.section.loverFlower.title }}\n        </h2>\n\n        <div\n          class=\"\n            lover-flower__lover-flower-text\n            lover-flower-text\n            card-background\n          \"\n        >\n          <p\n            class=\"\n              lover-flower-text__paragraph-1\n              text-uppercase text-weight-300 text-line-height-1-6\n            \"\n          >\n            {{ data.section.loverFlower.text }}\n          </p>\n\n          <p\n            class=\"\n              lover-flower-text__paragraph-2\n              text-weight-300 text-line-height-1-6\n            \"\n          >\n            {{ data.section.loverFlower.text2 }}\n          </p>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"about-us__guarantees guarantees\">\n      <div class=\"guarantees__container container\">\n        <h2 class=\"guarantees__title text-color--1 subtitle text-uppercase\">\n          {{ data.section.guarantees.title }}\n        </h2>\n\n        <p\n          class=\"\n            guarantees__paragraph\n            text-uppercase text-line-height-1-6 text-weight-300\n          \"\n        >\n          {{ data.section.guarantees.text }}\n        </p>\n      </div>\n    </section>\n\n    <section class=\"about-us__services services\">\n      <div class=\"services__container container\">\n        <h2 class=\"services__title text-color--1 text-uppercase subtitle\">\n          {{ data.section.services.title }}\n        </h2>\n\n        <ul class=\"services__list text-weight-300\">\n          <li\n            class=\"services__item\"\n            *ngFor=\"let service of data.section.services.list\"\n          >\n            {{ service }}\n          </li>\n        </ul>\n      </div>\n    </section>\n\n    <div class=\"container\">\n      <p class=\"about-us__paragraph-1 text-uppercase\">\n        {{ data.section.aboutUs.text }}\n      </p>\n\n      <p class=\"about-us__paragraph-2 text-uppercase text-line-height-1-6\">\n        {{ data.section.aboutUs.text2 }}\n      </p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-aff5444dac26c7ea63d074e436f08cfb35e1d74c40ede5fbba690c254d0d69ccb3de49bbc6e784722ecb7c9383960e938f67779c52fb81bb6ef46bb5dfba2048",
            "file": "src/app/components/accordion/accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion",
            "styleUrls": [
                "./accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IsOpen",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "bodyContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'bodyContent'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "switchContentVisible",
                    "args": [
                        {
                            "name": "value",
                            "type": "IsOpen",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IsOpen",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { expandAnimation } from '~animations/expand-animation';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef\n} from '@angular/core';\nimport { IsOpen } from './types';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [expandAnimation]\n})\nexport class AccordionComponent {\n  @ContentChild('bodyContent') bodyContent: TemplateRef<HTMLElement>;\n  private _isOpen = false;\n\n  @Input() set isOpen(value: IsOpen) {\n    this._isOpen = value;\n  }\n  public get isOpen(): IsOpen {\n    return this._isOpen;\n  }\n\n  public switchContentVisible(value?: IsOpen): void {\n    if (value === undefined) {\n      this.isOpen = !this.isOpen;\n      return;\n    }\n    this.isOpen = value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\n.content-wrapper {\r\n  overflow: hidden;\r\n}\r\n",
                    "styleUrl": "./accordion.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isOpen": {
                    "name": "isOpen",
                    "setSignature": {
                        "name": "isOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IsOpen",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 22,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IsOpen",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isOpen",
                        "type": "",
                        "returnType": "IsOpen",
                        "line": 25
                    }
                }
            },
            "templateData": "<div (click)=\"switchContentVisible()\" data-test=\"wrapper-button\">\n  <ng-content select=\"button\"></ng-content>\n</div>\n\n<div class=\"content-wrapper\" *ngIf=\"isOpen\" [@expandAnimation] data-test=\"wrapper-content\">\n  <ng-container [ngTemplateOutlet]=\"bodyContent\"></ng-container>\n  <ng-content select=\"content\"></ng-content>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-daa96f74e810ca74bd487c2738e026ebd853a6accd43aa855ba029ccef2f29f6a9c7f4ef09890371bfe408fc913e307d798bf4b8616dc947bcfddeb6ef9273f8",
            "file": "src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMainRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToIsMainRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { AppService } from './services/app/app.service';\nimport { DestroyerSubscriptionsService } from './services/events/destroyer-subscriptions.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  protected isMainRoute: boolean;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private dss: DestroyerSubscriptionsService,\n    private appService: AppService\n  ) {\n    appService.startApp();\n  }\n\n  ngOnInit(): void {\n    this.appService.subscribeToScrollTop();\n    this.subscribeToIsMainRoute();\n  }\n\n  ngOnDestroy(): void {\n    this.appService.unsubscribe();\n    this.dss.destroyAll();\n  }\n\n  private subscribeToIsMainRoute(): void {\n    this.appService.currentUrl$.subscribe((currentUrlInfo) => {\n      this.isMainRoute = this.appService.isMainRouteCheck(currentUrlInfo.url);\n      this.cdr.markForCheck();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dss",
                        "type": "DestroyerSubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dss",
                        "type": "DestroyerSubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-content [isMainRoute]=\"isMainRoute\"></app-content>\n"
        },
        {
            "name": "AppContentComponent",
            "id": "component-AppContentComponent-e3b6e2b5901ddca8ef6dee37833969dc1d22fdea487565e8fb008c964108f0d7a01e3da4f2ed08bba4a03b1e2f09844864600d1deb0e27c09656e192a472fe7e",
            "file": "src/app/page-components/app-content.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-content",
            "styleUrls": [
                "./app-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isMainRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './app-content.component.html',\n  styleUrls: ['./app-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppContentComponent {\n  @Input() isMainRoute: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n:host {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  overflow: clip;\r\n}\r\n\r\n.header {\r\n  top: 0;\r\n  z-index: 3;\r\n}\r\n\r\n.wrapper-router-outlet {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n\r\n  &--mt {\r\n    margin-top: -69px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .wrapper-router-outlet--mt {\r\n    margin-top: -89px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./app-content.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header\n  #header\n  class=\"header\"\n  appVisibilityByScroll\n  [isMainRoute]=\"isMainRoute\"\n  (emitIsOnMove)=\"header.isOnMove = $event\"\n  (emitBurgerClick)=\"burgerMenu.switchVisibleMenu(true)\"\n  (emitCartClick)=\"cartMenu.switchVisibleMenu()\"\n  [isBurgerMenuOpen]=\"burgerMenu.isOpen\"\n></app-header>\n\n<app-sidebar #burgerMenu>\n  <app-burger-menu\n    #content\n    (appChangeRoute)=\"burgerMenu.switchVisibleMenu(false)\"\n    (emitCloseMenu)=\"burgerMenu.switchVisibleMenu(false)\"\n  ></app-burger-menu>\n</app-sidebar>\n\n<app-sidebar #cartMenu positionMenu=\"right\">\n  <app-cart-menu-container\n    (appChangeRoute)=\"cartMenu.switchVisibleMenu(false)\"\n    (emitCloseMenu)=\"cartMenu.switchVisibleMenu(false)\"\n  ></app-cart-menu-container>\n</app-sidebar>\n\n<app-notifications-container></app-notifications-container>\n\n<div class=\"wrapper-router-outlet\" [ngClass]=\"{ 'wrapper-router-outlet--mt': isMainRoute }\">\n  <router-outlet></router-outlet>\n</div>\n\n<app-footer></app-footer>\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-dcd13dd5a0aa23e7d20a6d794a9a8c26a53029ee071f2e8817ff99f21c17f06a5cc860466d719f9593738eb33dfd8a4fe9b5a21a7fc427b2d8dd91e1601bbcec",
            "file": "src/app/components/badge/badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"pink\" | \"green\" | null",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BadgeComponent {\n  @Input() text: string;\n  @Input() bgColor: 'pink' | 'green' | null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n.badge {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 60px;\r\n  height: 60px;\r\n  padding: 3px;\r\n  border-radius: 50%;\r\n\r\n  &__text {\r\n    font-size: 20px;\r\n  }\r\n\r\n  &--pink {\r\n    background-color: $color-3;\r\n\r\n    & > .badge__text {\r\n      color: $color-5;\r\n    }\r\n  }\r\n\r\n  &--green {\r\n    background-color: $color-1;\r\n\r\n    & > .badge__text {\r\n      color: $color-5;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\n  class=\"badge\"\n  [ngClass]=\"{ 'badge--pink': bgColor === 'pink', 'badge--green': bgColor === 'green' }\"\n  data-test=\"badge\"\n>\n  <p class=\"badge__text text-uppercase\" *ngIf=\"text\" data-test=\"text\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "BreadcrumbsComponent",
            "id": "component-BreadcrumbsComponent-11a312949dcbcbb0935cb0bed51b96c5d5f241599a15e529ea4297355888dbacee5ee1d713770ea2c1a1f98b8d42280e27cd796de7ed486394f232dbeb956759",
            "file": "src/app/components/breadcrumbs/breadcrumbs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumbs",
            "styleUrls": [
                "./breadcrumbs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IBreadcrumb[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IBreadcrumb } from './types';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbsComponent {\n  @Input() links: IBreadcrumb[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.breadcrumbs {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  line-height: 1.6;\r\n\r\n  &__breadcrumb-item {\r\n    position: relative;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 1em;\r\n\r\n      &::after {\r\n        content: '/';\r\n        position: absolute;\r\n        right: -0.7em;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.breadcrumb-item {\r\n  &__link {\r\n    transition: color 0.3s;\r\n\r\n    &:hover {\r\n      color: rgb($color: $color-1, $alpha: 0.9);\r\n    }\r\n\r\n    &:active {\r\n      color: rgb($color: $color-1, $alpha: 0.7);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./breadcrumbs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"breadcrumbs text-uppercase list-reset\">\n  <li class=\"breadcrumbs__breadcrumb-item breadcrumb-item\" *ngFor=\"let linkData of links\">\n    <a\n      class=\"breadcrumb-item__link outline-focus\"\n      *ngIf=\"linkData.url; else text\"\n      [routerLink]=\"linkData.url\"\n      [queryParams]=\"linkData.params\"\n      ariaCurrentWhenActive=\"page\"\n      data-test=\"link\"\n      >{{ linkData.title }}</a\n    >\n\n    <ng-template #text>\n      <p class=\"breadcrumb-item__text\" data-test=\"text\">{{ linkData.title }}</p>\n    </ng-template>\n  </li>\n</ul>\n"
        },
        {
            "name": "BurgerMenuComponent",
            "id": "component-BurgerMenuComponent-02305b2d1a22618f7fe3a0388a7f972e1e5c5c8851febb7b3c492ed5b8c3e96909316fa21d3861c91e4b24b37180a745defbb4ac04d93dbbd00b794e834703bd",
            "file": "src/app/components/burger-menu/burger-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-burger-menu",
            "styleUrls": [
                "./burger-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./burger-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "emitCloseMenu",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dataAddress",
                    "defaultValue": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataContacts",
                    "defaultValue": "contacts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataNav",
                    "defaultValue": "routes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "firstElementElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { address } from 'src/data/address';\nimport { contacts } from 'src/data/contacts';\nimport { routes } from '~data/routes';\n\n@Component({\n  selector: 'app-burger-menu',\n  templateUrl: './burger-menu.component.html',\n  styleUrls: ['./burger-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BurgerMenuComponent {\n  public dataNav = routes;\n  public dataAddress = address;\n  public dataContacts = contacts;\n  public firstElementElRef: ElementRef<HTMLElement>;\n  @Output() emitCloseMenu: EventEmitter<void> = new EventEmitter();\n\n  public closeMenu(): void {\n    this.emitCloseMenu.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n}\r\n\r\n.burger-menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 320px;\r\n  height: 100%;\r\n  padding: 10px 20px;\r\n  background-color: $color-9;\r\n\r\n  &__controls {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__search-form {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__nav {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__wrapper-email {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__wrapper-address {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__wrapper-policy {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__container-content {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__link {\r\n    display: inline-block;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &__social-list {\r\n    margin-top: auto;\r\n  }\r\n}\r\n\r\n.nav-list {\r\n  position: relative;\r\n  padding-bottom: 10px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: $color-6;\r\n  }\r\n\r\n  &__item {\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.container-content {\r\n  height: 100%;\r\n  padding: 5px 2px 2px;\r\n}\r\n\r\n.wrapper-email {\r\n  &__link {\r\n    display: inline-block;\r\n    margin-bottom: 2px;\r\n  }\r\n  &__paragraph-1 {\r\n    font-size: 10px;\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n.wrapper-address {\r\n  &__link {\r\n    display: inline-block;\r\n    margin-bottom: 2px;\r\n  }\r\n  &__paragraph-1 {\r\n    font-size: 10px;\r\n    font-weight: 300;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    font-size: 10px;\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n.wrapper-policy {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  &__link-1 {\r\n    display: inline-block;\r\n    margin-bottom: 5px;\r\n    font-size: 11px;\r\n    color: $color-8;\r\n  }\r\n\r\n  &__link-2 {\r\n    display: inline-block;\r\n    font-size: 11px;\r\n    color: $color-8;\r\n  }\r\n}\r\n\r\n.social-list {\r\n  display: flex;\r\n\r\n  &__item {\r\n    &:not(:last-child) {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .burger-menu {\r\n    width: 100vw;\r\n  }\r\n}\r\n",
                    "styleUrl": "./burger-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"burger-menu\" aria-label=\"Боковое меню\">\n  <div class=\"burger-menu__controls controls\">\n    <a class=\"controls__link outline-focus\" routerLink=\"/\" aria-label=\"На главную\">\n      <app-icon class=\"\" icon=\"logo\"></app-icon>\n    </a>\n\n    <button\n      class=\"controls__button btn-reset btn-close outline-focus\"\n      (click)=\"closeMenu()\"\n      aria-label=\"Закрыть меню\"\n      data-test=\"btnClose\"\n    ></button>\n  </div>\n\n  <app-search-form-container class=\"burger-menu__search-form\"></app-search-form-container>\n\n  <div class=\"burger-menu__container-content container-content overflow-scroll-y--auto\">\n    <div class=\"container-content__wrapper-content wrapper-content\">\n      <nav class=\"burger-menu__nav nav\" role=\"navigation\" aria-label=\"Навигация по сайту\">\n        <ul class=\"nav-list list-reset\">\n          <li class=\"nav-list__item\">\n            <a\n              class=\"outline-focus\"\n              routerLink=\"/\"\n              routerLinkActive=\"text-color--1\"\n              [routerLinkActiveOptions]=\"{ exact: true }\"\n              ariaCurrentWhenActive=\"page\"\n              >Главная</a\n            >\n          </li>\n\n          <li class=\"nav-list__item\" *appForEntries=\"let item of dataNav\">\n            <a\n              class=\"outline-focus\"\n              [routerLink]=\"item.value.url\"\n              routerLinkActive=\"text-color--1\"\n              ariaCurrentWhenActive=\"page\"\n              >{{ item.value.title }}</a\n            >\n          </li>\n        </ul>\n      </nav>\n\n      <div class=\"burger-menu__wrapper-email wrapper-email\">\n        <a\n          href=\"mailto:zakaz@lowerflower.by&subject=Вопрос\"\n          class=\"wrapper-email__link text-color--1 outline-focus text-uppercase\"\n        >\n          {{ dataContacts.email }}\n        </a>\n\n        <p class=\"wrapper-email__paragraph-1\">ДОСТАВКА 24/7 ПО ДОГОВОРЕННОСТИ С ОПЕРАТОРОМ</p>\n      </div>\n\n      <div class=\"burger-menu__wrapper-address wrapper-address\">\n        <a\n          class=\"wrapper-address__link text-color--1 text-uppercase outline-focus\"\n          routerLink=\"/contacts\"\n          fragment=\"map\"\n          aria-label=\"Посмотреть адрес на карте\"\n          ><abbr title=\"Улица\">УЛ.</abbr> {{ dataAddress.street }}</a\n        >\n\n        <p class=\"wrapper-address__paragraph-1 text-uppercase\">\n          {{ dataAddress.workTime }}\n        </p>\n\n        <p class=\"wrapper-address__paragraph-2 text-uppercase\">\n          {{ dataAddress.weekends }}\n        </p>\n      </div>\n\n      <div class=\"burger-menu__wrapper-policy wrapper-policy\">\n        <a class=\"wrapper-policy__link-1 outline-focus\" href=\"#\">Политика конфиденциальности</a>\n\n        <a class=\"wrapper-policy__link-2 outline-focus\" href=\"#\">Обработка персональных данных</a>\n      </div>\n\n      <a\n        class=\"burger-menu__link outline-focus\"\n        [href]=\"'tel:' + dataContacts.phone\"\n        aria-label=\"Совершить звонок\"\n      >\n        {{ dataContacts.phone | mask : '+000 (00) 000-00-00' }}\n      </a>\n    </div>\n  </div>\n\n  <ul class=\"burger-menu__social-list social-list list-reset outline-focus\">\n    <li class=\"social-list__item\">\n      <a class=\"outline-focus\" aria-label=\"Инстаграм\" [href]=\"dataContacts.social.instagram\"\n        ><app-icon icon=\"instagram\"></app-icon\n      ></a>\n    </li>\n\n    <li class=\"social-list__item\">\n      <a class=\"outline-focus\" [href]=\"dataContacts.social.whatsapp\" aria-label=\"Вотсап\"\n        ><app-icon icon=\"whatsapp\"></app-icon\n      ></a>\n    </li>\n\n    <li class=\"social-list__item\">\n      <a class=\"outline-focus\" [href]=\"'tel:' + dataContacts.phone\" aria-label=\"Совершить звонок\"\n        ><app-icon icon=\"phone\"></app-icon\n      ></a>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "CartButtonComponent",
            "id": "component-CartButtonComponent-90d2cb8c1a98975cce683f361a090a86439f6e178380eba28d943ba88a222687586f97958d0d086d0d1b99a7727b29f4b52c12f14539780f8cbbf4e1b67fef32",
            "file": "src/app/components/cart-button/cart-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart-button",
            "styleUrls": [
                "./cart-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cart-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Count",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Count } from './types';\n\n@Component({\n  selector: 'app-cart-button',\n  templateUrl: './cart-button.component.html',\n  styleUrls: ['./cart-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CartButtonComponent {\n  @Input() count: Count;\n\n  get isCountVisible(): boolean {\n    return this.count > 0;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.btn-cart {\r\n  position: relative;\r\n  padding: 3px 7px;\r\n\r\n  &__count {\r\n    position: absolute;\r\n    top: -7px;\r\n    right: 3px;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      z-index: 1;\r\n      top: 50%;\r\n      left: 50%;\r\n      width: 100%;\r\n      padding-top: 100%;\r\n      background-color: $color-1;\r\n      border-radius: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n  }\r\n\r\n  &:hover {\r\n    .btn-cart__icon {\r\n      transform-origin: top center;\r\n      animation: shakeAnimation 0.3s;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes shakeAnimation {\r\n  0% {\r\n    transform: rotateZ(0deg);\r\n  }\r\n  50% {\r\n    transform: rotateZ(8deg);\r\n  }\r\n  100% {\r\n    transform: rotateZ(-8deg);\r\n  }\r\n}\r\n\r\n.count {\r\n  position: absolute;\r\n\r\n  &--opacity {\r\n    &-0 {\r\n      opacity: 0;\r\n    }\r\n\r\n    &-1 {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &__value {\r\n    position: relative;\r\n    z-index: 2;\r\n    padding: 4px;\r\n    font-size: 11px;\r\n    transition: opacity 0.3s;\r\n  }\r\n}\r\n",
                    "styleUrl": "./cart-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isCountVisible": {
                    "name": "isCountVisible",
                    "getSignature": {
                        "name": "isCountVisible",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 13
                    }
                }
            },
            "templateData": "<button class=\"btn-reset btn-cart outline-focus\" aria-label=\"Корзина\">\n  <app-icon class=\"btn-cart__icon\" icon=\"cart\"></app-icon>\n\n  <div\n    class=\"btn-cart__count count count--opacity-0\"\n    [ngClass]=\"{ 'count--opacity-1': isCountVisible }\"\n    data-test=\"wrapperCount\"\n  >\n    <div class=\"count__value\" data-test=\"countValue\">\n      {{ count | maxNumber : 99 : '+' }}\n    </div>\n  </div>\n</button>\n"
        },
        {
            "name": "CartMenuComponent",
            "id": "component-CartMenuComponent-8ed9ba985efd7962fc22c297e7d1445d9242097ef4cc4df87f098b803cff313ddea5703f011d04082c5be30b44069c6045c86e78917c2e1697e501decb3d3d6a",
            "file": "src/app/components/cart-menu/cart-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart-menu",
            "styleUrls": [
                "./cart-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cart-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cartPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "inCartProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Cart",
                    "decorators": []
                },
                {
                    "name": "isOfferProductsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "offerProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "IProduct[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitAddToCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<IEmitAddToCart>"
                },
                {
                    "name": "emitChangeProductCount",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<IEmitChangeProductCount>"
                },
                {
                    "name": "emitCloseMenu",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "emitDeleteFromCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_inCartProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Cart",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_offerProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isCartNotEmpty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "minProductCount",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeProductCount",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByProductId",
                    "args": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { enterLeaveAnimation } from '~animations/enter-leave-animation';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { expandAnimation } from 'src/app/animations/expand-animation';\nimport { fadeAnimation } from 'src/app/animations/fade-animation';\nimport { IEmitAddToCart, IEmitChangeProductCount } from './types';\nimport { IProduct } from '~types/product';\nimport { Cart, ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\n\n@Component({\n  selector: 'app-cart-menu',\n  templateUrl: './cart-menu.component.html',\n  styleUrls: ['./cart-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeAnimation, expandAnimation, enterLeaveAnimation]\n})\nexport class CartMenuComponent {\n  private _inCartProducts: Cart = [];\n  protected isCartNotEmpty: boolean;\n  protected _offerProducts: IProduct[] = [];\n  protected minProductCount = 1;\n\n  get inCartProducts(): Cart {\n    return this._inCartProducts;\n  }\n  @Input() set inCartProducts(inCartProducts: Cart) {\n    this._inCartProducts = inCartProducts;\n    this.isCartNotEmpty = 'length' in inCartProducts && inCartProducts.length !== 0;\n  }\n  @Input() cartPrice: number;\n  @Input() set offerProducts(offerProducts: IProduct[]) {\n    this._offerProducts = offerProducts.slice(0, 2);\n  }\n  @Input() isOfferProductsLoading: boolean;\n  @Output() emitAddToCart: EventEmitter<IEmitAddToCart> = new EventEmitter();\n  @Output() emitChangeProductCount: EventEmitter<IEmitChangeProductCount> = new EventEmitter();\n  @Output() emitCloseMenu: EventEmitter<void> = new EventEmitter();\n  @Output() emitDeleteFromCart: EventEmitter<number> = new EventEmitter();\n\n  protected onChangeProductCount(product: IProduct, count: number): void {\n    if (count < 1) {\n      return;\n    }\n    this.emitChangeProductCount.emit({ id: product.id, count });\n  }\n\n  protected deleteFromCart(id: number): void {\n    this.emitDeleteFromCart.emit(id);\n  }\n\n  protected addToCart(product: IProduct): void {\n    this.emitAddToCart.emit({ product, count: 1 });\n  }\n\n  protected trackByProductId(_: number, cartItem: ICartItem): number {\n    return cartItem.product.id;\n  }\n\n  public closeMenu(): void {\n    this.emitCloseMenu.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 450px;\r\n  height: 100%;\r\n  background-color: $color-9;\r\n  overflow: hidden;\r\n}\r\n\r\n.cart-menu-container {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 5px;\r\n\r\n  &--bg {\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: -224px;\r\n      top: -127px;\r\n      z-index: -1;\r\n      width: 493px;\r\n      height: 946px;\r\n      background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      opacity: 0.7;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  &__header {\r\n    padding-top: 20px;\r\n    padding-right: 30px;\r\n    padding-bottom: 16px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  &__body {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  &__wrapper-empty {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  &__recommendation {\r\n    margin-top: auto;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__wrapper-descr {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  &__link {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.wrapper-cart-container {\r\n  position: relative;\r\n  display: flex;\r\n  height: 100%;\r\n  padding-right: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.cart-list {\r\n  overflow: hidden;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  &__title {\r\n    margin-bottom: 0;\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n.recommendation {\r\n  padding-right: 30px;\r\n  padding-left: 30px;\r\n\r\n  &__title {\r\n    margin-bottom: 13px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  &__wrapper-list {\r\n    padding-bottom: 30px;\r\n    padding-right: 40px;\r\n  }\r\n}\r\n\r\n.recommendation-list {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n}\r\n\r\n.recommendation-item {\r\n  display: flex;\r\n\r\n  &__img-wrapper-link {\r\n    display: block;\r\n    width: 60px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 3px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  &__price {\r\n    margin-bottom: 6px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  &__btn {\r\n    padding: 1px;\r\n    font-size: 10px;\r\n  }\r\n}\r\n\r\n.img-wrapper-link {\r\n  &__img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  :host {\r\n    width: 100%;\r\n  }\r\n\r\n  .cart-menu-container {\r\n    width: 100vw;\r\n\r\n    &__header {\r\n      padding-top: 15px;\r\n      padding-right: 15px;\r\n      padding-bottom: 15px;\r\n      padding-left: 15px;\r\n    }\r\n\r\n    &__body {\r\n      padding-right: 15px;\r\n      padding-left: 15px;\r\n    }\r\n\r\n    &__wrapper-descr {\r\n      padding-right: 15px;\r\n      padding-left: 15px;\r\n      padding-bottom: 15px;\r\n    }\r\n  }\r\n\r\n  .recommendation {\r\n    padding-right: 15px;\r\n    padding-left: 15px;\r\n\r\n    &__wrapper-list {\r\n      padding-right: 0;\r\n      padding-bottom: 15px;\r\n    }\r\n  }\r\n\r\n  .header__title {\r\n    font-size: 21px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./cart-menu.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "inCartProducts": {
                    "name": "inCartProducts",
                    "setSignature": {
                        "name": "inCartProducts",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "inCartProducts",
                                "type": "Cart",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "inCartProducts",
                                "type": "Cart",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "inCartProducts",
                        "type": "",
                        "returnType": "Cart",
                        "line": 22
                    }
                },
                "offerProducts": {
                    "name": "offerProducts",
                    "setSignature": {
                        "name": "offerProducts",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "offerProducts",
                                "type": "IProduct[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "offerProducts",
                                "type": "IProduct[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"cart-menu-container cart-menu-container--bg\">\n  <div class=\"cart-menu-container__header header\">\n    <h2 class=\"header__title text-color--1 text-uppercase\">Ваша корзина</h2>\n\n    <button\n      class=\"header__btn btn-reset btn-close outline-focus\"\n      (click)=\"closeMenu()\"\n      aria-label=\"Закрыть корзину\"\n      data-test=\"btnClose\"\n    ></button>\n  </div>\n\n  <div class=\"wrapper-cart-container\">\n    <div class=\"cart-menu-container__body body overflow-scroll-y--auto\">\n      <ul class=\"body__cart-list cart-list list-reset\">\n        <li\n          class=\"cart-list__cart-item\"\n          *ngFor=\"let cartItem of inCartProducts; trackBy: trackByProductId\"\n          [@enterLeaveAnimation]\n          data-test=\"cartItem\"\n        >\n          <app-product-item\n            [product]=\"cartItem.product\"\n            [count]=\"cartItem.count\"\n            [minCount]=\"minProductCount\"\n            (countChange)=\"onChangeProductCount(cartItem.product, $event)\"\n            (emitDeleteFromCart)=\"deleteFromCart($event)\"\n            data-test=\"productItemComponent\"\n          ></app-product-item>\n        </li>\n      </ul>\n\n      <div\n        class=\"text-color--1 cart-menu-container__wrapper-empty wrapper-empty\"\n        *ngIf=\"!isCartNotEmpty\"\n      >\n        <p class=\"empty text-uppercase\">Корзина пуста.</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"cart-menu-container__recommendation recommendation\">\n    <app-loader\n      *ngIf=\"isOfferProductsLoading\"\n      text=\"Подбираем интересное предложение...\"\n      data-test=\"loader\"\n    ></app-loader>\n\n    <ng-template [ngIf]=\"!isOfferProductsLoading && _offerProducts.length\">\n      <p class=\"recommendation__title text-uppercase\">\n        Добавьте к заказу\n        <a\n          class=\"text-color--1 outline-focus\"\n          [routerLink]=\"['/catalog']\"\n          [queryParams]=\"{ category: 'balloon' }\"\n          aria-label=\"На страницу товара\"\n          >Шары:</a\n        >\n      </p>\n\n      <div class=\"recommendation__wrapper-list block-bottom-underline\">\n        <ul class=\"recommendation__recommendation-list recommendation-list list-reset\">\n          <li\n            class=\"recommendation-list__recommendation-item recommendation-item\"\n            *ngFor=\"let product of _offerProducts\"\n            data-test=\"itemOfferProduct\"\n          >\n            <a\n              class=\"recommendation-item__img-wrapper-link img-wrapper-link outline-focus\"\n              [routerLink]=\"['/product', '1']\"\n            >\n              <img\n                class=\"img-wrapper-link__img\"\n                [src]=\"product.images.main\"\n                [alt]=\"product.title\"\n              />\n            </a>\n\n            <div class=\"recommendation-item__content\">\n              <h3 class=\"recommendation-item__title text-uppercase\">\n                {{ product.title }}\n              </h3>\n\n              <p class=\"recommendation-item__price text-color--1\">\n                {{ product.price.value | currency : 'RUB' }}\n              </p>\n\n              <button\n                class=\"recommendation-item__btn btn-reset text-uppercase text-color--4 outline-focus\"\n                aria-label=\"Добавить в корзину\"\n                (click)=\"addToCart(product)\"\n              >\n                <span class=\"text-underline\">Добавить</span>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </ng-template>\n  </div>\n\n  <div\n    class=\"cart-menu-container__wrapper-descr\"\n    *ngIf=\"isCartNotEmpty\"\n    [@fadeAnimation]\n    [@expandAnimation]\n  >\n    <p class=\"text-uppercase text-color--1 text-line-height-1-6\">\n      Предварительный итог: {{ cartPrice | currency : 'RUB' }}.\n    </p>\n\n    <p class=\"cart-menu-container__paragraph-2 text-uppercase text-line-height-1-6\">\n      Чтобы узнать стоимость доставки, перейдите к оформлению заказа.\n    </p>\n\n    <div>\n      <a\n        class=\"cart-menu-container__link text-uppercase\"\n        routerLink=\"/order\"\n        appUiButton=\"2\"\n        aria-label=\"Перейти к оформлению заказа\"\n        >Оформить заказ</a\n      >\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CartMenuContainerComponent",
            "id": "component-CartMenuContainerComponent-d3103f2681ceca8935cbba7b8579f3f6b0cb852112433fed5ea52442959ec579397fbbce4b186ff2c735afa98b9c68e125d28f52a1240a89de12b03dae0c3752",
            "file": "src/app/containers/cart-menu-container/cart-menu-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart-menu-container",
            "styleUrls": [
                "./cart-menu-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cart-menu-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "emitCloseMenu",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<undefined>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_inCartProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Cart",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cartPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isCartNotEmpty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isOfferProductsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "minProductCount",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "recommendedProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "productInCart",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "productInCart",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeProductCount",
                    "args": [
                        {
                            "name": "payload",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToCartPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsInCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "trackByProductId",
                    "args": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { enterLeaveAnimation } from '~animations/enter-leave-animation';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { expandAnimation } from 'src/app/animations/expand-animation';\nimport { fadeAnimation } from 'src/app/animations/fade-animation';\nimport { Subject, map, takeUntil } from 'rxjs';\nimport { IProduct } from '~types/product';\nimport { Cart, ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { ProductsFilterService } from 'src/app/services/products-filter/products-filter.service';\n\n@Component({\n  selector: 'app-cart-menu-container',\n  templateUrl: './cart-menu-container.component.html',\n  styleUrls: ['./cart-menu-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeAnimation, expandAnimation, enterLeaveAnimation]\n})\nexport class CartMenuContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  private _inCartProducts: Cart = [];\n  protected isCartNotEmpty: boolean;\n  protected isOfferProductsLoading = false;\n  protected cartPrice: number;\n  protected minProductCount = 1;\n\n  get inCartProducts(): Cart {\n    return this._inCartProducts;\n  }\n  set inCartProducts(inCartProducts: Cart) {\n    this._inCartProducts = inCartProducts;\n    this.isCartNotEmpty = inCartProducts.length !== 0;\n  }\n  protected recommendedProducts: IProduct[];\n  @Output() emitCloseMenu: EventEmitter<undefined> = new EventEmitter();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private cartService: CartService,\n    private productsService: ProductsService,\n    private productsFilterService: ProductsFilterService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToProductsInCart();\n    this.subscribeToCartPrice();\n    this.subscribeToProducts();\n    this.subscribeToProductsLoading();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToCartPrice(): void {\n    this.cartService\n      .getPrice()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((price) => {\n        this.cartPrice = price;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsInCart(): void {\n    this.cartService\n      .getCart()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((inCartProducts) => {\n        this.inCartProducts = inCartProducts ? inCartProducts : [];\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProducts(): void {\n    this.productsService\n      .getProducts()\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((products) =>\n          products.filter((product) =>\n            this.productsFilterService.isHasCategory(product, { category: 'balloon' })\n          )\n        )\n      )\n      .subscribe((products) => {\n        this.recommendedProducts = products ? products : [];\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsLoading(): void {\n    this.productsService\n      .productsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isOfferProductsLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  protected onChangeProductCount(payload: { id: IProduct['id']; count: number }): void {\n    if (payload.count < 1) {\n      return;\n    }\n    this.cartService.changeProductCount(payload.id, payload.count);\n  }\n\n  protected deleteFromCart(id: number): void {\n    this.cartService.deleteFromCart(id);\n  }\n\n  protected addToCart(productInCart: { product: IProduct; count: number }): void {\n    this.cartService.addToCart(productInCart);\n  }\n\n  protected trackByProductId(_: number, cartItem: ICartItem) {\n    return cartItem.product.id;\n  }\n\n  public closeMenu(): void {\n    this.emitCloseMenu.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./cart-menu-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "inCartProducts": {
                    "name": "inCartProducts",
                    "setSignature": {
                        "name": "inCartProducts",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "inCartProducts",
                                "type": "Cart",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "inCartProducts",
                                "type": "Cart",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "inCartProducts",
                        "type": "",
                        "returnType": "Cart",
                        "line": 35
                    }
                }
            },
            "templateData": "<app-cart-menu\n  [inCartProducts]=\"inCartProducts\"\n  [offerProducts]=\"recommendedProducts\"\n  [isOfferProductsLoading]=\"isOfferProductsLoading\"\n  [cartPrice]=\"cartPrice\"\n  (emitAddToCart)=\"addToCart($event)\"\n  (emitChangeProductCount)=\"onChangeProductCount($event)\"\n  (emitDeleteFromCart)=\"deleteFromCart($event)\"\n  (emitCloseMenu)=\"closeMenu()\"\n  data-test=\"cartMenu\"\n></app-cart-menu>\n"
        },
        {
            "name": "CatalogComponent",
            "id": "component-CatalogComponent-f64ede6d27ab727ac6206c01ddb68eed42b4d34be6a0c0e53bea3385a0a40fd27f8d46b9bb34d94898c796779ad5e962495616af344f21327bb23259c6aeb784",
            "file": "src/app/page-components/main/catalog/catalog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-catalog-section",
            "styleUrls": [
                "./catalog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./catalog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.catalog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { pageData } from '~pages/main/data/pageData';\n\n@Component({\n  selector: 'app-catalog-section',\n  templateUrl: './catalog.component.html',\n  styleUrls: ['./catalog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogComponent {\n  public data = pageData.catalog;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.catalog-section {\r\n  position: relative;\r\n\r\n  &__container {\r\n    padding-top: 100px;\r\n    padding-bottom: 223px;\r\n  }\r\n  &__section-title {\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.card-list {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: 1fr 0.2fr 0.8fr;\r\n  grid-gap: 30px;\r\n  grid-template-rows: repeat(11, 30px);\r\n\r\n  &--color-bg {\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 25%;\r\n      left: -44%;\r\n      z-index: -1;\r\n      width: 140%;\r\n      height: 103%;\r\n      transform: rotateZ(15deg);\r\n      background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: -9%;\r\n      left: 24%;\r\n      z-index: -1;\r\n      width: 115%;\r\n      height: 92%;\r\n      transform: rotateZ(224deg);\r\n      background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes animShift {\r\n  from {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  to {\r\n    transform: translateX(30%);\r\n  }\r\n}\r\n\r\n@keyframes animOpacity {\r\n  from {\r\n    transform: opacity(1);\r\n  }\r\n\r\n  to {\r\n    transform: opacity(0);\r\n  }\r\n}\r\n\r\n.card-item {\r\n  &:first-child {\r\n    position: relative;\r\n    grid-row: 5/11;\r\n    grid-column: 1/2;\r\n\r\n    &:after {\r\n      content: 'ЦВЕТЫ';\r\n      position: absolute;\r\n      top: 9%;\r\n      left: -23%;\r\n      z-index: -2;\r\n      font-size: 200px;\r\n      color: $color-10;\r\n      animation: animShift 20s linear infinite alternate-reverse;\r\n      transition: transform 3s;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    position: relative;\r\n    grid-column: 3/4;\r\n    grid-row-start: span 6;\r\n\r\n    &:after {\r\n      content: 'БУКЕТЫ';\r\n      position: absolute;\r\n      top: 12%;\r\n      right: 36px;\r\n      z-index: -2;\r\n      font-size: 200px;\r\n      color: $color-10;\r\n      animation: animShift 17s linear infinite alternate;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n\r\n  &:last-child {\r\n    position: relative;\r\n    grid-column: 2/4;\r\n    grid-row: 7/12;\r\n\r\n    &:after {\r\n      content: 'ДОПОЛНИТЕЛЬНО';\r\n      position: absolute;\r\n      top: 50%;\r\n      left: -15%;\r\n      z-index: -2;\r\n      font-size: 200px;\r\n      color: $color-10;\r\n      animation: animShift 50s ease-in infinite alternate;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n}\r\n\r\n.card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 30px;\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(10px);\r\n  background-color: rgb($color: $color-10, $alpha: 0.2);\r\n\r\n  &__title {\r\n    margin-top: 0;\r\n    margin-bottom: 15px;\r\n    font-weight: 700;\r\n    font-size: 30px;\r\n    line-height: 1.6;\r\n    letter-spacing: 1px;\r\n    color: $color-1;\r\n  }\r\n\r\n  &__list {\r\n    margin-bottom: 28px;\r\n    padding-left: 15px;\r\n    list-style-type: disc;\r\n  }\r\n\r\n  &__item {\r\n    font-size: 18px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    margin-top: auto;\r\n    margin-left: auto;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .card-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .catalog-section {\r\n    &__container {\r\n      padding-bottom: 100px;\r\n    }\r\n  }\r\n\r\n  .card-item {\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    &:first-child {\r\n      &::after {\r\n        content: none;\r\n      }\r\n    }\r\n    &:nth-child(2) {\r\n      &::after {\r\n        content: none;\r\n      }\r\n    }\r\n    &:last-child {\r\n      &::after {\r\n        content: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .card {\r\n    &__list {\r\n      padding-left: 0;\r\n      list-style-type: none;\r\n    }\r\n\r\n    &__title {\r\n      font-size: 20px;\r\n    }\r\n\r\n    &__item {\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__link {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./catalog.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"catalog-section\">\n  <div class=\"catalog-section__text-bg\"></div>\n  <div class=\"catalog-section__text-bg\"></div>\n  <div class=\"catalog-section__decor-color-bg\"></div>\n\n  <div class=\"container catalog-section__container\">\n    <h2 class=\"section-title catalog-section__section-title\">\n      {{ data.title | uppercase }}\n    </h2>\n\n    <div>\n      <ul class=\"list-reset card-list card-list--color-bg\">\n        <li class=\"card-item\" *appForEntries=\"let categoryData of data.cards\">\n          <div class=\"card\">\n            <h3 class=\"card__title\">\n              {{ categoryData.value.title | uppercase }}\n            </h3>\n\n            <ul class=\"card__list\">\n              <li class=\"card__item\" *ngFor=\"let category of categoryData.value.categories\">\n                {{ category | uppercase }}\n              </li>\n            </ul>\n\n            <a\n              class=\"link card__link outline-focus\"\n              [routerLink]=\"[categoryData.value.link.url]\"\n              [queryParams]=\"{ category: categoryData.value.link.params }\"\n            >\n              {{ categoryData.value.link.title | uppercase }}\n            </a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "CatalogComponent",
            "id": "component-CatalogComponent-6408b7fcc80d2174a09e27355538e40da7b47b06a553c05a7127e103f971e43da384777728e1374df777687f9a3b80f929d130fe35b6370cb3d8b31580d3234b-1",
            "file": "src/app/pages/catalog/component/catalog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-catalog",
            "styleUrls": [
                "./catalog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./catalog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isProductsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "IProduct[]",
                    "decorators": []
                },
                {
                    "name": "productsError",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": " | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitAddToCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<ICartItem>"
                },
                {
                    "name": "emitRequestProducts",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "pageData",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "repeatRequestProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscribeToViewportSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "trackByProductId",
                    "args": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { pageData } from '~pages/catalog/data/pageData';\nimport { map } from 'rxjs';\nimport { IProduct } from '~types/product';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { ViewportSizeService } from 'src/app/services/events/resize/viewport-size.service';\n\n@Component({\n  selector: 'app-catalog',\n  templateUrl: './catalog.component.html',\n  styleUrls: ['./catalog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogComponent implements OnInit {\n  public pageData = pageData;\n  private width: number;\n  @Input() products: IProduct[];\n  @Input() isProductsLoading: boolean;\n  @Input() productsError: ErrorPayload['error'] | null = null;\n  @Output() emitAddToCart: EventEmitter<ICartItem> = new EventEmitter();\n  @Output() emitRequestProducts: EventEmitter<void> = new EventEmitter();\n\n  constructor(private vss: ViewportSizeService) {}\n\n  ngOnInit(): void {\n    this.subscribeToViewportSize();\n  }\n\n  private subscribeToViewportSize(): void {\n    this.vss.resizeObservable$\n      .pipe(map((sizes) => sizes.width))\n      .subscribe((width) => (this.width = width));\n  }\n\n  get isMobile(): boolean {\n    return this.width <= 768;\n  }\n\n  public repeatRequestProducts(): void {\n    this.emitRequestProducts.emit();\n  }\n\n  public addToCart(cartItem: ICartItem): void {\n    this.emitAddToCart.emit(cartItem);\n  }\n\n  get isError(): boolean {\n    return this.productsError !== null;\n  }\n\n  public trackByProductId(_: number, product: IProduct): number {\n    return product.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.catalog {\r\n  position: relative;\r\n\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__bg {\r\n    &-top {\r\n      pointer-events: none;\r\n\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        height: 606px;\r\n        width: 869px;\r\n        right: -180px;\r\n        top: 191px;\r\n        z-index: -1;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/catalog/pink-flower-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/catalog/pink-flower-bg.png')\r\n        );\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: center;\r\n        transform: rotate(355deg);\r\n        pointer-events: none;\r\n      }\r\n\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        height: 900px;\r\n        width: 875px;\r\n        left: -288px;\r\n        top: -282px;\r\n        z-index: -1;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/catalog/pink-flower-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/catalog/pink-flower-bg.png')\r\n        );\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: center;\r\n        transform: rotateZ(119deg);\r\n        pointer-events: none;\r\n      }\r\n    }\r\n    &-bottom {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        height: 685px;\r\n        width: 960px;\r\n        right: -382px;\r\n        bottom: -175px;\r\n        z-index: -1;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-repeat: no-repeat;\r\n        background-size: 100% 100%;\r\n        background-position: center;\r\n        transform: rotate(17deg);\r\n        pointer-events: none;\r\n      }\r\n\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 1085px;\r\n        height: 782px;\r\n        left: 302px;\r\n        bottom: -375px;\r\n        z-index: -1;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-repeat: no-repeat;\r\n        background-size: 100% 100%;\r\n        background-position: center;\r\n        transform: rotate(82deg);\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: fixed;\r\n    height: 629px;\r\n    width: 960px;\r\n    right: -405px;\r\n    top: -207px;\r\n    z-index: -2;\r\n    background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    transform: rotate(17deg);\r\n    pointer-events: none;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: fixed;\r\n    width: 1085px;\r\n    height: 782px;\r\n    left: -361px;\r\n    top: 217px;\r\n    z-index: -1;\r\n    background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    transform: rotate(116deg);\r\n    pointer-events: none;\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  &__hero {\r\n    display: block;\r\n    max-width: 920px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__sort-wrapper {\r\n    display: block;\r\n    max-width: 261px;\r\n    margin: 0 0 20px auto;\r\n  }\r\n}\r\n\r\n.hero {\r\n  padding: 15px 20px;\r\n  border-radius: 20px;\r\n\r\n  &__section-title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph {\r\n    max-width: 835px;\r\n    width: 100%;\r\n    margin-bottom: 50px;\r\n    padding-left: 35%;\r\n  }\r\n}\r\n\r\n.catalog-title {\r\n  &__part {\r\n    &-2 {\r\n      padding-left: 35%;\r\n    }\r\n  }\r\n}\r\n\r\n.wrapper-products {\r\n  display: flex;\r\n\r\n  &__filter-form {\r\n    position: relative;\r\n    flex: 0 0 250px;\r\n    margin-right: 30px;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      height: 999px;\r\n      width: 855px;\r\n      right: -168px;\r\n      top: -215px;\r\n      z-index: -1;\r\n      background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n      background-position: center;\r\n      transform: rotate(17deg);\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      height: 999px;\r\n      width: 855px;\r\n      right: -168px;\r\n      top: 313px;\r\n      z-index: -1;\r\n      background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n      background-position: center;\r\n      transform: rotate(17deg);\r\n    }\r\n  }\r\n\r\n  &__products-list {\r\n    flex: 0 1 825px;\r\n  }\r\n\r\n  &__empty-block {\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.accordion {\r\n  margin-bottom: 20px;\r\n\r\n  &__btn {\r\n    width: 100%;\r\n    padding: 16px 20px;\r\n    border-radius: 10px;\r\n    text-align: start;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .catalog__bg-top {\r\n    &::before {\r\n      width: 435px;\r\n      top: -150px;\r\n    }\r\n\r\n    &::after {\r\n      width: 400px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .catalog {\r\n    &__sort-wrapper {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  .wrapper-products {\r\n    flex-direction: column;\r\n\r\n    &__filter-form {\r\n      margin-bottom: 55px;\r\n    }\r\n  }\r\n  .catalog__hero {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .wrapper-products {\r\n    &__filter-form {\r\n      margin-right: 0;\r\n\r\n      &::before {\r\n        height: 916px;\r\n        width: 702px;\r\n        right: -168px;\r\n        top: -47px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .hero {\r\n    padding: 0;\r\n    background-color: transparent;\r\n    backdrop-filter: none;\r\n\r\n    &__paragraph {\r\n      padding-left: 20%;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .catalog-title {\r\n    &__part-2 {\r\n      padding-left: 20%;\r\n    }\r\n  }\r\n\r\n  .catalog__bg-top {\r\n    &::after {\r\n      width: 322px;\r\n      top: -51px;\r\n    }\r\n\r\n    &::before {\r\n      width: 160px;\r\n      left: -65px;\r\n      top: -170px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./catalog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isMobile": {
                    "name": "isMobile",
                    "getSignature": {
                        "name": "isMobile",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 43
                    }
                },
                "isError": {
                    "name": "isError",
                    "getSignature": {
                        "name": "isError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 55
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CatalogComponent-1",
            "templateData": "<div class=\"catalog\">\n  <div class=\"catalog__bg-top\"></div>\n  <div class=\"catalog__container container container--pt\">\n    <app-breadcrumbs class=\"catalog__breadcrumbs\" [links]=\"pageData.breadcrumbs\"></app-breadcrumbs>\n\n    <div class=\"catalog__hero hero card-background\">\n      <h1 class=\"hero__section-title section-title catalog-title text-uppercase\">\n        <p class=\"catalog-title__part-1\">каталог</p>\n        <p class=\"catalog-title__part-2\">букетов</p>\n      </h1>\n\n      <p class=\"hero__paragraph text-uppercase text-line-height-1-6\">\n        В нашем магазине самый большой выбор букетов для любых событий:\n      </p>\n\n      <app-category-filter-container class=\"hero__filters\"></app-category-filter-container>\n    </div>\n\n    <div class=\"catalog__sort-wrapper sort-wrapper\">\n      <app-sorting-container class=\"sort-wrapper__sorting\"></app-sorting-container>\n    </div>\n\n    <div class=\"catalog__wrapper-products wrapper-products\">\n      <ng-container *ngIf=\"!isMobile\" [ngTemplateOutlet]=\"filters\"></ng-container>\n\n      <app-accordion class=\"accordion\" *ngIf=\"isMobile\">\n        <button\n          slot=\"button\"\n          class=\"accordion__btn btn-reset text-color--4 text-uppercase text-weight-300 card-background outline-focus\"\n        >\n          Фильтр товаров\n        </button>\n\n        <ng-template slot=\"content\" #bodyContent>\n          <ng-container [ngTemplateOutlet]=\"filters\"></ng-container>\n        </ng-template>\n      </app-accordion>\n\n      <ng-template #filters>\n        <app-filters-form-container\n          class=\"wrapper-products__filter-form\"\n        ></app-filters-form-container>\n      </ng-template>\n\n      <app-product-list-card\n        class=\"wrapper-products__products-list\"\n        *ngIf=\"products\"\n        [isLoading]=\"isProductsLoading\"\n        [error]=\"isError\"\n        (emitRepeatRequest)=\"repeatRequestProducts()\"\n      >\n        <div\n          class=\"wrapper-products__empty-block text-uppercase text-line-height-1-6\"\n          *ngIf=\"!isProductsLoading && !isError && !products.length\"\n        >\n          <p>Товары не найдены.</p>\n          <p>Попробуйте изменить фильтры.</p>\n        </div>\n\n        <app-product-card [product]=\"product\" *ngFor=\"let product of products\">\n          <button\n            (click)=\"addToCart({product, count: 1})\"\n            class=\"text-uppercase\"\n            slot=\"btn\"\n            appUiButton=\"2\"\n          >\n            В корзину\n          </button>\n        </app-product-card>\n      </app-product-list-card>\n    </div>\n  </div>\n\n  <button\n    class=\"catalog__btn-scroll btn-reset btn-scroll card-background\"\n    aria-label=\"Пролистнуть наверх\"\n    appButtonScroll\n  >\n    <app-icon class=\"btn-scroll__icon\" icon=\"arrow-right\"></app-icon>\n  </button>\n\n  <div class=\"catalog__bg-bottom\"></div>\n</div>\n"
        },
        {
            "name": "CatalogContainerComponent",
            "id": "component-CatalogContainerComponent-26fed81e416545b31e8b77b2d266079cbb678dcf3d512bdc342795b8898fe7df3192062ca2c873ed0033d6a0653b121c7ac70696fb270b7162f87704e9891d1d",
            "file": "src/app/pages/catalog/catalog-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-catalog-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./catalog-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IProduct>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsError",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productsIsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TIsLoading",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "repeatRequestProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subject, map } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { TIsLoading } from 'src/app/store/products/products.reducer';\nimport { IProduct } from '~types/product';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { ProductsFilterService } from 'src/app/services/products-filter/products-filter.service';\nimport { ProductsSortingService } from 'src/app/services/products-sorting/products-sorting.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { Meta } from '@angular/platform-browser';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-catalog-container',\n  templateUrl: './catalog-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  private queryParams: Params;\n  public products: Array<IProduct>;\n  public productsIsLoading: TIsLoading;\n  public productsError: ErrorPayload['error'] | null = null;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private productsService: ProductsService,\n    private productsFilterService: ProductsFilterService,\n    private productsSortingService: ProductsSortingService,\n    private cartService: CartService,\n    private meta: Meta\n  ) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToProducts();\n    this.subscribeToProductsLoading();\n    this.subscribeToProductsError();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private subscribeToProducts(): void {\n    this.activatedRoute.queryParams\n      .pipe(\n        takeUntil(this.destroySubject),\n        distinctUntilChanged(),\n        tap((queryParams) => (this.queryParams = queryParams)),\n        switchMap(() => this.productsService.getProducts()),\n        map((products) =>\n          this.productsFilterService.getFilteredProducts(products, this.queryParams)\n        ),\n        map((products) =>\n          this.productsSortingService.sortedProducts(\n            products,\n            this.queryParams['sort'],\n            this.queryParams['target-sort']\n          )\n        )\n      )\n      .subscribe((products) => {\n        this.products = products;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsLoading(): void {\n    this.productsService\n      .productsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.productsIsLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsError(): void {\n    this.productsService\n      .productsError()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((error) => {\n        this.productsError = error;\n        this.cdr.markForCheck();\n      });\n  }\n\n  public repeatRequestProducts(): void {\n    this.productsService.requestProducts();\n  }\n\n  public addToCart(cartItem: ICartItem): void {\n    this.cartService.addToCart(cartItem);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsSortingService",
                        "type": "ProductsSortingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsSortingService",
                        "type": "ProductsSortingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-catalog\n  [products]=\"products\"\n  [isProductsLoading]=\"productsIsLoading\"\n  [productsError]=\"productsError\"\n  (emitAddToCart)=\"addToCart($event)\"\n  (emitRequestProducts)=\"repeatRequestProducts()\"\n></app-catalog>\n"
        },
        {
            "name": "CategoryFilterComponent",
            "id": "component-CategoryFilterComponent-40c0acedb63eb08d36c53ee092857180f8d795932d8ef2d8054e2466f29e6a15b852d20a8e902467470d5b39b94029716be962eec144ea2a043a06892efb3779",
            "file": "src/app/components/category-filter/category-filter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category-filter",
            "styleUrls": [
                "./category-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./category-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeCategories",
                    "defaultValue": "new Set([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Set<CategoriesParams>",
                    "decorators": []
                },
                {
                    "name": "categories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ICategory[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSelectCategory",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<CategoriesParams>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handlerSelectCategory",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Partial<MouseEvent>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Partial<MouseEvent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isActiveCategory",
                    "args": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CategoriesParams } from '~types/product';\n\nexport interface ICategory {\n  title: string;\n  paramValue: CategoriesParams;\n}\nexport type DataIndex = string;\n\n@Component({\n  selector: 'app-category-filter',\n  templateUrl: './category-filter.component.html',\n  styleUrls: ['./category-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CategoryFilterComponent {\n  @Input() categories: ICategory[] = [];\n  @Input() activeCategories: Set<CategoriesParams> = new Set([]);\n  @Output() emitSelectCategory: EventEmitter<CategoriesParams> = new EventEmitter();\n\n  protected isActiveCategory(paramValue: CategoriesParams): boolean {\n    return this.activeCategories.has(paramValue);\n  }\n\n  protected handlerSelectCategory(ev: Partial<MouseEvent>): void {\n    const target = ev.target;\n    if (!target || !(target instanceof HTMLElement) || !target.getAttribute('data-param')) {\n      return;\n    }\n    const param = target.getAttribute('data-param');\n    if (param === null) {\n      return;\n    }\n    this.emitSelectCategory.emit(<CategoriesParams>param);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.list-categories {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.category-btn {\r\n  &--active {\r\n    border-color: $color-1;\r\n    background-color: $color-1;\r\n    color: $color-5;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .list-categories {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./category-filter.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"list-reset list-categories text-uppercase\" (click)=\"handlerSelectCategory($event)\">\n  <li class=\"list-categories__item\" *ngFor=\"let category of categories; let index = index\">\n    <button\n      class=\"text-uppercase outline-focus list-categories__category-btn category-btn\"\n      [ngClass]=\"{ 'category-btn--active': isActiveCategory(category.paramValue) }\"\n      [attr.data-param]=\"category.paramValue\"\n      appUiButton=\"3\"\n    >\n      {{ category.title }}\n    </button>\n  </li>\n</ul>\n"
        },
        {
            "name": "CategoryFilterContainerComponent",
            "id": "component-CategoryFilterContainerComponent-00d1db922501806ecb8e752d187e8e9f8f7ac6797234aa23e384e1cc5e02c80dfb9ad33de61b36a5689827733f635a842662dd52815dd7f5db64517cb907ca85",
            "file": "src/app/containers/category-filter-container/category-filter-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category-filter-container",
            "styleUrls": [
                "./category-filter-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./category-filter-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeCategories",
                    "defaultValue": "new Set<CategoriesParams>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "categoriesData",
                    "defaultValue": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICategory[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initialValueFilters",
                    "defaultValue": "{ category: [] }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSelectCategory",
                    "args": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setActiveFromParams",
                    "args": [
                        {
                            "name": "categories",
                            "type": "CategoriesParams[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "categories",
                            "type": "CategoriesParams[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToViewportSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "switchCategory",
                    "args": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "paramValue",
                            "type": "CategoriesParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, map, takeUntil } from 'rxjs';\nimport { ViewportSizeService } from 'src/app/services/events/resize/viewport-size.service';\nimport { ParamsService } from 'src/app/services/params/params.service';\nimport { ICategory } from '~components/category-filter/category-filter.component';\nimport { categories } from '~data/product';\nimport { CATEGORY_PARAMS, CategoriesParams, EnumCategories } from '~types/product';\n\n@Component({\n  selector: 'app-category-filter-container',\n  templateUrl: './category-filter-container.component.html',\n  styleUrls: ['./category-filter-container.component.scss']\n})\nexport class CategoryFilterContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  protected categoriesData: ICategory[] = categories;\n  private initialValueFilters: { category: CategoriesParams[] } = { category: [] };\n  protected activeCategories = new Set<CategoriesParams>();\n  private width: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n    private vss: ViewportSizeService,\n    private paramsService: ParamsService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToViewportSize();\n    this.subscribeToQueryParams();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  get isMobile(): boolean {\n    return this.width <= 768;\n  }\n\n  private subscribeToViewportSize(): void {\n    this.vss.resizeObservable$\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((sizes) => sizes.width)\n      )\n      .subscribe((width) => {\n        this.width = width;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToQueryParams() {\n    this.activatedRoute.queryParams\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((params) => this.paramsService.convertParamsToData(params, this.initialValueFilters))\n      )\n      .subscribe((dataFromParams) => {\n        const categories = dataFromParams?.['category'];\n\n        if (categories && Array.isArray(categories)) {\n          this.setActiveFromParams(categories);\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  public setActiveFromParams(categories: CategoriesParams[]): void {\n    const updatedParams = new Set<CategoriesParams>();\n\n    categories.forEach((categoryParam: CategoriesParams) => {\n      if (EnumCategories[categoryParam] in CATEGORY_PARAMS) {\n        updatedParams.add(categoryParam);\n      }\n    });\n    this.activeCategories = updatedParams;\n  }\n\n  public handlerSelectCategory(paramValue: CategoriesParams): void {\n    this.switchCategory(paramValue);\n    this.setQueryParams();\n  }\n\n  private switchCategory(paramValue: CategoriesParams): void {\n    if (!this.activeCategories.has(paramValue)) {\n      this.activeCategories.add(paramValue);\n      return;\n    }\n    this.activeCategories.delete(paramValue);\n  }\n\n  private setQueryParams(): void {\n    const currentParams =\n      this.activeCategories.size > 0 ? { category: Array.from(this.activeCategories) } : {};\n    this.paramsService.setParams(currentParams, this.initialValueFilters);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.accordion {\r\n  &__btn {\r\n    width: 100%;\r\n    padding: 16px 20px;\r\n    border-radius: 10px;\r\n    text-align: start;\r\n  }\r\n}\r\n",
                    "styleUrl": "./category-filter-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isMobile": {
                    "name": "isMobile",
                    "getSignature": {
                        "name": "isMobile",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 39
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"!isMobile\" [ngTemplateOutlet]=\"category\"></ng-container>\n\n<app-accordion *ngIf=\"isMobile\" data-test=\"accordionCategory\">\n  <button\n    slot=\"button\"\n    class=\"accordion__btn btn-reset text-color--4 text-uppercase text-weight-300 card-background outline-focus\"\n  >\n    Категории товаров\n  </button>\n\n  <ng-template slot=\"content\" #bodyContent>\n    <ng-container [ngTemplateOutlet]=\"category\"></ng-container>\n  </ng-template>\n</app-accordion>\n\n<ng-template #category>\n  <h2 class=\"visually-hidden\">Категории товаров</h2>\n\n  <app-category-filter\n    [categories]=\"categoriesData\"\n    [activeCategories]=\"activeCategories\"\n    (emitSelectCategory)=\"handlerSelectCategory($event)\"\n    data-test=\"categoryFilter\"\n  ></app-category-filter>\n</ng-template>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-0391c0e670315dac692ff6bbfc099361ce80ae8ae0e3404c704d631e99a3f5258f38d78250df48ef6ce1808733a8256f36e3b7557d3ae44e20059060be9a9c41",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "AttributeName",
                    "decorators": []
                },
                {
                    "name": "attrValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "AttributeValue",
                    "decorators": []
                },
                {
                    "name": "labelValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "LabelValue",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckboxState",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "checkboxControl",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "checkboxElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'checkbox'"
                        }
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "generateRandomString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "onChangeCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnChangeCallback<CheckboxState | null>",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouchedCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnTouchedCallback",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Partial<Event>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Partial<Event>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focusout'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<CheckboxState | null>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<CheckboxState | null>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCheckedValueToControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "isChecked",
                            "type": "CheckboxState | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isChecked",
                            "type": "CheckboxState | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "focusout",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  ViewChild,\n  forwardRef\n} from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { generateRandomString } from 'src/utils/randomString';\nimport { AttributeName, AttributeValue, LabelValue, CheckboxState } from './types';\nimport { OnChangeCallback, OnTouchedCallback } from '~types/controlValueAccessor';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, AfterViewInit {\n  @ViewChild('checkbox') checkboxElRef: ElementRef<HTMLInputElement>;\n  protected readonly id: string = generateRandomString();\n  protected checkboxControl = new FormControl(false);\n  @Input() attrName: AttributeName;\n  @Input() attrValue: AttributeValue;\n  @Input() labelValue: LabelValue;\n\n  private _isChecked: CheckboxState;\n  public get isChecked(): CheckboxState {\n    return this._isChecked;\n  }\n  protected set isChecked(isChecked: CheckboxState | null) {\n    this._isChecked = !!isChecked;\n\n    if (this.checkboxElRef) {\n      this.setCheckedValueToControl();\n    }\n  }\n\n  private onChangeCallBack: OnChangeCallback<CheckboxState | null>;\n  private onTouchedCallBack: OnTouchedCallback;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.isChecked) {\n      this.setCheckedValueToControl();\n    }\n  }\n\n  @HostListener('focusout')\n  private onTouched(): void {\n    if (!this.onTouchedCallBack) {\n      return;\n    }\n    this.onTouchedCallBack();\n  }\n\n  public writeValue(isChecked: CheckboxState | null): void {\n    this.isChecked = isChecked;\n  }\n\n  public onChange(event: Partial<Event>): void {\n    this.isChecked = !!(event && event.target && (<HTMLInputElement>event.target).checked);\n    if (!this.onChangeCallBack) {\n      return;\n    }\n    this.onChangeCallBack(this.isChecked);\n  }\n\n  public registerOnChange(fn: OnChangeCallback<CheckboxState | null>): void {\n    this.onChangeCallBack = fn;\n  }\n\n  public registerOnTouched(fn: OnTouchedCallback): void {\n    this.onTouchedCallBack = fn;\n  }\n\n  private setCheckedValueToControl() {\n    this.checkboxElRef.nativeElement.checked = this.isChecked;\n    this.cdr.markForCheck();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\r\n\r\n.checkbox-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 7px;\r\n  }\r\n\r\n  &__checkbox {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 12px;\r\n    pointer-events: none;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid $color-6;\r\n      border-radius: 2px;\r\n    }\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      z-index: 3;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-image: url(\"/assets/icons/check-mark.svg\");\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      opacity: 0;\r\n      transition: opacity 0.2s;\r\n    }\r\n  }\r\n\r\n  &__input {\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n\r\n    &:checked ~ .checkbox-wrapper__checkbox {\r\n      &::before {\r\n      }\r\n\r\n      &::after {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    &:focus ~ .checkbox-wrapper__checkbox {\r\n      outline: 2px solid $color-1;\r\n    }\r\n  }\r\n\r\n  &__label {\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "AfterViewInit"
            ],
            "accessors": {
                "isChecked": {
                    "name": "isChecked",
                    "setSignature": {
                        "name": "isChecked",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isChecked",
                                "type": "CheckboxState | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "jsdoctags": [
                            {
                                "name": "isChecked",
                                "type": "CheckboxState | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isChecked",
                        "type": "",
                        "returnType": "CheckboxState",
                        "line": 40
                    }
                }
            },
            "templateData": "<div class=\"filter-form__checkbox-wrapper checkbox-wrapper\">\n  <input\n    #checkbox\n    class=\"checkbox-wrapper__input\"\n    [id]=\"id\"\n    type=\"checkbox\"\n    [value]=\"attrValue\"\n    [name]=\"attrName\"\n    [checked]=\"isChecked\"\n    (change)=\"onChange($event)\"\n    [formControl]=\"checkboxControl\"\n  />\n  <div class=\"checkbox-wrapper__checkbox\"></div>\n  <label\n    class=\"checkbox-wrapper__label text-uppercase text-weight-300\"\n    [for]=\"id\"\n    data-test=\"label\"\n  >\n    {{ labelValue }}\n  </label>\n</div>\n"
        },
        {
            "name": "ContactsComponent",
            "id": "component-ContactsComponent-472015cd9242bfb4eec97ea099e7034e44339d79346074c849106e22d31245667006f82754019d873c8ee2e5419d0ca31f739a1b0e305796bcc95d1420c75da8",
            "file": "src/app/pages/contacts/contacts.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contacts",
            "styleUrls": [
                "./contacts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contacts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinatesShops",
                    "defaultValue": "[\n    { lat: 53.925269070640965, lon: 27.508174499999964 }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[literal type]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "mapId",
                    "defaultValue": "'address-map'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initMap",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { YmapsService } from 'src/app/services/ymaps/ymaps.service';\nimport { pageData } from '~pages/contacts/data/data';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactsComponent implements OnInit {\n  protected data = pageData;\n  protected mapId = 'address-map';\n  private _isLoading = false;\n  private set isLoading(isLoading: boolean) {\n    this._isLoading = isLoading;\n    this.cdr.markForCheck();\n  }\n  public get isLoading(): boolean {\n    return this._isLoading;\n  }\n  private coordinatesShops: [{ lat: number; lon: number }] = [\n    { lat: 53.925269070640965, lon: 27.508174499999964 }\n  ];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private ymapsService: YmapsService,\n    private meta: Meta\n  ) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.initMap();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private async initMap() {\n    this.isLoading = true;\n    await this.ymapsService.initMap(this.coordinatesShops);\n    this.isLoading = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n.contacts-section {\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      z-index: -1;\r\n      width: 704px;\r\n      height: 717px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/contacts/red-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/contacts/red-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n      top: 50%;\r\n      z-index: -1;\r\n      width: 383px;\r\n      height: 404px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/contacts/red-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/contacts/red-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateY(180deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/contacts/red-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(76deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -307px;\r\n        top: -304px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/contacts/red-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(120deg);\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -223px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/contacts/red-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(126deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -338px;\r\n        bottom: -367px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/contacts/red-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(93deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 46px;\r\n  }\r\n}\r\n\r\n.hero {\r\n  &__title {\r\n    margin-bottom: 40px;\r\n    padding-left: 90px;\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 140px;\r\n  }\r\n}\r\n\r\n.contacts-list {\r\n  display: flex;\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: -72px;\r\n      top: -462px;\r\n      z-index: -2;\r\n      width: 949px;\r\n      height: 1230px;\r\n      background-image: url('/assets/images/pages/contacts/red-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(151deg);\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-basis: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 54px 30px;\r\n    border-radius: 20px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n.write-us {\r\n  &__container {\r\n    display: flex;\r\n    padding-bottom: 100px;\r\n  }\r\n\r\n  &__title {\r\n    margin-right: 68px;\r\n    text-align: end;\r\n  }\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: 20%;\r\n      top: 40%;\r\n      z-index: -2;\r\n      width: 300px;\r\n      height: 300px;\r\n      background-image: url('/assets/images/pages/contacts/have-any-questions.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n  }\r\n}\r\n\r\n.on-map {\r\n  &___title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__map {\r\n    height: 500px;\r\n  }\r\n\r\n  &__loader {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .contacts-list {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    &__item {\r\n      width: 100%;\r\n      padding: 10px;\r\n\r\n      &:not(:last-child) {\r\n        margin-right: 0;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .contacts-section {\r\n    &--bg {\r\n      &::before {\r\n        content: none;\r\n      }\r\n\r\n      &::after {\r\n        width: 231px;\r\n        height: 335px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .write-us {\r\n    &__container {\r\n      flex-direction: column;\r\n    }\r\n\r\n    &--bg {\r\n      &::after {\r\n        left: 57%;\r\n        top: 2%;\r\n        width: 140px;\r\n        height: 140px;\r\n      }\r\n    }\r\n\r\n    &__title {\r\n      margin-right: 0;\r\n      text-align: start;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .contacts-section {\r\n    &__container {\r\n      padding-bottom: 150px;\r\n    }\r\n\r\n    &__decor-color-bg {\r\n      &-1 {\r\n        &::after {\r\n          content: none;\r\n        }\r\n        &::before {\r\n          right: 95px;\r\n          top: -43px;\r\n          width: 661px;\r\n          height: 524px;\r\n          transform: rotateZ(55deg);\r\n          opacity: 0.8;\r\n        }\r\n      }\r\n      &-2 {\r\n        &::after {\r\n          content: none;\r\n        }\r\n        &::before {\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .hero {\r\n    &__title {\r\n      margin-bottom: 20px;\r\n      padding-left: 0;\r\n    }\r\n\r\n    &__container {\r\n      padding-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .contacts-list {\r\n    &__item {\r\n      align-items: flex-start;\r\n      padding: 0;\r\n      background-color: transparent;\r\n    }\r\n\r\n    &__paragraph-1 {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  .write-us {\r\n    &__container {\r\n      padding-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .on-map {\r\n    &__map {\r\n      height: 300px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./contacts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ymapsService",
                        "type": "YmapsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ymapsService",
                        "type": "YmapsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isLoading": {
                    "name": "isLoading",
                    "setSignature": {
                        "name": "isLoading",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isLoading",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "isLoading",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isLoading",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"contacts-section contacts-section--bg\">\n  <div class=\"contacts-section__decor-color-bg-1\"></div>\n  <div class=\"contacts-section__decor-color-bg-2\"></div>\n\n  <div class=\"contacts-section__container container--pt\">\n    <div class=\"contacts-section__hero hero\">\n      <div class=\"hero__container container\">\n        <app-breadcrumbs\n          class=\"contacts-section__breadcrumbs\"\n          [links]=\"data.breadcrumbs\"\n        ></app-breadcrumbs>\n\n        <h1 class=\"hero__title section-title text-uppercase\">\n          {{ data.title }}\n        </h1>\n\n        <ul class=\"hero__contacts-list contacts-list contacts-list--bg list-reset\">\n          <li class=\"contacts-list__item card-background card-background\">\n            <p class=\"contacts-list__paragraph-1 text-color--1 text-uppercase\">\n              {{ data.contactsSection.time.title }}\n            </p>\n            <p class=\"contacts-list__paragraph-2\">\n              {{ data.contactsSection.time.descr }}\n            </p>\n          </li>\n\n          <li class=\"contacts-list__item card-background card-background\">\n            <p class=\"contacts-list__paragraph-1 text-color--1 text-uppercase\">\n              {{ data.contactsSection.address.title }}\n            </p>\n            <p class=\"contacts-list__paragraph-2\">\n              {{ data.contactsSection.address.descr }}\n            </p>\n          </li>\n\n          <li class=\"contacts-list__item card-background card-background\">\n            <p class=\"contacts-list__paragraph-1 text-color--1 text-uppercase\">\n              {{ data.contactsSection.phone.title }}\n            </p>\n            <a\n              class=\"contacts-list__paragraph-2\"\n              [href]=\"'tel:' + data.contactsSection.phone.descr\"\n              aria-label=\"Совершить звонок\"\n            >\n              {{ data.contactsSection.phone.descr | mask : '+000 (00) 000-00-00' }}\n            </a>\n          </li>\n\n          <li class=\"contacts-list__item card-background card-background\">\n            <p class=\"contacts-list__paragraph-1 text-color--1 text-uppercase\">\n              {{ data.contactsSection.email.title }}\n            </p>\n            <a\n              class=\"contacts-list__paragraph-2\"\n              [href]=\"'mailto:' + data.contactsSection.email.descr + '&subject=Вопрос'\"\n            >\n              {{ data.contactsSection.email.descr }}\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <section class=\"contacts__write-us write-us write-us--bg\">\n      <div class=\"write-us__container container\">\n        <h2 class=\"write-us__title section-title text-uppercase\">\n          <p class=\"write-us__title-part-1\">{{ data.feedback.title.part1 }}</p>\n          <p class=\"write-us__title-part-2\">{{ data.feedback.title.part2 }}</p>\n        </h2>\n\n        <app-feedback-form-container></app-feedback-form-container>\n      </div>\n    </section>\n\n    <section class=\"on-map\">\n      <div class=\"on-map__container container\">\n        <h2 id=\"map\" class=\"on-map__title text-color--1 text-uppercase\">\n          {{ data.map.title }}\n        </h2>\n\n        <app-loader class=\"on-map__loader\" *ngIf=\"isLoading\" text=\"рисуем карту...\"></app-loader>\n\n        <div [id]=\"mapId\" class=\"on-map__map\"></div>\n      </div>\n    </section>\n  </div>\n</div>\n"
        },
        {
            "name": "CorporateClientsComponent",
            "id": "component-CorporateClientsComponent-55b6d61687297b18e8410229e48ab4430675fadf6cca06b76b85d3f196a439a5f07f31d9b24538ac6451a4a050d71e4ecd37d684914f2517723128a0b1f2f5d6",
            "file": "src/app/pages/corporate-clients/component/corporate-clients.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-corporate-clients",
            "styleUrls": [
                "./corporate-clients.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./corporate-clients.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "breadcrumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IBreadcrumb[]",
                    "decorators": []
                },
                {
                    "name": "corporateUserData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ICorporateUser",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSubmitForm",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<ICorporateUser>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "corporateFormData",
                    "defaultValue": "{\n    corporateName: '',\n    postalAddress: '',\n    name: '',\n    phone: '',\n    bouquetPrice: '',\n    email: '',\n    unp: '',\n    paymentAccount: '',\n    bankCode: '',\n    numberRequestsMonth: ''\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICorporateUser",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "corporateFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isFormSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerFormSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initCorporateFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IBreadcrumb } from '~components/breadcrumbs/types';\nimport { ICorporateUser } from './types';\nimport { empty } from 'src/app/validators/empty.validator';\n\n@Component({\n  selector: 'app-corporate-clients',\n  templateUrl: './corporate-clients.component.html',\n  styleUrls: ['./corporate-clients.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CorporateClientsComponent {\n  public isFormSubmitted = false;\n  @Input() breadcrumbs: IBreadcrumb[];\n  @Input() set corporateUserData(data: ICorporateUser) {\n    this.corporateFormGroup.setValue(data);\n  }\n  @Input() isLoading: boolean | null;\n  @Output() emitSubmitForm: EventEmitter<ICorporateUser> = new EventEmitter();\n\n  private corporateFormData: ICorporateUser = {\n    corporateName: '',\n    postalAddress: '',\n    name: '',\n    phone: '',\n    bouquetPrice: '',\n    email: '',\n    unp: '',\n    paymentAccount: '',\n    bankCode: '',\n    numberRequestsMonth: ''\n  };\n  public corporateFormGroup: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.corporateFormGroup = this.initCorporateFormGroup();\n  }\n\n  private initCorporateFormGroup() {\n    return this.fb.group({\n      corporateName: [this.corporateFormData.corporateName, [Validators.required, empty]],\n      postalAddress: [this.corporateFormData.postalAddress, [Validators.required, empty]],\n      name: [this.corporateFormData.name, [Validators.required, empty]],\n      phone: [this.corporateFormData.phone, [Validators.required, Validators.minLength(11)]],\n      bouquetPrice: [this.corporateFormData.bouquetPrice, [Validators.required, empty]],\n      email: [this.corporateFormData.email, [Validators.required, Validators.email]],\n      unp: [this.corporateFormData.unp, [Validators.required, Validators.minLength(9)]],\n      paymentAccount: [\n        this.corporateFormData.paymentAccount,\n        [Validators.required, Validators.minLength(20)]\n      ],\n      bankCode: [this.corporateFormData.bankCode, [Validators.required, Validators.minLength(9)]],\n      numberRequestsMonth: [\n        this.corporateFormData.numberRequestsMonth,\n        [Validators.required, empty]\n      ]\n    });\n  }\n\n  public get corporateNameControl() {\n    return this.corporateFormGroup.get('corporateName');\n  }\n  public get postalAddressControl() {\n    return this.corporateFormGroup.get('postalAddress');\n  }\n  public get nameControl() {\n    return this.corporateFormGroup.get('name');\n  }\n  public get phoneControl() {\n    return this.corporateFormGroup.get('phone');\n  }\n  public get bouquetPriceControl() {\n    return this.corporateFormGroup.get('bouquetPrice');\n  }\n  public get emailControl() {\n    return this.corporateFormGroup.get('email');\n  }\n  public get unpControl() {\n    return this.corporateFormGroup.get('unp');\n  }\n  public get paymentAccountControl() {\n    return this.corporateFormGroup.get('paymentAccount');\n  }\n  public get bankCodeControl() {\n    return this.corporateFormGroup.get('bankCode');\n  }\n  public get numberRequestControl() {\n    return this.corporateFormGroup.get('numberRequestsMonth');\n  }\n\n  public resetForm(): void {\n    this.corporateFormGroup.reset();\n    this.isFormSubmitted = false;\n  }\n\n  public handlerFormSubmit(): void {\n    this.isFormSubmitted = true;\n\n    if (this.corporateFormGroup.invalid) {\n      return;\n    }\n    this.emitSubmitForm.emit(this.corporateFormGroup.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.corporate-clients {\r\n  padding-bottom: 130px;\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 70px;\r\n      z-index: -1;\r\n      width: 40%;\r\n      height: 663px;\r\n      max-width: 622px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/corporate-clients/orange-flower-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/corporate-clients/orange-flower-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: top right;\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: -30px;\r\n      top: 60px;\r\n      z-index: -1;\r\n      width: 200px;\r\n      height: 200px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/corporate-clients/orange-flower-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/corporate-clients/orange-flower-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: top right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(180deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    position: relative;\r\n\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/corporate-clients/orange-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -438px;\r\n        top: -435px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/corporate-clients/orange-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -472px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/corporate-clients/orange-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(126deg);\r\n        opacity: 0.4;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -369px;\r\n        bottom: -367px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/corporate-clients/orange-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(234deg);\r\n        opacity: 0.4;\r\n      }\r\n    }\r\n    &-3 {\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        top: 43%;\r\n        z-index: -1;\r\n        width: 26%;\r\n        height: 663px;\r\n        max-width: 622px;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/corporate-clients/orange-flower-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/corporate-clients/orange-flower-bg.png')\r\n        );\r\n        background-size: contain;\r\n        background-position: top right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateY(180deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 46px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 100px;\r\n    padding-left: 100px;\r\n  }\r\n\r\n  &__title-part-2 {\r\n    font-family: 'Cormorant';\r\n    font-size: 40px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__title-part-3 {\r\n    padding-left: 90px;\r\n    font-family: 'Cormorant';\r\n    font-size: 40px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 100px;\r\n    padding-right: 28%;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__wrapper-text {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    margin-bottom: 20px;\r\n    font-family: 'Cormorant', sans-serif;\r\n    font-size: 40px;\r\n  }\r\n\r\n  &__paragraph-3 {\r\n    margin-bottom: 74px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__paragraph-4 {\r\n    margin-bottom: 60px;\r\n    font-size: 40px;\r\n    font-family: 'Cormorant', sans-serif;\r\n  }\r\n\r\n  &__table {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__wrapper-list {\r\n    margin-bottom: 168px;\r\n    padding-left: 52%;\r\n  }\r\n}\r\n\r\n.wrapper-text {\r\n  padding-left: 10%;\r\n  padding-right: 20%;\r\n  font-size: 20px;\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.table {\r\n  display: block;\r\n  width: 100%;\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: -118px;\r\n      top: -235px;\r\n      z-index: -1;\r\n      width: 1338px;\r\n      height: 792px;\r\n      background-image: url('/assets/images/pages/corporate-clients/orange-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(173deg);\r\n    }\r\n  }\r\n\r\n  &__tr {\r\n    display: flex;\r\n    width: 100%;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  &__th {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1 1 100%;\r\n    padding: 10px 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n\r\n  &__td {\r\n    flex: 1 1 100%;\r\n    padding: 10px 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n\r\n    &:first-child {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n}\r\n\r\n.text--center {\r\n  text-align: center;\r\n}\r\n\r\n.wrapper-list {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    position: relative;\r\n    padding-bottom: 40px;\r\n    font-size: 40px;\r\n    font-family: 'Cormorant', sans-serif;\r\n    font-weight: 300;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      background-color: #43ffd2;\r\n      height: 1px;\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  &__list {\r\n    font-size: 20px;\r\n    list-style-type: decimal;\r\n  }\r\n\r\n  &__item {\r\n    &:not(:last-child) {\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.request-form {\r\n  position: relative;\r\n\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__wrapper-fields {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  &__btn {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__link {\r\n    color: #8b3131;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &__loader {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    max-width: 200px;\r\n    width: 100%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n\r\n.wrapper-fields {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-column-gap: 30px;\r\n  grid-row-gap: 20px;\r\n}\r\n\r\n.wrapper-field {\r\n  &__label {\r\n    display: block;\r\n    margin-bottom: 6px;\r\n  }\r\n\r\n  &:first-child {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(2) {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(3) {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(4) {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(5) {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(6) {\r\n    grid-column: 1/2;\r\n  }\r\n  &:nth-child(7) {\r\n    grid-row: 1;\r\n    grid-column: 2/3;\r\n  }\r\n  &:nth-child(8) {\r\n    grid-row: 2;\r\n    grid-column: 2/3;\r\n  }\r\n  &:nth-child(9) {\r\n    grid-row: 3;\r\n    grid-column: 2/3;\r\n  }\r\n  &:nth-child(10) {\r\n    grid-row: 4;\r\n    grid-column: 2/3;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .corporate-clients {\r\n    &__title-part-2 {\r\n      font-size: 25px;\r\n    }\r\n\r\n    &__title-part-3 {\r\n      font-size: 25px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .corporate-clients {\r\n    padding-bottom: 110px;\r\n\r\n    &__breadcrumbs {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    &__title {\r\n      margin-bottom: 40px;\r\n      padding-left: 0;\r\n    }\r\n\r\n    &__paragraph-1 {\r\n      margin-bottom: 40px;\r\n      padding-right: 0;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__wrapper-text {\r\n      margin-bottom: 40px;\r\n      padding-right: 0;\r\n      padding-left: 0;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-2 {\r\n      padding-left: 50px;\r\n      font-size: 20px;\r\n    }\r\n\r\n    &__paragraph-3 {\r\n      margin-bottom: 40px;\r\n      padding-left: 50px;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-4 {\r\n      line-height: 1.6;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__table {\r\n      margin-bottom: 60px;\r\n    }\r\n\r\n    &__wrapper-list {\r\n      margin-bottom: 60px;\r\n      padding-left: 0;\r\n    }\r\n  }\r\n\r\n  .corporate-clients {\r\n    &__title-part-2 {\r\n      padding-left: 50px;\r\n      font-size: 20px;\r\n    }\r\n\r\n    &__title-part-3 {\r\n      padding-left: 65px;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  .table {\r\n    &--bg {\r\n      &::after {\r\n        left: -382px;\r\n      }\r\n    }\r\n    &__th {\r\n      &:not(:last-child) {\r\n        margin-right: 6px;\r\n      }\r\n    }\r\n\r\n    &__td {\r\n      &:not(:last-child) {\r\n        margin-right: 6px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrapper-list {\r\n    &__list {\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n\r\n  .request-form {\r\n    &__wrapper-fields {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./corporate-clients.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "corporateUserData": {
                    "name": "corporateUserData",
                    "setSignature": {
                        "name": "corporateUserData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "ICorporateUser",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "ICorporateUser",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "corporateNameControl": {
                    "name": "corporateNameControl",
                    "getSignature": {
                        "name": "corporateNameControl",
                        "type": "",
                        "returnType": "",
                        "line": 61
                    }
                },
                "postalAddressControl": {
                    "name": "postalAddressControl",
                    "getSignature": {
                        "name": "postalAddressControl",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                },
                "nameControl": {
                    "name": "nameControl",
                    "getSignature": {
                        "name": "nameControl",
                        "type": "",
                        "returnType": "",
                        "line": 67
                    }
                },
                "phoneControl": {
                    "name": "phoneControl",
                    "getSignature": {
                        "name": "phoneControl",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                },
                "bouquetPriceControl": {
                    "name": "bouquetPriceControl",
                    "getSignature": {
                        "name": "bouquetPriceControl",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                },
                "emailControl": {
                    "name": "emailControl",
                    "getSignature": {
                        "name": "emailControl",
                        "type": "",
                        "returnType": "",
                        "line": 76
                    }
                },
                "unpControl": {
                    "name": "unpControl",
                    "getSignature": {
                        "name": "unpControl",
                        "type": "",
                        "returnType": "",
                        "line": 79
                    }
                },
                "paymentAccountControl": {
                    "name": "paymentAccountControl",
                    "getSignature": {
                        "name": "paymentAccountControl",
                        "type": "",
                        "returnType": "",
                        "line": 82
                    }
                },
                "bankCodeControl": {
                    "name": "bankCodeControl",
                    "getSignature": {
                        "name": "bankCodeControl",
                        "type": "",
                        "returnType": "",
                        "line": 85
                    }
                },
                "numberRequestControl": {
                    "name": "numberRequestControl",
                    "getSignature": {
                        "name": "numberRequestControl",
                        "type": "",
                        "returnType": "",
                        "line": 88
                    }
                }
            },
            "templateData": "<div class=\"corporate-clients corporate-clients--bg\">\n  <div class=\"corporate-clients__decor-color-bg-1\"></div>\n  <div class=\"corporate-clients__decor-color-bg-2\"></div>\n  <div class=\"corporate-clients__decor-color-bg-3\"></div>\n\n  <div class=\"corporate-clients__container container container--pt\">\n    <app-breadcrumbs class=\"corporate-clients__breadcrumbs\" [links]=\"breadcrumbs\"></app-breadcrumbs>\n\n    <h1 class=\"corporate-clients__title text-uppercase\">\n      <p class=\"corporate-clients__title-part-1 section-title\">Букеты</p>\n      <p class=\"corporate-clients__title-part-2\">поздравления для</p>\n      <p class=\"corporate-clients__title-part-3\">Ваших работников</p>\n    </h1>\n\n    <p class=\"corporate-clients__paragraph-1 text-uppercase text-line-height-1-6\">\n      Если у Вас большое количество сотрудников (или не очень) и вы устали помнить о каждом их Дне\n      рождении и как чем поздравить, то\n      <span class=\"text-color--1\">мы можем делать это за Вас.</span>\n    </p>\n\n    <div class=\"corporate-clients__wrapper-text wrapper-text text-line-height-1-6\">\n      <p class=\"wrapper-text__paragraph-1\">\n        Одним вариантом сотрудничества является предоставление нам перечня сотрудников с Днями их\n        рождений и мы уже самостоятельно связываемся с каждым, изготавливаем букет либо композицию и\n        доставляем в удобное время сотруднику либо по месту работы либо по месту жительства, так как\n        в настоящее время многие сотрудники продолжают выполнять работу удалённо либо находятся на\n        больничном или в отпуске.\n      </p>\n\n      <p class=\"wrapper-text__paragraph-2\">\n        Другим вариантом сотрудничества является заказ букетов самостоятельно представителем\n        организации за день до нужной даты.\n      </p>\n\n      <p class=\"wrapper-text__paragraph-3\">\n        Так вы <span class=\"text-color--1\">экономите время</span> остальных сотрудников на сбор\n        денег на поиск подарка и доставку его получателю, а также оберегаете себя от риска\n        пропустить кого-либо из важных организации людей, а именно так Вы проявляете заботу и\n        внимание к сотрудникам для того, чтобы и к делам Вашей организации они относились со всей\n        внимательностью и также не пропускали важные дни.\n      </p>\n    </div>\n\n    <p class=\"corporate-clients__paragraph-2 text-uppercase\">\n      Букеты могут изготавливаться в фирменном цвете организации и есть возможность делать\n      поздравления на Вашей фирменной открытке, которую мы можем изготовить сами.\n    </p>\n\n    <p class=\"corporate-clients__paragraph-3 text-color--1 text-uppercase\">\n      Стоимость одного букета не менее 60 рублей.\n    </p>\n\n    <table class=\"corporate-clients__table table table--bg\">\n      <tr class=\"table__tr\">\n        <th class=\"table__th card-background text-color--1\">Количество заявок в месяц</th>\n\n        <th class=\"table__th card-background text-color--1\">Приятные бонусы</th>\n      </tr>\n\n      <tr class=\"table__tr\">\n        <td class=\"table__td text--center card-background\">1-2</td>\n\n        <td class=\"table__td card-background\">\n          Стоимость одной доставки по Минску – 10 рублей, за пределы МКАД – от 20 рублей\n        </td>\n      </tr>\n\n      <tr class=\"table__tr\">\n        <td class=\"table__td text--center card-background\">3-10</td>\n\n        <td class=\"table__td card-background\">\n          Доставка бесплатно Букет-подарок руководителю в его День рождения\n        </td>\n      </tr>\n\n      <tr class=\"table__tr\">\n        <td class=\"table__td text--center card-background\">Более 10</td>\n\n        <td class=\"table__td card-background\">\n          Доставка бесплатно Букет-подарок руководителю в его День рождения Праздничная ель перед\n          Новым годом\n        </td>\n      </tr>\n    </table>\n\n    <div class=\"corporate-clients__wrapper-list wrapper-list\">\n      <h2 class=\"wrapper-list__title text-color--1 text-uppercase\">этапы работы:</h2>\n\n      <ul class=\"wrapper-list__list list-reset text-uppercase\">\n        <li class=\"wrapper-list__item\">Заполнение заявки</li>\n        <li class=\"wrapper-list__item\">Подписание договора</li>\n        <li class=\"wrapper-list__item\">Вручение цветов</li>\n        <li class=\"wrapper-list__item\">Отчет о доставленных заказах</li>\n        <li class=\"wrapper-list__item\">оплата</li>\n      </ul>\n    </div>\n\n    <p class=\"corporate-clients__paragraph-4 text-uppercase\">\n      Если у Вас единичный заказ, то можете выбрать букет в каталоге либо заказать индивидуальный\n      букет и указать его стоимость, а при оформлении заказа в корзине указать, что оплата будет\n      производиться с расчётного счёта организации.\n    </p>\n\n    <form\n      class=\"corporate-clients__request-form request-form\"\n      [formGroup]=\"corporateFormGroup\"\n      (ngSubmit)=\"handlerFormSubmit()\"\n    >\n      <h2 class=\"request-form__title text-color--1 text-uppercase\">Заполните заявку:</h2>\n\n      <div class=\"request-form__wrapper-fields wrapper-fields\">\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Наименование организации</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': corporateNameControl?.value,\n              'field--error':\n                (isFormSubmitted || corporateNameControl?.touched) &&\n                (!corporateNameControl?.value || corporateNameControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"Введите наименование вашей организации\"\n            formControlName=\"corporateName\"\n          />\n\n          <app-error-field\n            [isEmpty]=\"\n              !!(\n                (isFormSubmitted || corporateNameControl?.touched) &&\n                corporateNameControl?.hasError('empty')\n              )\n            \"\n            [isRequired]=\"\n              !!((isFormSubmitted || corporateNameControl?.touched) && !corporateNameControl?.value)\n            \"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Почтовый адрес</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': postalAddressControl?.value,\n              'field--error':\n                (isFormSubmitted || postalAddressControl?.touched) &&\n                (!postalAddressControl?.value || postalAddressControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"Введите почтовый адрес\"\n            formControlName=\"postalAddress\"\n          />\n\n          <app-error-field\n            [isEmpty]=\"\n              !!(\n                (isFormSubmitted || postalAddressControl?.touched) &&\n                postalAddressControl?.hasError('empty')\n              )\n            \"\n            [isRequired]=\"\n              !!((isFormSubmitted || postalAddressControl?.touched) && !postalAddressControl?.value)\n            \"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Контактное лицо</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': nameControl?.value,\n              'field--error':\n                (isFormSubmitted || nameControl?.touched) &&\n                (!nameControl?.value || nameControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"Введите имя контактного лица\"\n            formControlName=\"name\"\n          />\n\n          <app-error-field\n            [isEmpty]=\"\n              !!((isFormSubmitted || nameControl?.touched) && nameControl?.hasError('empty'))\n            \"\n            [isRequired]=\"!!((isFormSubmitted || nameControl?.touched) && !nameControl?.value)\"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Контактный номер телефона</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': phoneControl?.value,\n              'field--error':\n                (isFormSubmitted || phoneControl?.touched) &&\n                (!phoneControl?.value || phoneControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"+7 (977) 777-77-77\"\n            formControlName=\"phone\"\n            mask=\"+0 (000) 000-00-00\"\n          />\n\n          <app-error-field\n            [isInvalidPhone]=\"\n              !!((isFormSubmitted || phoneControl?.touched) && phoneControl?.hasError('minlength'))\n            \"\n            [isRequired]=\"!!((isFormSubmitted || phoneControl?.touched) && !phoneControl?.value)\"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\"\n            >Стоимость букета сотруднику (если разная – указать)</label\n          >\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': bouquetPriceControl?.value,\n              'field--error':\n                (isFormSubmitted || bouquetPriceControl?.touched) &&\n                (!bouquetPriceControl?.value || bouquetPriceControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"Укажите стоимость букета сотруднику\"\n            formControlName=\"bouquetPrice\"\n          />\n\n          <app-error-field\n            [isEmpty]=\"\n              !!(\n                (isFormSubmitted || bouquetPriceControl?.touched) &&\n                bouquetPriceControl?.hasError('empty')\n              )\n            \"\n            [isRequired]=\"\n              !!((isFormSubmitted || bouquetPriceControl?.touched) && !bouquetPriceControl?.value)\n            \"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Адрес электронной почты</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': emailControl?.value,\n              'field--error':\n                (isFormSubmitted || emailControl?.touched) &&\n                (!emailControl?.value || emailControl?.hasError('email'))\n            }\"\n            type=\"text\"\n            placeholder=\"Укажите ваш адрес электронной почты\"\n            formControlName=\"email\"\n          />\n\n          <app-error-field\n            [isInvalidEmail]=\"\n              !!((isFormSubmitted || emailControl?.touched) && emailControl?.hasError('email'))\n            \"\n            [isRequired]=\"!!((isFormSubmitted || emailControl?.touched) && !emailControl?.value)\"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">УНП</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': unpControl?.value,\n              'field--error':\n                (isFormSubmitted || unpControl?.touched) &&\n                (!unpControl?.value || unpControl?.hasError('minlength'))\n            }\"\n            type=\"text\"\n            placeholder=\"УНП\"\n            formControlName=\"unp\"\n            mask=\"000000000\"\n          />\n\n          <app-error-field\n            [isInvalidUNP]=\"\n              !!((isFormSubmitted || unpControl?.touched) && unpControl?.hasError('minlength'))\n            \"\n            [isRequired]=\"!!((isFormSubmitted || unpControl?.touched) && !unpControl?.value)\"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Расчетный счет</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': paymentAccountControl?.value,\n              'field--error':\n                (isFormSubmitted || paymentAccountControl?.touched) &&\n                (!paymentAccountControl?.value || paymentAccountControl?.hasError('minlength'))\n            }\"\n            type=\"text\"\n            placeholder=\"Введите номер расчетного счета\"\n            formControlName=\"paymentAccount\"\n            mask=\"00000000000000000000\"\n          />\n\n          <app-error-field\n            [isInvalidAccount]=\"\n              !!(\n                (isFormSubmitted || paymentAccountControl?.touched) &&\n                paymentAccountControl?.hasError('minlength')\n              )\n            \"\n            [isRequired]=\"\n              !!(\n                (isFormSubmitted || paymentAccountControl?.touched) &&\n                !paymentAccountControl?.value\n              )\n            \"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\">Код банка</label>\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': bankCodeControl?.value,\n              'field--error':\n                (isFormSubmitted || bankCodeControl?.touched) &&\n                (!bankCodeControl?.value || bankCodeControl?.hasError('minlength'))\n            }\"\n            type=\"text\"\n            placeholder=\"Код банка\"\n            formControlName=\"bankCode\"\n            mask=\"000000000\"\n          />\n\n          <app-error-field\n            [isInvalidBankCode]=\"\n              !!(\n                (isFormSubmitted || bankCodeControl?.touched) &&\n                bankCodeControl?.hasError('minlength')\n              )\n            \"\n            [isRequired]=\"\n              !!((isFormSubmitted || bankCodeControl?.touched) && !bankCodeControl?.value)\n            \"\n          ></app-error-field>\n        </div>\n\n        <div class=\"request-form__wrapper-field wrapper-field\">\n          <label class=\"wrapper-field__label\" for=\"\"\n            >Предполагаемое количество заявок в месяц</label\n          >\n\n          <input\n            class=\"field field--default\"\n            [ngClass]=\"{\n              'field--not-empty': numberRequestControl?.value,\n              'field--error':\n                (isFormSubmitted || numberRequestControl?.touched) &&\n                (!numberRequestControl?.value || numberRequestControl?.hasError('empty'))\n            }\"\n            type=\"text\"\n            placeholder=\"Введите предполагаемое количество заявок в месяц\"\n            formControlName=\"numberRequestsMonth\"\n          />\n\n          <app-error-field\n            [isEmpty]=\"\n              !!(\n                (isFormSubmitted || numberRequestControl?.touched) &&\n                numberRequestControl?.hasError('empty')\n              )\n            \"\n            [isRequired]=\"\n              !!((isFormSubmitted || numberRequestControl?.touched) && !numberRequestControl?.value)\n            \"\n          ></app-error-field>\n        </div>\n      </div>\n\n      <app-loader *ngIf=\"isLoading\" class=\"request-form__loader\" text=\"Отправляем...\"></app-loader>\n\n      <button class=\"request-form__btn text-uppercase\" appUiButton=\"1\">Отправить</button>\n\n      <p class=\"request-form__paragraph\">\n        Нажимая на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в\n        соответствии с\n        <a class=\"request-form__link outline-focus\" routerLink=\"#\">Политикой конфиденциальности</a>\n      </p>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "CorporateClientsContainerComponent",
            "id": "component-CorporateClientsContainerComponent-484b1d86c794dd932a13f2a2e279f461f98e41f4750fdf934a0c0c047b26ac685c3dec25116df7347bc2f014faefce60e7644beccfdd24b033cbb8e0f4cc627c",
            "file": "src/app/pages/corporate-clients/corporate-clients-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-corporate-clients-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./corporate-clients-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbs",
                    "defaultValue": "breadcrumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "corporateClientsComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CorporateClientsComponent",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'corporateClientsComponent'"
                        }
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSubmitForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ICorporateUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCorporateLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToResetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { CorporateClientsComponent } from './component/corporate-clients.component';\nimport { breadcrumbs } from './data/pageData';\nimport { ICorporateUser } from './component/types';\nimport { CorporateClientsService } from 'src/app/services/corporate/corporate-clients.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Meta } from '@angular/platform-browser';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-corporate-clients-container',\n  templateUrl: './corporate-clients-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CorporateClientsContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  @ViewChild('corporateClientsComponent')\n  corporateClientsComponent: CorporateClientsComponent;\n  public breadcrumbs = breadcrumbs;\n  public isLoading = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private corporateClientsService: CorporateClientsService,\n    private meta: Meta\n  ) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToCorporateLoading();\n    this.subscribeToResetForm();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private subscribeToCorporateLoading() {\n    this.corporateClientsService\n      .getRequestLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToResetForm(): void {\n    this.corporateClientsService.clearFormStream\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(() => {\n        this.corporateClientsComponent.resetForm();\n        this.cdr.markForCheck();\n      });\n  }\n\n  public handlerSubmitForm(data: ICorporateUser) {\n    this.corporateClientsService.submitForm(data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "corporateClientsService",
                        "type": "CorporateClientsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "corporateClientsService",
                        "type": "CorporateClientsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-corporate-clients\n  #corporateClientsComponent\n  [breadcrumbs]=\"breadcrumbs\"\n  [isLoading]=\"isLoading\"\n  (emitSubmitForm)=\"handlerSubmitForm($event)\"\n></app-corporate-clients>\n"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-63d8746ff636f63d9595e80c377b94726c6aaef4a13f843ca3df2541453243ca88259fe8427e9b88471e3a1e4623d8da19ee67234218ca5339c816e81b00cf79",
            "file": "src/app/components/counter/counter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter",
            "styleUrls": [
                "./counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "labelValueA11y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitDecrValue",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "emitIncrValue",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "countControl",
                    "defaultValue": "new FormControl(0, { nonNullable: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "this.utilsService.generateRandomString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onChangeCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnChangeCallback<number>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouchedCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnTouchedCallback",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "doDecrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "doIncrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<number>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<number>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToValueChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { UtilsService } from 'src/app/services/utils/utils.service';\nimport { OnChangeCallback, OnTouchedCallback } from '~types/controlValueAccessor';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CounterComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  protected id = this.utilsService.generateRandomString();\n  private destroySubject: Subject<null>;\n  protected countControl = new FormControl(0, { nonNullable: true });\n  private onChangeCallBack: OnChangeCallback<number>;\n  protected onTouchedCallBack: OnTouchedCallback;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 1;\n  @Input() set value(value: number) {\n    this.countControl.setValue(value);\n  }\n  @Input() labelValueA11y: string;\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\n  @Output() emitDecrValue: EventEmitter<number> = new EventEmitter();\n  @Output() emitIncrValue: EventEmitter<number> = new EventEmitter();\n\n  constructor(private utilsService: UtilsService) {}\n\n  ngOnInit(): void {\n    this.destroySubject = new Subject();\n    this.subscribeToValueChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToValueChanges(): void {\n    this.countControl.valueChanges.pipe(takeUntil(this.destroySubject)).subscribe((value) => {\n      if (value < this.min) {\n        return this.countControl.setValue(this.min);\n      }\n      if (value > this.max) {\n        return this.countControl.setValue(this.max);\n      }\n      this.onChange(value);\n    });\n  }\n\n  private onChange(value: number): void {\n    this.valueChange.emit(value);\n\n    if (this.onChangeCallBack) {\n      this.onChangeCallBack(value);\n    }\n  }\n\n  protected onTouched(): void {\n    if (!this.onTouchedCallBack) {\n      return;\n    }\n    this.onTouchedCallBack();\n  }\n\n  get isDisabledDecrButton(): boolean {\n    return this.min >= this.countControl.value;\n  }\n\n  get isDisabledIncButton(): boolean {\n    return this.max <= this.countControl.value;\n  }\n\n  protected doDecrement(): void {\n    this.countControl.setValue(this.countControl.value - 1);\n  }\n  protected doIncrement(): void {\n    this.countControl.setValue(this.countControl.value + 1);\n  }\n\n  public writeValue(value: number): void {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: OnChangeCallback<number>): void {\n    this.onChangeCallBack = fn;\n  }\n  public registerOnTouched(fn: OnTouchedCallback): void {\n    this.onTouchedCallBack = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.counter {\r\n  display: flex;\r\n  border: 1px solid $color-6;\r\n  outline: 1px solid transparent;\r\n  transition: outline-color 0.3s;\r\n\r\n  &__counter-btn {\r\n    color: $color-6;\r\n  }\r\n\r\n  &__input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    font-size: 12px;\r\n    background-color: transparent;\r\n    color: $color-6;\r\n    text-align: center;\r\n    font-weight: 700;\r\n  }\r\n\r\n  &:hover {\r\n    outline-color: rgba(67, 255, 210, 0.3);\r\n  }\r\n}\r\n\r\n.counter-btn {\r\n  padding: 12px 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  background-color: rgba($color: $color-3, $alpha: 0);\r\n  transition: background-color 0.3s, color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: rgba($color: $color-3, $alpha: 0.2);\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgba($color: $color-3, $alpha: 0.3);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba($color: $color-3, $alpha: 0);\r\n    color: rgba($color: $color-3, $alpha: 0);\r\n    cursor: default;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .counter-btn {\r\n    background-color: rgba($color: $color-3, $alpha: 0);\r\n    &:hover {\r\n      background-color: transparent;\r\n    }\r\n\r\n    &:active {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./counter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "isDisabledDecrButton": {
                    "name": "isDisabledDecrButton",
                    "getSignature": {
                        "name": "isDisabledDecrButton",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 77
                    }
                },
                "isDisabledIncButton": {
                    "name": "isDisabledIncButton",
                    "getSignature": {
                        "name": "isDisabledIncButton",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 81
                    }
                }
            },
            "templateData": "<div class=\"counter\">\n  <button\n    class=\"counter__counter-btn counter-btn btn-reset outline-focus\"\n    (click)=\"doDecrement()\"\n    aria-label=\"Уменьшить\"\n    [disabled]=\"isDisabledDecrButton\"\n  >\n    -\n  </button>\n\n  <input\n    class=\"counter__input outline-focus\"\n    type=\"number\"\n    [id]=\"id\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [formControl]=\"countControl\"\n    (focusout)=\"onTouched()\"\n    data-test=\"input\"\n  />\n\n  <label [attr.for]=\"id\" class=\"visually-hidden\">{{ labelValueA11y }}</label>\n\n  <button\n    class=\"counter__counter-btn counter-btn btn-reset outline-focus\"\n    (click)=\"doIncrement()\"\n    aria-label=\"Увеличить\"\n    [disabled]=\"isDisabledIncButton\"\n  >\n    +\n  </button>\n</div>\n"
        },
        {
            "name": "DeliveryComponent",
            "id": "component-DeliveryComponent-5db5e70898a0d51b8a3827f0f6279e8820d6e545663f0f901fb004eb8f376df87910539e8f58893ae9de693a03be02461507cf48ee810513fedb4f100e811ba5",
            "file": "src/app/page-components/product/delivery/delivery.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delivery",
            "styleUrls": [
                "./delivery.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeliveryComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.delivery {\r\n  &__payment-method {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &__delivery-price {\r\n    margin-bottom: 60px;\r\n  }\r\n}\r\n\r\n.payment-method {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__list {\r\n    padding-left: 40px;\r\n    list-style-type: disc;\r\n  }\r\n\r\n  &__item {\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.delivery-price {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.price-list {\r\n  &__item-price {\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.delivery-condition {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .payment-method {\r\n    &__title {\r\n      margin-bottom: 10px;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__item {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .delivery-price {\r\n    &__title {\r\n      margin-bottom: 10px;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .price-list {\r\n    &__item-price {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .delivery-condition {\r\n    &__title {\r\n      margin-bottom: 10px;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__text {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .delivery {\r\n    &__payment-method {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    &__delivery-price {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./delivery.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"delivery\">\n  <div class=\"delivery__payment-method payment-method\">\n    <h2 class=\"payment-method__title text-color--3 text-uppercase\">\n      Способы оплаты:\n    </h2>\n\n    <ul class=\"payment-method__list list-reset text-line-height-1-6\">\n      <li class=\"payment-method__item text-uppercase\">\n        БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ\n      </li>\n\n      <li class=\"payment-method__item text-uppercase\">\n        НАЛИЧНЫМИ ИЛИ БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ\n      </li>\n\n      <li class=\"payment-method__item text-uppercase\">\n        НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ\n      </li>\n\n      <li class=\"payment-method__item text-uppercase\">КРИПТОВАЛЮТОЙ ОНЛАЙН</li>\n    </ul>\n  </div>\n\n  <div class=\"delivery__delivery-price\">\n    <h2 class=\"delivery-price__title text-uppercase text-color--3\">\n      стоимость доставки:\n    </h2>\n\n    <ul class=\"delivery-price__price-list text-line-height-1-6\">\n      <li class=\"price-list__item-price item-price item-price-1 text-uppercase\">\n        <span class=\"text-weight-400\">Бесплатно</span> – при заказе на сумму\n        <span class=\"text-color--1\">от 90 рублей</span>\n      </li>\n\n      <li class=\"price-list__item-price item-price item-price-2 text-uppercase\">\n        <span class=\"text-weight-400\">10 рублей</span> – при заказе на сумму\n        <span class=\"text-color--1\">менее 90 рублей</span>\n      </li>\n\n      <li class=\"price-list__item-price item-price item-price-3 text-uppercase\">\n        Возможность, сроки и стоимость доставки за пределы МКАД, доставки в\n        ночное время, праздники\n        <span class=\"text-color--1\">оговариваются с менеджером</span>\n      </li>\n\n      <li class=\"price-list__item-price item-price item-price-4 text-uppercase\">\n        Так же вы можете забрать ваш заказ самостоятельно по адресу:\n        <span class=\"text-color--1\"\n          >г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до\n          21.00</span\n        >\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"delivery__delivery-condition\">\n    <h2 class=\"delivery-condition__title text-uppercase text-color--3\">\n      Условия доставки:\n    </h2>\n\n    <p class=\"delivery-condition__text text-uppercase text-line-height-1-6\">\n      Доставка осуществляется по городу Минску в пределах МКАД\n      <span class=\"text-color--1\">в любой день с 09.00 до 22.00.</span>\n      Доставка в ночное время осуществляется по договоренности с оператором\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "DeliveryPaymentComponent",
            "id": "component-DeliveryPaymentComponent-3f600c5975d163dd64821ef81b3f7b1b33c57ce2b81fed7fcfbec384623b7c86a58511216a8cbd3921ed33f4b80e3cafd3ee0f765c848852dc9f14eaebcbcbe2",
            "file": "src/app/pages/delivery-payment/delivery-payment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delivery-payment",
            "styleUrls": [
                "./delivery-payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery-payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { pageData } from '~pages/delivery-payment/data/pageData';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-delivery-payment',\n  templateUrl: './delivery-payment.component.html',\n  styleUrls: ['./delivery-payment.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeliveryPaymentComponent {\n  public data = pageData;\n\n  constructor(private meta: Meta) {\n    this.setMeta();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.delivery-payment {\r\n  padding-bottom: 200px;\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: -254px;\r\n      top: -25px;\r\n      z-index: -1;\r\n      width: 704px;\r\n      height: 717px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/delivery/white-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/delivery/white-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: -280px;\r\n      bottom: 30%;\r\n      z-index: -1;\r\n      width: 575px;\r\n      height: 438px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/delivery/white-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/delivery/white-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(45deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/delivery/brown-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(76deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 10px;\r\n        top: -12px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/delivery/brown-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(120deg);\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        right: -277px;\r\n        bottom: 101px;\r\n        z-index: -1;\r\n        width: 704px;\r\n        height: 717px;\r\n        background-image: url('/assets/images/pages/delivery/brown-color-bg.svg');\r\n        background-size: contain;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(335deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 193px;\r\n        top: 486px;\r\n        z-index: -1;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/delivery/brown-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &__delivery-payment-title {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__warning-block {\r\n    padding-left: 100px;\r\n  }\r\n\r\n  &__hero-section {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__payment-section {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__delivery-cost {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__delivery-condition-section {\r\n    margin-bottom: 100px;\r\n  }\r\n}\r\n\r\n.delivery-payment-title {\r\n  &__part-2 {\r\n    padding-left: 1em;\r\n  }\r\n}\r\n\r\n.warning-block {\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 60px;\r\n    top: 0;\r\n    width: 25px;\r\n    height: 50px;\r\n    background-image: url('/assets/images/pages/delivery/warning.svg');\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: contain;\r\n  }\r\n\r\n  &__accent-paragraph {\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.payment-list {\r\n  display: flex;\r\n\r\n  &__item {\r\n    position: relative;\r\n    display: flex;\r\n    flex-basis: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 54px 30px;\r\n    border-radius: 20px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 20px;\r\n      left: 50%;\r\n      width: 11px;\r\n      height: 11px;\r\n      border-radius: 50%;\r\n      background-color: #6b535f;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n}\r\n\r\n.delivery-cost {\r\n  &__container {\r\n    padding-left: 100px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.delivery-cost-list {\r\n  font-size: 20px;\r\n  list-style-type: disc;\r\n\r\n  &__item {\r\n    line-height: 1.5;\r\n    &:not(:last-of-type) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.delivery-condition-section {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.delivery-condition-list {\r\n  max-width: 680px;\r\n  padding-left: 30px;\r\n  list-style-type: disc;\r\n  font-size: 20px;\r\n}\r\n\r\n.additionally-section {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__additionally-list {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.container-sections {\r\n  &__wrapper-sections {\r\n    max-width: 960px;\r\n    padding: 30px;\r\n    border-radius: 20px;\r\n  }\r\n}\r\n\r\n.additionally-list {\r\n  padding-left: 30px;\r\n  list-style-type: disc;\r\n\r\n  &__item {\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.wrapper-sections {\r\n  &__additionally-section {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__repayment-section {\r\n  }\r\n}\r\n\r\n.repayment-section {\r\n  &__title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 30px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .delivery-payment {\r\n    &--bg {\r\n      &::after {\r\n        right: -170px;\r\n        z-index: -1;\r\n        width: 465px;\r\n        height: 557px;\r\n      }\r\n    }\r\n  }\r\n  .payment-list {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    &__item {\r\n      width: 65%;\r\n\r\n      &:not(:last-child) {\r\n        margin-right: 0;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .delivery-payment {\r\n    padding-bottom: 160px;\r\n\r\n    &--bg {\r\n      &::after {\r\n        right: -136px;\r\n        width: 306px;\r\n        top: -55px;\r\n      }\r\n    }\r\n\r\n    &__decor-color-bg-2 {\r\n      &::before {\r\n        right: -331px;\r\n      }\r\n      &::after {\r\n        right: -227px;\r\n        bottom: -235px;\r\n      }\r\n    }\r\n\r\n    &__delivery-payment-title {\r\n      margin-bottom: 56px;\r\n    }\r\n\r\n    &__warning-block {\r\n      padding-left: 40px;\r\n    }\r\n\r\n    &__hero-section {\r\n      margin-bottom: 60px;\r\n    }\r\n\r\n    &__payment-section {\r\n      margin-bottom: 60px;\r\n    }\r\n\r\n    &__delivery-cost {\r\n      margin-bottom: 60px;\r\n    }\r\n\r\n    &__delivery-condition-section {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .warning-block {\r\n    &::after {\r\n      left: 5px;\r\n    }\r\n  }\r\n\r\n  .payment-list {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    &__item {\r\n      line-height: 1.6;\r\n      font-size: 14px;\r\n      font-weight: 300;\r\n    }\r\n  }\r\n\r\n  .delivery-cost {\r\n    &__container {\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n\r\n  .delivery-cost-list {\r\n    padding-left: 20px;\r\n\r\n    &__item {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .delivery-condition-list {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .wrapper-sections {\r\n    padding: 20px 10px;\r\n\r\n    &__additionally-section {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .additionally-section {\r\n    &__paragraph-1 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-2 {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .additionally-list {\r\n    &__item {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .repayment-section {\r\n    &__paragraph-1 {\r\n      margin-bottom: 10px;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-2 {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./delivery-payment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"delivery-payment delivery-payment--bg\">\n  <div class=\"delivery-payment__decor-color-bg-1\"></div>\n  <div class=\"delivery-payment__decor-color-bg-2\"></div>\n\n  <div class=\"delivery-payment__hero-section container container--pt\">\n    <app-breadcrumbs\n      class=\"delivery-payment__breadcrumbs\"\n      [links]=\"data.breadcrumbs\"\n    ></app-breadcrumbs>\n\n    <h1 class=\"section-title text-uppercase delivery-payment__delivery-payment-title\">\n      <p class=\"delivery-payment-title__part-1\">{{ data.title.part }}</p>\n      <p class=\"delivery-payment-title__part-2\">{{ data.title.part2 }}</p>\n    </h1>\n\n    <div class=\"delivery-payment__warning-block warning-block\">\n      <p class=\"warning-block__accent-paragraph text-color--3 text-uppercase\">\n        {{ data.warning.title }}\n      </p>\n\n      <p class=\"warning-block__paragraph text-uppercase text-line-height-1-6\">\n        {{ data.warning.text.part }}\n        <span class=\"text-color--1\">{{ data.warning.text.part2 }}</span>\n      </p>\n    </div>\n  </div>\n\n  <section class=\"delivery-payment__payment-section payment-section\">\n    <div class=\"payment-section__container container\">\n      <h2 class=\"text-color--3 text-uppercase\">\n        {{ data.section.payment.title }}\n      </h2>\n\n      <ul class=\"list-reset payment-section__payment-list payment-list\">\n        <li\n          class=\"payment-list__item card-background text-uppercase\"\n          *ngFor=\"let item of data.section.payment.list\"\n        >\n          {{ item }}\n        </li>\n      </ul>\n    </div>\n  </section>\n\n  <section class=\"delivery-payment__delivery-cost delivery-cost\">\n    <div class=\"delivery-cost__container container\">\n      <h2 class=\"delivery-cost__title text-color--3 text-uppercase\">\n        {{ data.section.deliveryCost.title }}\n      </h2>\n\n      <ul class=\"delivery-cost__delivery-cost-list delivery-cost-list list-reset\">\n        <li class=\"delivery-cost-list__item text-uppercase text-line-height-1-6\">\n          {{ data.section.deliveryCost.text.part }}\n          <span class=\"text-weight-300\">\n            {{ data.section.deliveryCost.text.part2 }}\n          </span>\n\n          <span class=\"text-color--1\">\n            {{ data.section.deliveryCost.text.part3 }}\n          </span>\n        </li>\n\n        <li class=\"delivery-cost-list__item text-uppercase text-line-height-1-6\">\n          {{ data.section.deliveryCost.text2.part }}\n          <span class=\"text-weight-300\">\n            {{ data.section.deliveryCost.text2.part2 }}\n          </span>\n\n          <span class=\"text-color--1\">\n            {{ data.section.deliveryCost.text2.part3 }}\n          </span>\n        </li>\n\n        <li class=\"delivery-cost-list__item text-uppercase text-weight-300 text-line-height-1-6\">\n          <p>{{ data.section.deliveryCost.text3.part }}</p>\n\n          <a\n            class=\"text-color--1\"\n            routerLink=\"/contacts\"\n            fragment=\"map\"\n            aria-label=\"Посмотреть на карте\"\n          >\n            {{ data.section.deliveryCost.text3.part2 }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </section>\n\n  <section class=\"delivery-payment__delivery-condition-section delivery-condition-section\">\n    <div class=\"delivery-condition-section__container container\">\n      <h2 class=\"delivery-condition-section__title text-color--3 text-uppercase\">\n        {{ data.section.deliveryCondition.title }}\n      </h2>\n\n      <ul\n        class=\"delivery-condition-section__delivery-condition-list delivery-condition-list list-reset text-weight-300\"\n      >\n        <li class=\"text-uppercase\">\n          {{ data.section.deliveryCondition.text.part }}\n          <span class=\"text-color--1 text-line-height-1-6\">\n            {{ data.section.deliveryCondition.text.part2 }}</span\n          >\n        </li>\n\n        <li class=\"text-uppercase\">\n          {{ data.section.deliveryCondition.text2.part }}\n          <span class=\"text-color--1 text-line-height-1-6\">\n            {{ data.section.deliveryCondition.text2.part2 }}\n          </span>\n        </li>\n      </ul>\n    </div>\n  </section>\n\n  <div class=\"delivery-payment__container-sections container-sections container\">\n    <div class=\"container-sections__wrapper-sections wrapper-sections card-background\">\n      <section class=\"wrapper-sections__additionally-section additionally-section\">\n        <h2 class=\"additionally-section__title text-color--3 text-uppercase text-weight-300\">\n          {{ data.section.additionally.title }}\n        </h2>\n\n        <p class=\"additionally-section__paragraph-1 text-weight-300 text-line-height-1-6\">\n          {{ data.section.additionally.text }}\n        </p>\n\n        <ul\n          class=\"additionally-section__additionally-list additionally-list list-reset text-weight-300\"\n        >\n          <li\n            class=\"additionally-list__item text-line-height-1-6\"\n            *ngFor=\"let item of data.section.additionally.list\"\n          >\n            {{ item }}\n          </li>\n        </ul>\n\n        <p class=\"additionally-section__paragraph-2 text-weight-300 text-line-height-1-6\">\n          {{ data.section.additionally.text2.part }}\n          <a class=\"text-color--1\" [href]=\"'tel:' + data.section.additionally.text2.part2\">\n            {{ data.section.additionally.text2.part2 | mask : '+000 (00) 000-00-00' }} </a\n          >.\n        </p>\n      </section>\n\n      <section class=\"wrapper-sections__repayment-section repayment-section\">\n        <h2 class=\"repayment-section__title text-color--3 text-uppercase\">\n          {{ data.section.repayment.title }}\n        </h2>\n\n        <p class=\"repayment-section__paragraph-1 text-line-height-1-6 text-weight-300\">\n          {{ data.section.repayment.text }}\n        </p>\n\n        <p class=\"repayment-section__paragraph-2 text-line-height-1-6 text-weight-300\">\n          {{ data.section.repayment.text2 }}\n        </p>\n      </section>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-bf1f7eed923d7763d913d7f99d725519c87ac5e0119c09a411ae846cf18a0ea3ecb98e8be0162a059ff4ef649cb07301353ce311ae0317b50fd27db47337201a",
            "file": "src/app/components/dropdown/dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isCloseBy",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IsCloseBy",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ContentPosition",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "defaultValue": "'hover'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Trigger",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_contentPosition",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContentPosition",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isVisibleContent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handlerOutsideTrigger",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "eventHandler",
                    "args": [
                        {
                            "type": "IEventHandlerArgs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "type": "IEventHandlerArgs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isCLickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHoverEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "UIEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchContentVisible",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { IEventHandlerArgs, ContentPosition, Trigger, IsCloseBy } from './types';\r\n\r\n@Component({\r\n  selector: 'app-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DropdownComponent {\r\n  private _contentPosition: ContentPosition = 'center';\r\n  private _isVisibleContent = false;\r\n\r\n  @Input() trigger: Trigger = 'hover';\r\n  @Input() set position(value: ContentPosition) {\r\n    this._contentPosition = value;\r\n  }\r\n  @Input() isCloseBy: IsCloseBy = null;\r\n\r\n  public get contentPosition(): ContentPosition {\r\n    return this._contentPosition;\r\n  }\r\n\r\n  public get isVisibleContent(): boolean {\r\n    return this._isVisibleContent;\r\n  }\r\n\r\n  protected eventHandler({ event, value }: IEventHandlerArgs): void {\r\n    if (!event) {\r\n      this.switchContentVisible(value);\r\n      return;\r\n    }\r\n    if (this.isCLickEvent(event)) {\r\n      this.switchContentVisible(value);\r\n    }\r\n    if (this.isHoverEvent(event)) {\r\n      this.switchContentVisible(value);\r\n    }\r\n  }\r\n\r\n  public switchContentVisible(isOpen?: boolean): void {\r\n    this._isVisibleContent = isOpen ?? !this._isVisibleContent;\r\n  }\r\n\r\n  private isCLickEvent(event: UIEvent): boolean {\r\n    return this.trigger === 'click' && event?.type === 'click';\r\n  }\r\n\r\n  private isHoverEvent(event: UIEvent): boolean {\r\n    return (\r\n      (this.trigger === 'hover' &&\r\n        (event?.type === 'mouseenter' || event?.type === 'mouseleave')) ||\r\n      (this.isCloseBy === 'mouseleave' && event?.type === 'mouseleave')\r\n    );\r\n  }\r\n\r\n  public handlerOutsideTrigger = () => this.switchContentVisible(false);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dropdown {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n}\n\n.dropdown__content {\n  position: absolute;\n  top: 100%;\n  z-index: 2;\n  min-width: 100%;\n  padding-top: 8px;\n  transition: opacity 0.2s;\n\n  &--position {\n    &-center {\n      left: 50%;\n      transform: translateX(-50%);\n    }\n\n    &-left {\n      right: 0;\n    }\n\n    &-right {\n      left: 0;\n    }\n  }\n\n  &--visibility {\n    &-hidden {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    &-visible {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n}\n",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "position": {
                    "name": "position",
                    "setSignature": {
                        "name": "position",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "ContentPosition",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "ContentPosition",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "contentPosition": {
                    "name": "contentPosition",
                    "getSignature": {
                        "name": "contentPosition",
                        "type": "",
                        "returnType": "ContentPosition",
                        "line": 20
                    }
                },
                "isVisibleContent": {
                    "name": "isVisibleContent",
                    "getSignature": {
                        "name": "isVisibleContent",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 24
                    }
                }
            },
            "templateData": "<div\n  class=\"dropdown\"\n  (mouseenter)=\"eventHandler({ event: $event, value: true })\"\n  (mouseleave)=\"eventHandler({ event: $event, value: false })\"\n  (appOutsideFocus)=\"handlerOutsideTrigger()\"\n  (appOutsideClick)=\"handlerOutsideTrigger()\"\n>\n  <div (click)=\"eventHandler({ event: $event })\">\n    <ng-content select=\"[slot=button]\"></ng-content>\n  </div>\n\n  <div\n    class=\"dropdown__content dropdown__content--visibility-hidden\"\n    [class.dropdown__content--visibility-visible]=\"isVisibleContent\"\n    [ngClass]=\"{\n      'dropdown__content--position-right': contentPosition === 'right',\n      'dropdown__content--position-left': contentPosition === 'left',\n      'dropdown__content--position-center': contentPosition === 'center'\n    }\"\n  >\n    <ng-content select=\"[slot=content]\"></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "ErrorBlockComponent",
            "id": "component-ErrorBlockComponent-68f5ace2ea6f9906caff15004303ff601f075dbd75cb8dd3488a8540494132177212cb99fca4da9038c61866f8eb455d882935f2c0d59f822c9fabf223160c48",
            "file": "src/app/components/error-block/error-block.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-block",
            "styleUrls": [
                "./error-block.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-block.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "defaultValue": "'Произошла ошибка'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitRepeatRequest",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "repeatRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-error-block',\n  templateUrl: './error-block.component.html',\n  styleUrls: ['./error-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorBlockComponent {\n  @Input() text = 'Произошла ошибка';\n  @Output() emitRepeatRequest: EventEmitter<void> = new EventEmitter();\n\n  protected repeatRequest(): void {\n    this.emitRepeatRequest.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".error {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &__text {\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./error-block.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"error\">\n  <p class=\"error__text\">{{ text }}</p>\n\n  <button class=\"error__btn\" (click)=\"repeatRequest()\" appUiButton=\"1\">Повторить запрос</button>\n</div>\n"
        },
        {
            "name": "ErrorFieldComponent",
            "id": "component-ErrorFieldComponent-4881c78c3f747beb5f618b82662b6ad62d8f524e8e68aa8cad28b2e43551351f8114605ddefd8d83b023253272f81925684bcab4ad2f806d203ef067af56968e",
            "file": "src/app/components/error-field/error-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-field",
            "styleUrls": [
                "./error-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedby",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isEmpty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidAccount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidBankCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidPhone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInvalidUNP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isRequiredRadio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error-field',\n  templateUrl: './error-field.component.html',\n  styleUrls: ['./error-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorFieldComponent {\n  @Input() ariaDescribedby: string;\n  @Input() isRequired: boolean;\n  @Input() isRequiredRadio: boolean;\n  @Input() isEmpty: boolean;\n  @Input() isInvalidPhone: boolean;\n  @Input() isInvalidEmail: boolean;\n  @Input() isInvalidUNP: boolean;\n  @Input() isInvalidAccount: boolean;\n  @Input() isInvalidBankCode: boolean;\n  @Input() isInvalidTime: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.error {\r\n  color: $color-7;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n\r\n  &--space-top {\r\n    padding-top: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./error-field.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container [ngSwitch]=\"true\">\n  <p role=\"alert\" [id]=\"ariaDescribedby\" class=\"error error--space-top\" *ngSwitchCase=\"isRequired\">\n    Поле обязательно к заполнению\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isRequiredRadio\"\n  >\n    Необходимо обязательно выбрать\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isEmpty && !isRequired\"\n  >\n    Поле не должно быть пустым\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidPhone && !isRequired\"\n  >\n    Проверьте корректность введенного номера\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidEmail && !isRequired\"\n  >\n    Проверьте корректность введенного email\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidUNP && !isRequired\"\n  >\n    УНП должен состоять из 9 цифр\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidAccount && !isRequired\"\n  >\n    Расчетный счет должен состоять из 20 цифр\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidBankCode && !isRequired\"\n  >\n    Код банка должен состоять из 9 цифр\n  </p>\n\n  <p\n    role=\"alert\"\n    [id]=\"ariaDescribedby\"\n    class=\"error error--space-top\"\n    *ngSwitchCase=\"isInvalidTime && !isRequired\"\n  >\n    Введите корректное время в 24-ом формате\n  </p>\n</ng-container>\n"
        },
        {
            "name": "FaqComponent",
            "id": "component-FaqComponent-246d8acb353d28c17b11a63696db0b37f21f9576274a69536c2ed80f451148438eef474f03b774e45a9c716597dc67977f395d35630af810631b7ed5e62407ca",
            "file": "src/app/pages/faq/faq.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-faq",
            "styleUrls": [
                "./faq.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./faq.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { pageData } from '~pages/faq/data/pageData';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FaqComponent {\n  public data = pageData;\n\n  constructor(private meta: Meta) {\n    this.setMeta();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.faq {\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50px;\r\n      z-index: -1;\r\n      width: 177px;\r\n      height: 215px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/faq/blue-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/faq/blue-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: -1;\r\n      width: 150px;\r\n      height: 150px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/faq/blue-flowers-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/faq/blue-flowers-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateY(180deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg-top {\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: -419px;\r\n      top: -462px;\r\n      z-index: -2;\r\n      width: 784px;\r\n      height: 933px;\r\n      background-image: url('/assets/images/pages/faq/blue-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(6deg);\r\n    }\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: -250px;\r\n      top: -367px;\r\n      z-index: -2;\r\n      width: 784px;\r\n      height: 933px;\r\n      background-image: url('/assets/images/pages/faq/blue-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(6deg);\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg-bottom {\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: -419px;\r\n      bottom: -462px;\r\n      z-index: -2;\r\n      width: 784px;\r\n      height: 933px;\r\n      background-image: url('/assets/images/pages/faq/blue-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(6deg);\r\n    }\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: -250px;\r\n      bottom: -367px;\r\n      z-index: -2;\r\n      width: 733px;\r\n      height: 698px;\r\n      background-image: url('/assets/images/pages/faq/blue-color-bg.svg');\r\n      background-size: 100% 100%;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(80deg);\r\n    }\r\n  }\r\n\r\n  &__accordion-wrapper {\r\n    max-width: 850px;\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    margin-bottom: 48px;\r\n  }\r\n\r\n  &__title {\r\n    position: relative;\r\n    margin-bottom: 40px;\r\n    padding-left: 100px;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 20px;\r\n      width: 65px;\r\n      height: 1px;\r\n      background-color: $color-1;\r\n    }\r\n  }\r\n}\r\n\r\n.accordion {\r\n  border: 1px solid $color-1;\r\n\r\n  &__btn {\r\n    position: relative;\r\n    width: 100%;\r\n    padding: 20px 50px 20px 20px;\r\n    text-align: start;\r\n    letter-spacing: 0.1em;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: $color-1;\r\n    text-decoration: uppercase;\r\n    line-height: 1.6;\r\n    background-color: transparent;\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: rgb($color: $color-1, $alpha: 0.2);\r\n    }\r\n\r\n    &:active {\r\n      background-color: rgb($color: $color-1, $alpha: 0.3);\r\n    }\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      right: 20px;\r\n      width: 20px;\r\n      height: 1px;\r\n      background-color: $color-1;\r\n    }\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      right: 20px;\r\n      width: 20px;\r\n      height: 1px;\r\n      background-color: $color-1;\r\n      transform: rotateZ(90deg);\r\n      transition: transform 0.3s;\r\n    }\r\n\r\n    &--active {\r\n      &::before {\r\n        transform: rotateZ(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__text {\r\n    padding: 0 20px 20px;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n    line-height: 1.6;\r\n  }\r\n}\r\n\r\n.accordion-list {\r\n  &__item {\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .faq {\r\n    &__container {\r\n      padding-bottom: 100px;\r\n    }\r\n\r\n    &__title {\r\n      margin-bottom: 60px;\r\n      padding-left: 0;\r\n\r\n      &::after {\r\n        content: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .accordion {\r\n    &__text {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./faq.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"faq faq--bg\">\n  <div class=\"faq__decor-color-bg-top\"></div>\n  <div class=\"faq__decor-color-bg-bottom\"></div>\n\n  <div class=\"faq__container container container--pt\">\n    <app-breadcrumbs\n      class=\"faq__breadcrumbs\"\n      [links]=\"data.breadcrumbs\"\n    ></app-breadcrumbs>\n\n    <h1 class=\"faq__title section-title\">{{ data.title }}</h1>\n\n    <div class=\"faq__accordion-wrapper\">\n      <ul class=\"list-reset accordion-list\">\n        <li class=\"accordion-list__item\" *ngFor=\"let item of data.faq\">\n          <app-accordion class=\"accordion\" #accordion>\n            <button\n              slot=\"button\"\n              class=\"accordion__btn\"\n              [ngClass]=\"{ 'accordion__btn--active': accordion.isOpen }\"\n            >\n              {{ item.question }}\n            </button>\n\n            <ng-template slot=\"content\" #bodyContent>\n              <p class=\"accordion__text\">\n                {{ item.answer }}\n              </p>\n            </ng-template>\n          </app-accordion>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FeedbackFormComponent",
            "id": "component-FeedbackFormComponent-9c4394a39a57ae206544e240b9e138212f0bc9bd6d9f91c59f3d6952fc8989277908b07aab1d6304b07fcc2249c7668f4e5a6ac0a0e49b61c5d8ac56571d7703",
            "file": "src/app/components/feedback-form/feedback-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-form",
            "styleUrls": [
                "./feedback-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feedback-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitFormSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<IFeedbackData>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerQuestionSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IFeedbackData } from './types';\n\n@Component({\n  selector: 'app-feedback-form',\n  templateUrl: './feedback-form.component.html',\n  styleUrls: ['./feedback-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeedbackFormComponent {\n  private form: NgForm;\n  @Input() isLoading: boolean;\n  @Output() emitFormSubmit: EventEmitter<IFeedbackData> = new EventEmitter();\n\n  public handlerQuestionSubmit(form: NgForm): void {\n    if (form.invalid || this.isLoading) {\n      return;\n    }\n    this.emitFormSubmit.emit(form.value);\n    this.form = form;\n  }\n\n  public resetForm() {\n    this.form.resetForm();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.form-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 50px;\r\n\r\n  &__descr {\r\n    position: relative;\r\n    align-self: flex-end;\r\n    padding-top: 50px;\r\n    max-width: 280px;\r\n    margin-bottom: 35px;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 2px;\r\n      background-color: $color-1;\r\n    }\r\n  }\r\n\r\n  &__question-form {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__paragraph {\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n.question-form {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &__field-wrapper {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__loader {\r\n    pointer-events: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n\r\n.field--textarea {\r\n  height: 120px;\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .form-wrapper {\r\n    padding-top: 0;\r\n\r\n    &__descr {\r\n      align-self: flex-start;\r\n      padding-top: 20px;\r\n\r\n      &::after {\r\n        width: 70%;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./feedback-form.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"form-wrapper\">\n  <p class=\"form-wrapper__descr text-line-height-1-8 text-uppercase\">\n    Отправьте ваш вопрос, заказ, предложение или жалобу через форму обратной связи, и наш специалист\n    свяжется с вами в течение 15 минут.\n  </p>\n\n  <form\n    #questionForm=\"ngForm\"\n    class=\"form-wrapper__question-form question-form\"\n    (ngSubmit)=\"handlerQuestionSubmit(questionForm)\"\n  >\n    <app-loader\n      *ngIf=\"isLoading\"\n      class=\"question-form__loader\"\n      text=\"Кормим почтового голубя...\"\n    ></app-loader>\n\n    <app-field-wrapper class=\"question-form__field-wrapper\">\n      <label slot=\"label\" class=\"visually-hidden\" for=\"input-name\">Введите ваше имя</label>\n\n      <input\n        slot=\"field\"\n        class=\"field field--accent field--hover-default field--hover-accent field--focus-accent field--mb\"\n        [ngClass]=\"{\n          'field--error':\n            (inputName.touched || questionForm.submitted) &&\n            (inputName.hasError('required') || inputName.hasError('empty'))\n        }\"\n        placeholder=\"{{ 'Ваше имя' | uppercase }}\"\n        type=\"text\"\n        name=\"name\"\n        id=\"input-name\"\n        ngModel\n        required\n        appEmpty\n        #inputName=\"ngModel\"\n        autocomplete=\"given-name\"\n      />\n\n      <app-error-field\n        ariaDescribedby=\"input-name\"\n        [isRequired]=\"\n          (inputName.touched || questionForm.submitted) && inputName.hasError('required')\n        \"\n        [isEmpty]=\"\n          (inputName.touched || questionForm.submitted) &&\n          (inputName.hasError('required') || inputName.hasError('empty'))\n        \"\n      ></app-error-field>\n    </app-field-wrapper>\n\n    <app-field-wrapper class=\"question-form__field-wrapper\">\n      <label class=\"visually-hidden\" for=\"input-phone\">Введите ваш номер телефона</label>\n      <input\n        class=\"field field--accent field--hover-default field--hover-accent field--focus-accent\"\n        [class]=\"{\n          'field--error':\n            (inputPhone.touched || questionForm.submitted) &&\n            (inputPhone.hasError('required') || inputPhone.hasError('minlength'))\n        }\"\n        placeholder=\"{{ '+7 (977) 777-77-77' | uppercase }}\"\n        type=\"text\"\n        name=\"phone\"\n        id=\"input-phone\"\n        ngModel\n        required\n        minlength=\"11\"\n        #inputPhone=\"ngModel\"\n        autocomplete=\"tel\"\n        mask=\"+0 (000) 000-00-00\"\n      />\n\n      <app-error-field\n        ariaDescribedby=\"input-phone\"\n        [isRequired]=\"\n          (inputPhone.touched || questionForm.submitted) && inputPhone.hasError('required')\n        \"\n        [isInvalidPhone]=\"\n          (inputPhone.touched || questionForm.submitted) && inputPhone.hasError('minlength')\n        \"\n      ></app-error-field>\n    </app-field-wrapper>\n\n    <app-field-wrapper class=\"question-form__field-wrapper\">\n      <label class=\"visually-hidden\" for=\"input-comment\">Введите ваш комментарий</label>\n\n      <textarea\n        class=\"field field--textarea field--accent field--hover-accent field--focus-accent\"\n        [class]=\"{\n          'field--error':\n            (inputComment.touched || questionForm.submitted) &&\n            (inputComment.hasError('required') || inputComment.hasError('empty'))\n        }\"\n        placeholder=\"{{ 'Ваш комментарий' | uppercase }}\"\n        name=\"comment\"\n        id=\"input-comment\"\n        ngModel\n        required\n        appEmpty\n        #inputComment=\"ngModel\"\n      ></textarea>\n\n      <app-error-field\n        ariaDescribedby=\"input-comment\"\n        [isRequired]=\"\n          (inputComment.touched || questionForm.submitted) && inputComment.hasError('required')\n        \"\n        [isEmpty]=\"\n          (inputComment.touched || questionForm.submitted) && inputComment.hasError('empty')\n        \"\n      ></app-error-field>\n    </app-field-wrapper>\n\n    <button appUiButton=\"1\">{{ 'Отправить' | uppercase }}</button>\n  </form>\n\n  <p class=\"form-wrapper__paragraph\">\n    Нажимая на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в\n    соответствии с\n    <a class=\"form-wrapper__link link outline-focus\" href=\"#\">Политикой конфиденциальности</a>\n  </p>\n</div>\n"
        },
        {
            "name": "FeedbackFormContainerComponent",
            "id": "component-FeedbackFormContainerComponent-c660dd2d29987df1fe1a1d3582a8c86aa90964fbaea4e42e54aa1d569eb4754d0fdab0f461109aa0ace531a4241c03589668185d7f76bebda6522ad7f56ce2db",
            "file": "src/app/containers/feedback-form-container/feedback-form-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-form-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./feedback-form-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "feedbackForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeedbackFormComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'feedbackForm'"
                        }
                    ]
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSubmitForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IFeedbackData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToResetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { FeedbackFormComponent } from '~components/feedback-form/feedback-form.component';\nimport { FeedbackService } from 'src/app/services/feedback/feedback.service';\nimport { IFeedbackData } from 'src/app/components/feedback-form/types';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-feedback-form-container',\n  templateUrl: './feedback-form-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeedbackFormContainerComponent implements OnInit, OnDestroy {\n  @ViewChild('feedbackForm') feedbackForm: FeedbackFormComponent;\n  private destroySubject: Subject<null> = new Subject();\n  protected isLoading: boolean;\n  constructor(private cdr: ChangeDetectorRef, private feedbackService: FeedbackService) {}\n\n  ngOnInit(): void {\n    this.subscribeToResetForm();\n    this.subscribeToLoading();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToResetForm(): void {\n    this.feedbackService\n      .getClearFormStream$()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(() => {\n        this.resetForm();\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToLoading(): void {\n    this.feedbackService\n      .getFeedbackIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  protected handlerSubmitForm(data: IFeedbackData) {\n    this.feedbackService.submitForm(data);\n  }\n\n  private resetForm() {\n    this.feedbackForm.resetForm();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-feedback-form\n  #feedbackForm\n  [isLoading]=\"isLoading\"\n  (emitFormSubmit)=\"handlerSubmitForm($event)\"\n  data-test=\"feedbackForm\"\n></app-feedback-form>\n"
        },
        {
            "name": "FieldWrapperComponent",
            "id": "component-FieldWrapperComponent-9a2bf608402e205390c25e9ea1cef08394fac9897df51c1c4839698cc29020f53d6dd951a605f19617a6bd9e61f0767e52becc6d7c01d1b8bae5cf1199101487",
            "file": "src/app/components/field-wrapper/field-wrapper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-field-wrapper",
            "styleUrls": [
                "./field-wrapper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./field-wrapper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-field-wrapper',\n  templateUrl: './field-wrapper.component.html',\n  styleUrls: ['./field-wrapper.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldWrapperComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n",
                    "styleUrl": "./field-wrapper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <ng-content select=\"[slot]='label'\"></ng-content>\n  <ng-content select=\"[slot]='label-hidden'\"></ng-content>\n  <ng-content select=\"[slot]='field'\"></ng-content>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "FiltersFormComponent",
            "id": "component-FiltersFormComponent-72ae2acd1209e9cf9ffe9b32e48f4f9ae07d17dbdb74b006ca389402ce8651cd0bb2c12715b4c5b0d6dd4c5f8678a7c1e2b7d917e6203fddc88284789ac2d8e5",
            "file": "src/app/components/filters-form/filters-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filters-form",
            "styleUrls": [
                "./filters-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filters-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filtersData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IFiltersFormData",
                    "decorators": []
                },
                {
                    "name": "updatedFiltersData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "IFiltersFormData",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitControlsValueChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "emitResetFilters",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_filtersData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFiltersFormData",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "filtersForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rangeMax",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rangeMin",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [
                        {
                            "name": "filtersData",
                            "type": "IFiltersFormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "filtersData",
                            "type": "IFiltersFormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createFromGroupCheckboxes",
                    "args": [
                        {
                            "name": "groupName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controls",
                            "type": "ICheckboxesGroupData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "groupName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controls",
                            "type": "ICheckboxesGroupData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerResetFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToValuesChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { isFormGroup, isNonNull } from '~types/guards';\nimport { Subject, debounceTime, takeUntil } from 'rxjs';\nimport { IFiltersFormData, ICheckboxesGroupData } from './types';\n@Component({\n  selector: 'app-filters-form',\n  templateUrl: './filters-form.component.html',\n  styleUrls: ['./filters-form.component.scss']\n})\nexport class FiltersFormComponent implements AfterViewInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  public filtersForm: FormGroup;\n  private _filtersData: IFiltersFormData;\n  public rangeMin = 1;\n  public rangeMax = 1000;\n\n  @Input() set filtersData(filtersData: IFiltersFormData) {\n    this._filtersData = filtersData;\n\n    if (!this.filtersForm) {\n      this.createForm(filtersData);\n      return;\n    }\n  }\n  get filtersData() {\n    return this._filtersData;\n  }\n  @Input() set updatedFiltersData(filtersData: IFiltersFormData) {\n    this.filtersForm.patchValue(filtersData);\n  }\n\n  @Output() emitControlsValueChanged: EventEmitter<typeof this.filtersForm.value> =\n    new EventEmitter();\n  @Output() emitResetFilters: EventEmitter<void> = new EventEmitter();\n\n  ngAfterViewInit(): void {\n    this.subscribeToValuesChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToValuesChanges(): void {\n    this.filtersForm.valueChanges\n      .pipe(takeUntil(this.destroySubject), debounceTime(900))\n      .subscribe((formValues) => this.emitControlsValueChanged.emit(formValues));\n  }\n\n  private createForm(filtersData: IFiltersFormData): void {\n    this.filtersForm = new FormGroup({});\n\n    for (const [keyGroup, controls] of Object.entries(filtersData)) {\n      const isRangeValue =\n        typeof controls === 'object' && controls !== null && 'from' in controls && 'to' in controls;\n      const isCheckboxes = typeof controls === 'object' && controls !== null;\n\n      if (isRangeValue) {\n        this.filtersForm.addControl(keyGroup, new FormControl(controls));\n        continue;\n      }\n\n      if (isCheckboxes) {\n        this.createFromGroupCheckboxes(keyGroup, controls);\n      }\n    }\n  }\n\n  private createFromGroupCheckboxes(groupName: string, controls: ICheckboxesGroupData): void {\n    for (const [controlName, controlValue] of Object.entries(controls)) {\n      let group = this.filtersForm.get(groupName);\n\n      if (!group) {\n        this.filtersForm.addControl(groupName, new FormGroup({}));\n      }\n\n      group = this.filtersForm.get(groupName);\n      if (isNonNull(group) && isFormGroup(group)) {\n        group.addControl(controlName, new FormControl(controlValue));\n      }\n    }\n  }\n\n  public handlerResetFilters(): void {\n    this.emitResetFilters.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-form {\r\n  padding: 20px 16px 30px;\r\n  border-radius: 20px;\r\n\r\n  &__fieldset {\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n.fieldset {\r\n  &__legend {\r\n    &:not(:last-child) {\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n\r\n  &__checkbox-wrapper {\r\n    &:not(:last-child) {\r\n      margin-bottom: 7px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./filters-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "filtersData": {
                    "name": "filtersData",
                    "setSignature": {
                        "name": "filtersData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "filtersData",
                                "type": "IFiltersFormData",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "filtersData",
                                "type": "IFiltersFormData",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "filtersData",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "updatedFiltersData": {
                    "name": "updatedFiltersData",
                    "setSignature": {
                        "name": "updatedFiltersData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "filtersData",
                                "type": "IFiltersFormData",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "filtersData",
                                "type": "IFiltersFormData",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form class=\"filter-form card-background\" [formGroup]=\"filtersForm\">\n  <h2 class=\"visually-hidden\">Фильтр товаров</h2>\n\n  <ng-container *ngIf=\"filtersData\">\n    <ng-container *appForEntries=\"let group of filtersData\">\n      <fieldset\n        class=\"filter-form__fieldset fieldset\"\n        [formGroupName]=\"group.name\"\n        *ngIf=\"group.value.to === undefined && group.value.from === undefined\"\n      >\n        <legend class=\"fieldset__legend text-uppercase text-color--1\">\n          {{ group.name | productFeatures }}\n        </legend>\n\n        <ng-container>\n          <app-checkbox\n            #checkbox\n            *appForEntries=\"let control of group.value\"\n            [labelValue]=\"\n              control.name\n                | productColorName\n                | productFormatName\n                | productLightName\n                | productFlowerName\n            \"\n            [attrValue]=\"control.name\"\n            [formControlName]=\"control.name\"\n          ></app-checkbox>\n        </ng-container>\n      </fieldset>\n\n      <ng-container *ngIf=\"group.value.to !== undefined && group.value.from !== undefined\">\n        <fieldset class=\"filter-form__fieldset fieldset\">\n          <legend class=\"fieldset__legend text-uppercase text-color--1\">\n            {{ group.name | productFeatures }}\n          </legend>\n\n          <app-range\n            #rangePrice\n            [formControlName]=\"group.name\"\n            [min]=\"rangeMin\"\n            [max]=\"rangeMax\"\n            [gap]=\"50\"\n          ></app-range>\n\n          <p class=\"text-uppercase text-weight-300\">\n            {{ group.name | productPriceName }}:\n            <abbr\n              title=\"Минимальная\"\n              *ngIf=\"rangePrice.value.from === rangePrice.min; else valueFrom\"\n              >мин\n            </abbr>\n\n            <ng-template #valueFrom>{{ rangePrice.value.from | currency : 'RUB' }}</ng-template>\n            –\n            <abbr title=\"Максимальная\" *ngIf=\"rangePrice.value.to === rangePrice.max; else valueTo\"\n              >макс\n            </abbr>\n\n            <ng-template #valueTo>{{ rangePrice.value.to | currency : 'RUB' }}</ng-template>\n          </p>\n        </fieldset>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <button class=\"text-uppercase\" type=\"button\" appUiButton=\"2\" (click)=\"handlerResetFilters()\">\n    Сбросить фильтр\n  </button>\n</form>\n"
        },
        {
            "name": "FiltersFormContainerComponent",
            "id": "component-FiltersFormContainerComponent-e9ab7ead6f6521afeabe11352f71a52f5c298a3f566f1e02138ca2bb2196c8e7a15f76752169fa2ba702166478c898688cb3a0165787232b1f0e77c0295a219e",
            "file": "src/app/containers/filters-form-container/filters-form-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filters-form-container",
            "styleUrls": [
                "./filters-form-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filters-form-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "filtersDefaultData",
                    "defaultValue": "{\n    light: {\n      [LIGHT_PARAMS[EnumLight.gentle]]: false,\n      [LIGHT_PARAMS[EnumLight.bright]]: false\n    },\n    color: {\n      [COLOR_PARAMS[EnumColor.white]]: false,\n      [COLOR_PARAMS[EnumColor.yellow]]: false,\n      [COLOR_PARAMS[EnumColor.green]]: false,\n      [COLOR_PARAMS[EnumColor.red]]: false,\n      [COLOR_PARAMS[EnumColor.orange]]: false,\n      [COLOR_PARAMS[EnumColor.pink]]: false\n    },\n    format: {\n      [FORMAT_PARAMS[EnumFormat.bouquet]]: false,\n      [FORMAT_PARAMS[EnumFormat.vase]]: false,\n      [FORMAT_PARAMS[EnumFormat.envelope]]: false,\n      [FORMAT_PARAMS[EnumFormat.basket]]: false,\n      [FORMAT_PARAMS[EnumFormat.hatbox]]: false,\n      [FORMAT_PARAMS[EnumFormat.box]]: false\n    },\n    price: {\n      from: 1,\n      to: 1000\n    },\n    flower: {\n      [FLOWER_PARAMS[EnumFlower.alstroemeria]]: false,\n      [FLOWER_PARAMS[EnumFlower.anthurium]]: false,\n      [FLOWER_PARAMS[EnumFlower.asparagus]]: false,\n      [FLOWER_PARAMS[EnumFlower.astilba]]: false,\n      [FLOWER_PARAMS[EnumFlower.astrance]]: false\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFiltersFormData",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "initialFilterData",
                    "defaultValue": "this.utilsService.deepClone(this.filtersDefaultData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "initialFilterParams",
                    "defaultValue": "this.paramsService.convertDataToParams(this.filtersDefaultData, {\n    isRemovedEmpty: true\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "updatedFiltersData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerControlsValueChanged",
                    "args": [
                        {
                            "name": "this",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "changedFiltersData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "this",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "changedFiltersData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerResetFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, map, takeUntil } from 'rxjs';\nimport { ParamsService } from 'src/app/services/params/params.service';\nimport { IFormData } from 'src/app/services/params/types';\nimport { UtilsService } from 'src/app/services/utils/utils.service';\nimport { IFiltersFormData } from '~components/filters-form/types';\nimport {\n  LIGHT_PARAMS,\n  EnumLight,\n  EnumColor,\n  COLOR_PARAMS,\n  FORMAT_PARAMS,\n  EnumFormat,\n  FLOWER_PARAMS,\n  EnumFlower\n} from '~types/product';\n\n@Component({\n  selector: 'app-filters-form-container',\n  templateUrl: './filters-form-container.component.html',\n  styleUrls: ['./filters-form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersFormContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  readonly filtersDefaultData: IFiltersFormData = {\n    light: {\n      [LIGHT_PARAMS[EnumLight.gentle]]: false,\n      [LIGHT_PARAMS[EnumLight.bright]]: false\n    },\n    color: {\n      [COLOR_PARAMS[EnumColor.white]]: false,\n      [COLOR_PARAMS[EnumColor.yellow]]: false,\n      [COLOR_PARAMS[EnumColor.green]]: false,\n      [COLOR_PARAMS[EnumColor.red]]: false,\n      [COLOR_PARAMS[EnumColor.orange]]: false,\n      [COLOR_PARAMS[EnumColor.pink]]: false\n    },\n    format: {\n      [FORMAT_PARAMS[EnumFormat.bouquet]]: false,\n      [FORMAT_PARAMS[EnumFormat.vase]]: false,\n      [FORMAT_PARAMS[EnumFormat.envelope]]: false,\n      [FORMAT_PARAMS[EnumFormat.basket]]: false,\n      [FORMAT_PARAMS[EnumFormat.hatbox]]: false,\n      [FORMAT_PARAMS[EnumFormat.box]]: false\n    },\n    price: {\n      from: 1,\n      to: 1000\n    },\n    flower: {\n      [FLOWER_PARAMS[EnumFlower.alstroemeria]]: false,\n      [FLOWER_PARAMS[EnumFlower.anthurium]]: false,\n      [FLOWER_PARAMS[EnumFlower.asparagus]]: false,\n      [FLOWER_PARAMS[EnumFlower.astilba]]: false,\n      [FLOWER_PARAMS[EnumFlower.astrance]]: false\n    }\n  };\n\n  protected initialFilterData = this.utilsService.deepClone(this.filtersDefaultData);\n  protected initialFilterParams = this.paramsService.convertDataToParams(this.filtersDefaultData, {\n    isRemovedEmpty: true\n  });\n  protected updatedFiltersData = {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private utilsService: UtilsService,\n    private paramsService: ParamsService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToQueryParams();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToQueryParams() {\n    this.activatedRoute.queryParams\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((params) => this.paramsService.convertParamsToData(params, this.initialFilterData))\n      )\n      .subscribe((dataFromParams) => {\n        if (!dataFromParams) {\n          return;\n        }\n        this.updatedFiltersData = dataFromParams;\n      });\n  }\n\n  protected handlerResetFilters(): void {\n    this.updatedFiltersData = this.initialFilterData;\n  }\n\n  protected handlerControlsValueChanged(\n    this: this,\n    changedFiltersData: typeof this.filtersDefaultData\n  ): void {\n    const dataWithoutDefault = this.paramsService.getDataWidthoutDefault(\n      changedFiltersData,\n      this.initialFilterData\n    );\n    const paramsFromForm = this.paramsService.convertDataToParams(\n      <IFormData<string>>dataWithoutDefault\n    );\n\n    this.paramsService.setParams(paramsFromForm, this.initialFilterParams);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./filters-form-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-filters-form\n  [filtersData]=\"filtersDefaultData\"\n  [updatedFiltersData]=\"updatedFiltersData\"\n  (emitControlsValueChanged)=\"handlerControlsValueChanged($event)\"\n  (emitResetFilters)=\"handlerResetFilters()\"\n  data-test=\"filtersForm\"\n></app-filters-form>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-cf8803def0c4245e723cfab68e3080f7dd1bbe878270689b43835c1a61347e281e3f1a47d03043db563160cb0331e8bfccdbe3b9e5d9a9993567e5fbf300d6ad",
            "file": "src/app/page-components/shared/footer/footer.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { footer } from './data';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent {\n  public data = footer;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.logo-link {\r\n  display: inline-block;\r\n}\r\n\r\n.footer {\r\n  background-color: $color-9;\r\n\r\n  &__container {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-column-gap: 40px;\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n  }\r\n\r\n  &__logo-link {\r\n    grid-column: 1/2;\r\n    align-self: start;\r\n    justify-self: start;\r\n  }\r\n\r\n  &__requisites {\r\n    grid-column: 1/2;\r\n  }\r\n\r\n  &__catalog {\r\n    grid-row: 1/3;\r\n    grid-column: 2/3;\r\n  }\r\n\r\n  &__pages {\r\n    grid-column: 3/4;\r\n    grid-row: 1/3;\r\n  }\r\n\r\n  &__address-block {\r\n    grid-column: 4/5;\r\n    grid-row: 1/3;\r\n  }\r\n}\r\n\r\n.pages {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.catalog-list {\r\n  &__item:not(:last-child) {\r\n    margin-bottom: 9px;\r\n  }\r\n}\r\n\r\n.bouquet-list {\r\n  &__item:not(:last-child) {\r\n    margin-bottom: 9px;\r\n  }\r\n}\r\n\r\n.pages {\r\n  &__item:not(:last-child) {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n.address-list {\r\n  &__item:not(:last-child) {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__item {\r\n    line-height: 1.5;\r\n  }\r\n\r\n  &__link {\r\n    display: inline-block;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n\r\n  &__title {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.text-mini {\r\n  font-size: 12px;\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .footer {\r\n    &__container {\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n      grid-row-gap: 30px;\r\n    }\r\n\r\n    &__requisites {\r\n      grid-row: 3/4;\r\n      grid-column: 1/4;\r\n      text-align: center;\r\n    }\r\n\r\n    &__catalog {\r\n      grid-row: 2/3;\r\n      grid-column: 1/2;\r\n    }\r\n\r\n    &__pages {\r\n      grid-column: 2/3;\r\n    }\r\n\r\n    &__address-block {\r\n      grid-column: 3/4;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .footer {\r\n    &__container {\r\n      grid-template-columns: 1fr;\r\n      justify-items: center;\r\n      grid-row-gap: 40px;\r\n    }\r\n\r\n    &__requisites {\r\n      grid-row: 4/5;\r\n      grid-column: 1/1;\r\n      max-width: 80%;\r\n      text-align: center;\r\n    }\r\n\r\n    &__catalog {\r\n      display: none;\r\n    }\r\n\r\n    &__bouquet {\r\n      display: none;\r\n    }\r\n\r\n    &__logo-link {\r\n      grid-row: 1/2;\r\n      justify-self: center;\r\n      align-self: center;\r\n    }\r\n\r\n    &__pages {\r\n      grid-row: 2/3;\r\n      grid-column: 1/1;\r\n      text-align: center;\r\n    }\r\n\r\n    &__address-block {\r\n      grid-column: 1/1;\r\n      grid-row: 3/4;\r\n      text-align: center;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<footer class=\"footer\">\n  <div class=\"container footer__container\">\n    <a class=\"footer__logo-link logo-link\" aria-label=\"На главную\" routerLink=\"/\">\n      <app-icon icon=\"logo\"></app-icon>\n    </a>\n\n    <div class=\"footer__requisites requisites\">\n      <h3 class=\"text-color--1\">{{ data.requisites.title | uppercase }}</h3>\n\n      <p class=\"text-weight-300 text-line-height-1-6\">\n        {{ data.requisites.descr | uppercase }}\n      </p>\n    </div>\n\n    <div class=\"footer__catalog catalog\">\n      <h3 class=\"text-color--1\">{{ data.catalog.title | uppercase }}</h3>\n\n      <ul class=\"list-reset catalog-list\">\n        <li class=\"catalog-list__item\" *ngFor=\"let category of data.catalog.categories\">\n          <a\n            class=\"text-weight-300 text-line-height-1-6\"\n            [queryParams]=\"{ category: category.paramValue }\"\n            [routerLink]=\"['/catalog']\"\n            >{{ category.title | uppercase }}</a\n          >\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"footer__pages pages\">\n      <a\n        class=\"text-color--1 pages__item\"\n        *appForEntries=\"let route of data.nav\"\n        [routerLink]=\"route.value.url\"\n        >{{ route.value.title | uppercase }}</a\n      >\n    </div>\n\n    <address class=\"footer__address-block address-block\">\n      <h3 class=\"visually-hidden text-color-accent-color\">Наши контакты</h3>\n\n      <ul class=\"list-reset address-block__address-list address-list\">\n        <li class=\"address-list__item\">\n          <a\n            class=\"text-color--1 address-list__title text-line-height-1-6\"\n            [href]=\"'mailto:' + data.contactsBlock.email.contact\"\n            aria-label=\"Электронная почта\"\n          >\n            {{ data.contactsBlock.email.contact | uppercase }}\n          </a>\n\n          <p class=\"text-weight-300 text-mini\">\n            {{ data.contactsBlock.email.descr | uppercase }}\n          </p>\n        </li>\n\n        <li class=\"address-list__item\">\n          <a\n            class=\"text-color--1 address-list__title text-line-height-1-6\"\n            routerLink=\"/contacts\"\n            fragment=\"map\"\n            aria-label=\"Посмотреть на карте\"\n          >\n            {{ data.contactsBlock.address.street | uppercase }}\n          </a>\n\n          <p class=\"text-weight-300 text-mini\">\n            {{ data.contactsBlock.address.workTime | uppercase }}\n          </p>\n\n          <p class=\"text-weight-300 text-mini\">\n            {{ data.contactsBlock.address.weekends | uppercase }}\n          </p>\n        </li>\n\n        <li class=\"address-list__item\">\n          <a\n            class=\"text-color--1 address-list__title\"\n            [href]=\"'tel:' + data.contactsBlock.phone.phone\"\n          >\n            {{ data.contactsBlock.phone.phone | uppercase | mask : '+000 (00) 000-00-00' }}\n          </a>\n\n          <p class=\"text-weight-300 text-mini\">\n            {{ data.contactsBlock.phone.descr | uppercase }}\n          </p>\n        </li>\n\n        <li class=\"address-list__item\">\n          <a class=\"address-list__link text-line-height-1-6\" href=\"#\" aria-label=\"Инстаграм\"\n            ><app-icon icon=\"instagram\"></app-icon\n          ></a>\n\n          <a class=\"address-list__link\" href=\"#\" aria-label=\"Вотсап\">\n            <app-icon icon=\"whatsapp\"></app-icon\n          ></a>\n\n          <a\n            class=\"address-list__link\"\n            [href]=\"'tel:' + data.contactsBlock.phone.phone\"\n            aria-label=\"Позвонить\"\n          >\n            <app-icon icon=\"phone\"></app-icon>\n          </a>\n        </li>\n      </ul>\n    </address>\n  </div>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-4e54b8d24ca91b1d9e20d548ccf93c52a30d7438b2e618a6e3ae23a18647553ba12faa2ebd3dbd4f775df2654a2edf6c7ac17e6fb25d4c5e740e559cc32b7e1a",
            "file": "src/app/page-components/shared/header/header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isBurgerMenuOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isMainRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isOnMove",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitBurgerClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter<undefined>"
                },
                {
                    "name": "emitCartClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<undefined>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isBurgerMenuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isMainRoute",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isOnMove",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "burgerMenuBtn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'burgerMenuBtn'"
                        }
                    ]
                },
                {
                    "name": "categoriesData",
                    "defaultValue": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "countInCart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownComponent",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown'"
                        }
                    ]
                },
                {
                    "name": "isHeaderTransparent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navData",
                    "defaultValue": "routes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "phoneNumber",
                    "defaultValue": "contacts.phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitSwitchBurgerMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "emitSwitchCartMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFocusToBurgerButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscribeToCountInCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { DropdownComponent } from 'src/app/components/dropdown/dropdown.component';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { contacts } from '~data/contacts';\nimport { categories } from '~data/product';\nimport { routes } from '~data/routes';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  @ViewChild('burgerMenuBtn') burgerMenuBtn: ElementRef<HTMLElement>;\n  @ViewChild('dropdown') dropdown: DropdownComponent;\n  private destroySubject: Subject<null> = new Subject();\n  private _isBurgerMenuOpen = false;\n  private _isOnMove = false;\n  private _isMainRoute = false;\n  public isHeaderTransparent = false;\n  public navData = routes;\n  public categoriesData = categories;\n  public phoneNumber = contacts.phone;\n  public countInCart: number;\n\n  @Input() set isOnMove(isOnMove: boolean) {\n    this._isOnMove = isOnMove;\n    this.isHeaderTransparent = this._isMainRoute && !isOnMove;\n  }\n  @Input() set isMainRoute(isMainRoute: boolean) {\n    this._isMainRoute = isMainRoute;\n    this.isHeaderTransparent = isMainRoute && !this._isOnMove;\n  }\n  get isMainRoute(): boolean {\n    return this._isMainRoute;\n  }\n\n  @Input() set isBurgerMenuOpen(isOpen: boolean) {\n    if (!isOpen && this._isBurgerMenuOpen) {\n      this.setFocusToBurgerButton();\n    }\n    this._isBurgerMenuOpen = isOpen;\n  }\n  get isBurgerMenuOpen(): boolean {\n    return this._isBurgerMenuOpen;\n  }\n\n  @Output() emitBurgerClick: EventEmitter<undefined> = new EventEmitter();\n  @Output() emitCartClick: EventEmitter<undefined> = new EventEmitter();\n\n  constructor(private cdr: ChangeDetectorRef, private cartService: CartService) {}\n\n  ngOnInit(): void {\n    this.subscribeToCountInCart();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToCountInCart(): void {\n    this.cartService\n      .getCountInCart()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((count) => {\n        this.countInCart = count;\n        this.cdr.markForCheck();\n      });\n  }\n\n  public emitSwitchBurgerMenu(): void {\n    this.emitBurgerClick.emit();\n  }\n\n  public emitSwitchCartMenu(): void {\n    this.emitCartClick.emit();\n  }\n\n  public closeDropdown(event: MouseEvent): void {\n    const target = <HTMLElement>event.target;\n\n    if (target && target.tagName === 'A') {\n      this.dropdown.switchContentVisible(false);\n    }\n  }\n\n  public setFocusToBurgerButton(): void {\n    this.burgerMenuBtn.nativeElement.focus();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.header {\r\n  width: 100%;\r\n  transition: background-color 0.3s;\r\n\r\n  &--bg-black {\r\n    background-color: $color-5;\r\n  }\r\n\r\n  &--bg-transparent {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &__container {\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 9px;\r\n    padding-bottom: 9px;\r\n  }\r\n\r\n  &__btn-burger {\r\n    display: none;\r\n  }\r\n\r\n  &__logo-link {\r\n    margin-right: 60px;\r\n  }\r\n\r\n  &__phone {\r\n    display: inline-block;\r\n    margin-right: 20px;\r\n    margin-left: auto;\r\n    white-space: nowrap;\r\n  }\r\n}\r\n\r\n.container {\r\n  &__form-search {\r\n    margin-right: 20px;\r\n  }\r\n}\r\n\r\n.btn-burger {\r\n  position: relative;\r\n  width: 40px;\r\n  height: 24px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: $color-1;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  &__line-pivot {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 2px;\r\n      background-color: $color-1;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 2px;\r\n      background-color: $color-1;\r\n    }\r\n  }\r\n}\r\n\r\n.logo-link {\r\n  display: inline-block;\r\n\r\n  &__text {\r\n    display: none;\r\n    max-width: 140px;\r\n    font-size: 20px;\r\n    font-family: 'Cormorant', sans-serif;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  flex-basis: 495px;\r\n  flex-shrink: 1;\r\n  flex-grow: 0;\r\n\r\n  &--mr {\r\n    margin-right: 40px;\r\n  }\r\n\r\n  &__nav-list {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.nav-list {\r\n  &--flex {\r\n    display: flex;\r\n  }\r\n\r\n  &--justify-between {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &__item {\r\n    &--mr:not(:last-child) {\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n}\r\n\r\n.menu-wrapper {\r\n  background-color: rgb($color: $color-9, $alpha: 0.9);\r\n\r\n  &__list {\r\n    width: max-content;\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  &__item {\r\n    text-transform: uppercase;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 7px;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.menu-link {\r\n  transition: color 0.3s;\r\n  &:hover {\r\n    color: rgb($color: $color-1, $alpha: 0.9);\r\n  }\r\n  &:active {\r\n    color: rgb($color: $color-1, $alpha: 0.7);\r\n  }\r\n}\r\n\r\n.nav-link {\r\n  position: relative;\r\n  transition: color 0.3s;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -4px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: $color-1;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n  }\r\n\r\n  &:hover {\r\n    &::after {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    color: rgb($color: $color-1, $alpha: 0.8);\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .nav {\r\n    display: none;\r\n  }\r\n\r\n  .container__form-search {\r\n    display: none;\r\n  }\r\n\r\n  .header {\r\n    &__container {\r\n      justify-content: space-between;\r\n    }\r\n\r\n    &__btn-burger {\r\n      display: inline-block;\r\n    }\r\n\r\n    &__logo-link {\r\n      margin-right: 0;\r\n    }\r\n\r\n    &__btn-cart {\r\n      margin-left: 0;\r\n    }\r\n\r\n    &__phone {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .header {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  .logo-link {\r\n    &--main {\r\n      display: none;\r\n    }\r\n\r\n    &__icon {\r\n      display: none;\r\n    }\r\n\r\n    &__text {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .btn-burger {\r\n    &__line-pivot {\r\n      &::after {\r\n        top: 2px;\r\n      }\r\n\r\n      &::before {\r\n        bottom: 2px;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isOnMove": {
                    "name": "isOnMove",
                    "setSignature": {
                        "name": "isOnMove",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isOnMove",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "isOnMove",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "isMainRoute": {
                    "name": "isMainRoute",
                    "setSignature": {
                        "name": "isMainRoute",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isMainRoute",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "jsdoctags": [
                            {
                                "name": "isMainRoute",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isMainRoute",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 47
                    }
                },
                "isBurgerMenuOpen": {
                    "name": "isBurgerMenuOpen",
                    "setSignature": {
                        "name": "isBurgerMenuOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isBurgerMenuOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 57
                    }
                }
            },
            "templateData": "<header\n  class=\"header header--bg-black\"\n  [ngClass]=\"{ 'header--bg-transparent': isHeaderTransparent }\"\n>\n  <div class=\"container header__container\">\n    <button\n      class=\"btn-reset btn-burger header__btn-burger outline-focus\"\n      aria-label=\"Открыть боковое меню\"\n      (click)=\"emitSwitchBurgerMenu()\"\n      [attr.aria-expanded]=\"isBurgerMenuOpen\"\n      #burgerMenuBtn\n    >\n      <div class=\"btn-burger__line-pivot\"></div>\n    </button>\n\n    <a\n      class=\"header__logo-link logo-link outline-focus\"\n      aria-label=\"На главную\"\n      routerLink=\"/\"\n      ngClass=\"{'logo-link--main': isMainRoute}\"\n    >\n      <app-icon class=\"logo-link__icon\" icon=\"logo\"></app-icon>\n\n      <p *ngIf=\"!isMainRoute\" class=\"logo-link__text\">LOVER FLOWER</p>\n    </a>\n\n    <nav class=\"nav nav--mr\" aria-label=\"Навигация по сайту\">\n      <ul class=\"nav__nav-list list-reset nav-list nav-list--flex nav-list--justify-between\">\n        <li class=\"nav-list__item nav-list__item--mr\" *appForEntries=\"let linkData of navData\">\n          <app-dropdown\n            *ngIf=\"linkData.name === 'catalog'; else linkWithoutDropdown\"\n            target=\"hover\"\n            position=\"right\"\n            #dropdown\n            (click)=\"closeDropdown($event)\"\n          >\n            <a\n              class=\"outline-focus nav-link\"\n              slot=\"button\"\n              [routerLink]=\"linkData.value.url\"\n              routerLinkActive=\"text-color--1\"\n              ariaCurrentWhenActive=\"page\"\n            >\n              {{ linkData.value.title }}\n            </a>\n\n            <div slot=\"content\" class=\"menu-wrapper\">\n              <ul class=\"list-reset menu-wrapper__list\">\n                <li class=\"menu-wrapper__item\" *ngFor=\"let category of categoriesData\">\n                  <a\n                    class=\"menu-wrapper__link menu-link\"\n                    [queryParams]=\"{ category: category.paramValue }\"\n                    [routerLink]=\"['/catalog']\"\n                    routerLinkActive=\"text-color--1\"\n                  >\n                    {{ category.title }}\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </app-dropdown>\n\n          <ng-template #linkWithoutDropdown>\n            <a\n              class=\"outline-focus nav__nav-link nav-link\"\n              [routerLink]=\"linkData.value.url\"\n              routerLinkActive=\"text-color--1\"\n              ariaCurrentWhenActive=\"page\"\n            >\n              {{ linkData.value.title | uppercase }}\n            </a>\n          </ng-template>\n        </li>\n      </ul>\n    </nav>\n\n    <app-search-form-container class=\"container__form-search\"></app-search-form-container>\n\n    <a\n      aria-label=\"Позвонить нам\"\n      class=\"header__phone text-color--1 outline-focus\"\n      href=\"tel:{{ phoneNumber }}\"\n      >{{ phoneNumber | mask : '+000 (00) 000-00-00' }}</a\n    >\n\n    <app-cart-button\n      class=\"header__btn-cart\"\n      [count]=\"countInCart\"\n      (click)=\"emitSwitchCartMenu()\"\n    ></app-cart-button>\n  </div>\n</header>\n"
        },
        {
            "name": "HeroComponent",
            "id": "component-HeroComponent-2cace6c79125939c3c13651b4542ab031af8a4660d97a06d9e57bad0bd0b00074ecf22cdab25b8dea22cede267ac359fdd41d6f9fe7c4506c2d298d01f0e4a67",
            "file": "src/app/page-components/main/hero/hero.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hero-section",
            "styleUrls": [
                "./hero.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./hero.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.hero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { pageData } from '~pages/main/data/pageData';\r\n\r\n@Component({\r\n  selector: 'app-hero-section',\r\n  templateUrl: './hero.component.html',\r\n  styleUrls: ['./hero.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeroComponent {\r\n  public data = pageData.hero;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.hero {\r\n  position: relative;\r\n  height: 0;\r\n  min-height: 100vh;\r\n  padding-bottom: 86%;\r\n\r\n  &__img {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n    object-position: top;\r\n    z-index: -1;\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &--bg {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 10%;\r\n      right: 10%;\r\n      width: 20%;\r\n      height: 200px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/main/lover-flower-green-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/main/lover-flower-green-bg.png')\r\n      );\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      background-size: contain;\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 135px;\r\n  }\r\n\r\n  &__btn {\r\n    align-self: center;\r\n  }\r\n}\r\n\r\n.title {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-family: 'Cormorant', 'sans-serif';\r\n  font-weight: 300;\r\n  font-size: 200px;\r\n  text-align: center;\r\n  line-height: 0.8;\r\n  letter-spacing: 30px;\r\n  word-spacing: 100vw;\r\n\r\n  &--mb {\r\n    margin-bottom: 50px;\r\n  }\r\n}\r\n\r\n.slogan {\r\n  text-align: center;\r\n  font-size: 20px;\r\n\r\n  &--mb {\r\n    margin-bottom: 50px;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .title {\r\n    font-size: 140px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .title {\r\n    font-size: 100px;\r\n    letter-spacing: 20px;\r\n  }\r\n\r\n  .slogan {\r\n    font-size: 17px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .title {\r\n    font-size: 70px;\r\n    letter-spacing: 10px;\r\n  }\r\n\r\n  .slogan {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .title {\r\n    font-size: 42px;\r\n    letter-spacing: 5px;\r\n\r\n    &--mb {\r\n      margin-bottom: 100%;\r\n    }\r\n  }\r\n\r\n  .slogan {\r\n    margin-bottom: 20px;\r\n    max-width: 235px;\r\n    align-self: center;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  .hero {\r\n    height: initial;\r\n    min-height: initial;\r\n    padding-bottom: 0;\r\n    background-size: contain;\r\n    background-position: top;\r\n\r\n    &--bg::after {\r\n      bottom: 15%;\r\n      right: 5%;\r\n    }\r\n  }\r\n\r\n  .hero__container {\r\n    height: 100%;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./hero.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"hero hero--bg\">\r\n  <picture>\r\n    <source srcset=\"/assets/images/pages/main/bouquet-in-hand-bg.webp\" />\r\n    <img\r\n      class=\"hero__img\"\r\n      src=\"/assets/images/pages/main/bouquet-in-hand-bg.jpg\"\r\n      appParallax\r\n      [appParallaxBgOffsetX]=\"30\"\r\n      [appParallaxBgOffsetY]=\"30\"\r\n      appParallaxTargetVariant=\"img\"\r\n      [appParallaxScale]=\"1.1\"\r\n      aria-hidden=\"true\"\r\n      role=\"presentation\"\r\n    />\r\n  </picture>\r\n\r\n  <div class=\"container hero__container\">\r\n    <h1 class=\"title title--mb\">{{ data.title | uppercase }}</h1>\r\n\r\n    <p class=\"slogan slogan--mb\">{{ data.slogan }}</p>\r\n\r\n    <a class=\"hero__btn\" [routerLink]=\"data.link.url\" appUiButton=\"1\">\r\n      {{ data.link.title | uppercase }}\r\n    </a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HowToOrderComponent",
            "id": "component-HowToOrderComponent-a4f950b94e2f34f73c47694b773f614ca9da7e5dfe1bed7d0ce4442820379ff0fd46693ab3d1d80708bbfb58ec70a1dffb5a8c10a9d3fc6a840b3c176d2ed06d",
            "file": "src/app/page-components/main/how-to-order/how-to-order.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-how-to-order-section",
            "styleUrls": [
                "./how-to-order.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./how-to-order.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.howToOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { pageData } from '~pages/main/data/pageData';\n\n@Component({\n  selector: 'app-how-to-order-section',\n  templateUrl: './how-to-order.component.html',\n  styleUrls: ['./how-to-order.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HowToOrderComponent {\n  public data = pageData.howToOrder;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.how-to-order {\r\n  position: relative;\r\n  background-image: image-set(\r\n    url('/assets/images/pages/main/flowers-bg.webp') type('image/webp'),\r\n    url('/assets/images/pages/main/flowers-bg.png')\r\n  );\r\n  background-repeat: no-repeat;\r\n  background-size: auto 90%;\r\n  background-position: left 90px;\r\n\r\n  &__container {\r\n    padding-bottom: 160px;\r\n    background-image: image-set(\r\n      url('/assets/images/pages/main/lover-flower-green-bg.webp') type('image/webp'),\r\n      url('/assets/images/pages/main/lover-flower-green-bg.png')\r\n    );\r\n    background-repeat: no-repeat;\r\n    background-position: right bottom 30px;\r\n  }\r\n\r\n  &__section-title {\r\n    padding-right: 200px;\r\n  }\r\n}\r\n\r\n.list-wrapper {\r\n  padding-left: 450px;\r\n}\r\n\r\n.steps {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: minmax(150px, 248px) 1fr minmax(150px, 238px);\r\n  grid-column-gap: 40px;\r\n  grid-row-gap: 45px;\r\n  padding-top: 40px;\r\n  padding-right: 30px;\r\n\r\n  &::after {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    content: '';\r\n    width: 65px;\r\n    height: 10px;\r\n    background-color: $color-3;\r\n  }\r\n\r\n  &::before {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    content: '';\r\n    width: 2px;\r\n    height: 100%;\r\n    background-color: $color-3;\r\n  }\r\n}\r\n\r\n.step {\r\n  &:first-child {\r\n    grid-column: 1/2;\r\n    grid-row: 1/2;\r\n  }\r\n  &:nth-child(2) {\r\n    grid-row: 2/4;\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    grid-row: 4/4;\r\n  }\r\n\r\n  &:nth-child(4) {\r\n    grid-column: 3/4;\r\n    grid-row: 1/3;\r\n  }\r\n  &:nth-child(5) {\r\n    grid-column: 3/4;\r\n    grid-row: 3/5;\r\n  }\r\n\r\n  &__title {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    color: $color-3;\r\n  }\r\n\r\n  &__descr {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-size: 14px;\r\n    line-height: 1.8;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .how-to-order {\r\n    background-size: 300px;\r\n    background-position: left center;\r\n  }\r\n\r\n  .list-wrapper {\r\n    padding-left: 275px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .steps {\r\n    grid-column-gap: 15px;\r\n    grid-row-gap: 20px;\r\n  }\r\n  .how-to-order {\r\n    background-size: 155px;\r\n  }\r\n\r\n  .list-wrapper {\r\n    padding-left: 140px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .steps {\r\n    grid-template-columns: 0.33fr 0.33fr 0.33fr 1fr;\r\n    grid-column-gap: 0;\r\n    grid-row-gap: 20px;\r\n    padding-right: 0;\r\n\r\n    &__title {\r\n      font-size: 20px;\r\n    }\r\n\r\n    &::before {\r\n      content: none;\r\n    }\r\n\r\n    &::after {\r\n      left: 50%;\r\n    }\r\n  }\r\n\r\n  .step {\r\n    &:first-child {\r\n      grid-column: 4/-1;\r\n      grid-row: 1/2;\r\n    }\r\n    &:nth-child(2) {\r\n      grid-column: 3/-1;\r\n      grid-row: 2/3;\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      grid-column: 2/-1;\r\n      grid-row: 3/4;\r\n    }\r\n\r\n    &:nth-child(4) {\r\n      grid-column: 1/-1;\r\n      grid-row: 4/5;\r\n    }\r\n    &:nth-child(5) {\r\n      grid-column: 1/-1;\r\n      grid-row: 5/6;\r\n    }\r\n  }\r\n\r\n  .how-to-order {\r\n    background-size: 38% auto;\r\n    background-position: left 37px;\r\n\r\n    &__section-title {\r\n      padding-right: 0;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .list-wrapper {\r\n    padding-left: 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./how-to-order.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"how-to-order\">\n  <div class=\"container how-to-order__container\">\n    <h2 class=\"section-title how-to-order__section-title\">\n      {{ data.title | uppercase }}\n    </h2>\n\n    <div class=\"list-wrapper\">\n      <ul class=\"list-reset steps\">\n        <li class=\"step\" *ngFor=\"let step of data.list\">\n          <h3 class=\"step__title\">{{ step.title | uppercase }}</h3>\n\n          <p class=\"step__descr\">{{ step.descr | uppercase }}</p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-96bdef51c885e618ffd504bdb5ac3ce8bcb87f436d1deec3c14fa92dbaecf0b3aafc4cbaedbaa08971c2b66b5b46b38473ad549e9d736b5b3b39012dc3ec2c92",
            "file": "src/app/components/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Height",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "pathFill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "viewBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Width",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Height, Icon, Width } from './types';\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent {\n  @Input() icon: Icon;\n  @Input() width: Width;\n  @Input() height: Height;\n  @Input() viewBox: string;\n  @Input() pathFill: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.width-full {\r\n  width: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n.height-full {\r\n  height: 100%;\r\n  max-height: 100%;\r\n}\r\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<svg\n  class=\"icon icon-tabler icon-tabler-flower\"\n  *ngIf=\"icon === 'flower'\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n  stroke-width=\"1\"\n  [attr.viewBox]=\"viewBox || '0 0 24 24'\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path d=\"M0 0h24v24H0z\" fill=\"none\" stroke=\"none\" />\n  <circle cx=\"12\" cy=\"12\" r=\"3\" />\n  <path\n    d=\"M12 2a3 3 0 0 1 3 3c0 .562 -.259 1.442 -.776 2.64l-.724 1.36l1.76 -1.893c.499 -.6 .922 -1.002 1.27 -1.205a2.968 2.968 0 0 1 4.07 1.099a3.011 3.011 0 0 1 -1.09 4.098c-.374 .217 -.99 .396 -1.846 .535l-2.664 .366l2.4 .326c.995 .145 1.698 .337 2.11 .576a3.011 3.011 0 0 1 1.09 4.098a2.968 2.968 0 0 1 -4.07 1.098c-.348 -.202 -.771 -.604 -1.27 -1.205l-1.76 -1.893l.724 1.36c.516 1.199 .776 2.079 .776 2.64a3 3 0 0 1 -6 0c0 -.562 .259 -1.442 .776 -2.64l.724 -1.36l-1.76 1.893c-.499 .601 -.922 1.003 -1.27 1.205a2.968 2.968 0 0 1 -4.07 -1.098a3.011 3.011 0 0 1 1.09 -4.098c.374 -.218 .99 -.396 1.846 -.536l2.664 -.366l-2.4 -.325c-.995 -.145 -1.698 -.337 -2.11 -.576a3.011 3.011 0 0 1 -1.09 -4.099a2.968 2.968 0 0 1 4.07 -1.099c.348 .203 .771 .604 1.27 1.205l1.76 1.894c-1 -2.292 -1.5 -3.625 -1.5 -4a3 3 0 0 1 3 -3z\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'arrow-curve'\"\n  width=\"11\"\n  height=\"61\"\n  [attr.viewBox]=\"viewBox || '0 0 11 61'\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M9.09795 59.6018L9.5181 59.3308L9.5181 59.3308L9.09795 59.6018ZM10 61L9.71509 55.2335L4.86364 58.3635L10 61ZM9.58839 0.716134C-2.63574 18.4411 -2.99499 41.7801 8.6778 59.8729L9.5181 59.3308C-1.93569 41.5774 -1.58318 18.6763 10.4116 1.28387L9.58839 0.716134Z\"\n    fill=\"#43FFD2\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'arrow-right'\"\n  preserveAspectRatio=\"xMinYMin\"\n  width=\"80\"\n  height=\"6\"\n  [attr.viewBox]=\"viewBox || '0 0 80 6'\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M80 3L75 0.113249V5.88675L80 3ZM0 3.5L75.5 3.5V2.5L0 2.5L0 3.5Z\"\n    [attr.fill]=\"pathFill || '#43FFD2'\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'cart'\"\n  width=\"26\"\n  height=\"23\"\n  viewBox=\"0 0 26 23\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M25.538 21.2201L23.8715 6.22006C23.8336 5.87597 23.67 5.558 23.412 5.32713C23.1541 5.09626 22.82 4.96876 22.4738 4.96908H18.1343C18.0175 3.68823 17.426 2.49732 16.4761 1.63016C15.5263 0.763 14.2865 0.282227 13.0004 0.282227C11.7142 0.282227 10.4745 0.763 9.52457 1.63016C8.57468 2.49732 7.98325 3.68823 7.86637 4.96908H3.52692C3.18075 4.96876 2.84665 5.09626 2.5887 5.32713C2.33076 5.558 2.16714 5.87597 2.12922 6.22006L0.4627 21.2201C0.440864 21.4166 0.460731 21.6156 0.521006 21.8039C0.581281 21.9923 0.680606 22.1658 0.812498 22.3132C0.94439 22.4605 1.10588 22.5784 1.28643 22.6591C1.46697 22.7398 1.66251 22.7816 1.86028 22.7816H24.1403C24.3381 22.7816 24.5336 22.7399 24.7142 22.6592C24.8948 22.5785 25.0563 22.4606 25.1882 22.3132C25.3201 22.1658 25.4194 21.9923 25.4797 21.804C25.54 21.6156 25.5599 21.4166 25.538 21.2201ZM13.0004 1.21908C14.0376 1.22046 15.0381 1.60342 15.8112 2.29499C16.5843 2.98655 17.0759 3.93838 17.1924 4.96908H8.80832C8.9248 3.93838 9.41643 2.98655 10.1895 2.29499C10.9626 1.60342 11.9631 1.22046 13.0004 1.21908ZM24.4897 21.688C24.4459 21.7374 24.3922 21.7769 24.3319 21.8038C24.2717 21.8307 24.2064 21.8445 24.1404 21.8441H1.86028C1.79436 21.8441 1.72918 21.8302 1.669 21.8033C1.60882 21.7763 1.55499 21.737 1.51103 21.6879C1.46707 21.6388 1.43396 21.5809 1.41388 21.5182C1.39379 21.4554 1.38717 21.3891 1.39446 21.3235L3.0611 6.32354C3.07374 6.20886 3.12828 6.10289 3.21424 6.02594C3.30021 5.949 3.41155 5.90649 3.52692 5.90658H7.84411V9.18783C7.84411 9.31215 7.89349 9.43138 7.9814 9.51929C8.06931 9.6072 8.18854 9.65658 8.31286 9.65658C8.43718 9.65658 8.55641 9.6072 8.64431 9.51929C8.73222 9.43138 8.78161 9.31215 8.78161 9.18783V5.90658H17.2191V9.18783C17.2191 9.31215 17.2685 9.43138 17.3564 9.51929C17.4443 9.6072 17.5635 9.65658 17.6879 9.65658C17.8122 9.65658 17.9314 9.6072 18.0193 9.51929C18.1072 9.43138 18.1566 9.31215 18.1566 9.18783V5.90658H22.4738C22.5892 5.90649 22.7005 5.949 22.7865 6.02594C22.8724 6.10289 22.927 6.20886 22.9396 6.32354L24.6063 21.3235C24.6139 21.3891 24.6075 21.4555 24.5873 21.5184C24.5672 21.5812 24.5339 21.639 24.4897 21.688Z\"\n    fill=\"white\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'handset'\"\n  width=\"13\"\n  height=\"13\"\n  viewBox=\"0 0 13 13\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M11.9997 12.6667C12.551 12.6667 12.9997 12.218 12.9997 11.6667V9.33333C12.9997 8.782 12.551 8.33333 11.9997 8.33333C11.2197 8.33333 10.453 8.21067 9.71968 7.96867C9.54438 7.91331 9.35735 7.90659 9.17853 7.94921C8.99971 7.99183 8.83582 8.08219 8.70434 8.21067L7.74434 9.17067C6.08508 8.26988 4.72236 6.90762 3.82101 5.24867L4.77301 4.29067C5.04767 4.036 5.14634 3.64867 5.02901 3.276C4.7875 2.54153 4.66506 1.77315 4.66634 1C4.66634 0.448667 4.21767 0 3.66634 0H1.33301C0.781674 0 0.333008 0.448667 0.333008 1C0.333008 7.43333 5.56634 12.6667 11.9997 12.6667ZM1.33301 0.666667H3.66634C3.75475 0.666667 3.83953 0.701786 3.90204 0.764298C3.96456 0.82681 3.99967 0.911595 3.99967 1C3.99967 1.85133 4.13301 2.68733 4.39501 3.48C4.41426 3.53752 4.41651 3.59937 4.40149 3.65814C4.38647 3.71691 4.35483 3.7701 4.31034 3.81133L3.00634 5.122C4.09767 7.274 5.70967 8.886 7.87167 9.98667L9.17101 8.68667C9.21534 8.64279 9.27078 8.6118 9.33137 8.597C9.39196 8.58221 9.45544 8.58417 9.51501 8.60267C10.3123 8.86667 11.1483 9 11.9997 9C12.183 9 12.333 9.15 12.333 9.33333V11.6667C12.333 11.85 12.183 12 11.9997 12C5.93434 12 0.999674 7.06533 0.999674 1C0.999674 0.911595 1.03479 0.82681 1.09731 0.764298C1.15982 0.701786 1.2446 0.666667 1.33301 0.666667Z\"\n    fill=\"#43FFD2\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'instagram'\"\n  width=\"25\"\n  height=\"25\"\n  viewBox=\"0 0 25 25\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M12.4884 8.32593C10.1947 8.32593 8.3228 10.1978 8.3228 12.4916C8.3228 14.7853 10.1947 16.6572 12.4884 16.6572C14.7822 16.6572 16.6541 14.7853 16.6541 12.4916C16.6541 10.1978 14.7822 8.32593 12.4884 8.32593ZM24.9822 12.4916C24.9822 10.7666 24.9978 9.05718 24.9009 7.3353C24.8041 5.3353 24.951 2.95371 23.4885 1.49121C22.0229 0.0255859 19.6478 0.179054 17.6478 0.0821795C15.9228 -0.0146955 14.2134 0.000929513 12.4916 0.000929513C10.7666 0.000929513 9.05718 -0.0146955 7.3353 0.0821795C5.3353 0.179054 2.95103 0.028711 1.48853 1.49121C0.0229003 2.95684 0.179054 5.3353 0.0821795 7.3353C-0.0146955 9.0603 0.000929513 10.7697 0.000929513 12.4916C0.000929513 14.2134 -0.0146955 15.9259 0.0821795 17.6478C0.179054 19.6478 0.0260254 22.0287 1.48853 23.4912C2.95415 24.9568 5.3353 24.8041 7.3353 24.9009C9.0603 24.9978 10.7697 24.9822 12.4916 24.9822C14.2166 24.9822 15.9259 24.9978 17.6478 24.9009C19.6478 24.8041 22.026 24.9537 23.4885 23.4912C24.9542 22.0256 24.8041 19.6478 24.9009 17.6478C25.0009 15.9259 24.9822 14.2166 24.9822 12.4916ZM12.4884 18.9009C8.94155 18.9009 6.07905 16.0384 6.07905 12.4916C6.07905 8.94468 8.94155 6.08218 12.4884 6.08218C16.0353 6.08218 18.8978 8.94468 18.8978 12.4916C18.8978 16.0384 16.0353 18.9009 12.4884 18.9009ZM19.1603 7.31655C18.3322 7.31655 17.6634 6.6478 17.6634 5.81968C17.6634 4.99155 18.3322 4.3228 19.1603 4.3228C19.9884 4.3228 20.6572 4.99155 20.6572 5.81968C20.6574 6.01632 20.6189 6.21108 20.5437 6.3928C20.4686 6.57452 20.3584 6.73963 20.2193 6.87868C20.0803 7.01773 19.9151 7.12798 19.7334 7.20311C19.5517 7.27825 19.3569 7.3168 19.1603 7.31655Z\"\n    fill=\"#43FFD2\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'logo'\"\n  width=\"34\"\n  height=\"50\"\n  viewBox=\"0 5 34 55\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M10.68 43.9C10.68 45.06 10.8 45.92 11.04 46.48C11.32 47 11.8 47.36 12.48 47.56C13.2 47.76 14.32 47.86 15.84 47.86H23.52C27.48 47.86 29.82 45.32 30.54 40.24C30.54 40.12 30.64 40.08 30.84 40.12C31.08 40.12 31.2 40.18 31.2 40.3C30.84 43.46 30.66 46.06 30.66 48.1C30.66 48.42 30.6 48.66 30.48 48.82C30.36 48.94 30.12 49 29.76 49H2.16C2.08 49 2.04 48.88 2.04 48.64C2.04 48.4 2.08 48.28 2.16 48.28C3.72 48.28 4.86 48.18 5.58 47.98C6.34 47.78 6.84 47.4 7.08 46.84C7.36 46.24 7.5 45.34 7.5 44.14V16.36C7.5 15.16 7.36 14.28 7.08 13.72C6.84 13.16 6.34 12.78 5.58 12.58C4.86 12.34 3.72 12.22 2.16 12.22C2.08 12.22 2.04 12.1 2.04 11.86C2.04 11.62 2.08 11.5 2.16 11.5L5.1 11.56C6.78 11.64 8.1 11.68 9.06 11.68C10.14 11.68 11.52 11.64 13.2 11.56L16.02 11.5C16.1 11.5 16.14 11.62 16.14 11.86C16.14 12.1 16.1 12.22 16.02 12.22C14.46 12.22 13.3 12.34 12.54 12.58C11.82 12.78 11.32 13.18 11.04 13.78C10.8 14.34 10.68 15.22 10.68 16.42V43.9Z\"\n    fill=\"#8A8686\"\n  />\n  <path\n    d=\"M30.55 28.25C30.55 28.35 30.45 28.4 30.25 28.4C30.0833 28.4 30 28.35 30 28.25C30 26.55 29.55 25.2 28.65 24.2C27.75 23.2 26.5667 22.7 25.1 22.7H21.65C20.4167 22.7 19.5 22.7833 18.9 22.95C18.3 23.1167 17.8833 23.4167 17.65 23.85C17.4167 24.2833 17.3 24.95 17.3 25.85V36.85H22.75C24.45 36.85 25.65 36.6 26.35 36.1C27.05 35.5667 27.4 34.6667 27.4 33.4C27.4 33.3333 27.5 33.3 27.7 33.3C27.9 33.3 28 33.3333 28 33.4L27.95 37.35C27.95 38.3167 27.9667 39.0333 28 39.5L28.05 41.85C28.05 41.9167 27.95 41.95 27.75 41.95C27.55 41.95 27.45 41.9167 27.45 41.85C27.45 40.35 27.0833 39.3 26.35 38.7C25.65 38.1 24.3833 37.8 22.55 37.8H17.3V48.75C17.3 49.8167 17.45 50.6 17.75 51.1C18.05 51.5667 18.6167 51.9 19.45 52.1C20.3167 52.3 21.6833 52.4 23.55 52.4C23.65 52.4 23.7 52.5 23.7 52.7C23.7 52.9 23.65 53 23.55 53C22.1833 53 21.1167 52.9833 20.35 52.95L16 52.9L12.7 52.95C12.1 52.9833 11.2667 53 10.2 53C10.1333 53 10.1 52.9 10.1 52.7C10.1 52.5 10.1333 52.4 10.2 52.4C11.5 52.4 12.45 52.3167 13.05 52.15C13.6833 51.9833 14.1 51.6667 14.3 51.2C14.5333 50.7 14.65 49.95 14.65 48.95V25.8C14.65 24.8 14.5333 24.0667 14.3 23.6C14.1 23.1333 13.6833 22.8167 13.05 22.65C12.45 22.45 11.5 22.35 10.2 22.35C10.1333 22.35 10.1 22.25 10.1 22.05C10.1 21.85 10.1333 21.75 10.2 21.75H30C30.3 21.75 30.45 21.9 30.45 22.2L30.55 28.25Z\"\n    fill=\"white\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'phone'\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M19.9902 24H3.99023C1.99023 24 1.46365 23.707 0.878289 23.1211C0.292923 22.5352 -0.00976562 22 0.000240437 20V4C0.000240437 2 0.292923 1.46484 0.878289 0.878906C1.46365 0.292969 1.99023 0 3.99023 0H19.9902C20.8175 0 22.0036 0.0124413 22.9902 1C23.9768 1.98756 23.9768 3.17188 23.9768 4V20C23.9902 22 23.6841 22.5352 23.0988 23.1211C22.5134 23.707 21.9902 24 19.9902 24ZM7.49292 9V6.75C7.49292 6.32812 7.36414 5.91406 7.10658 5.50781C6.84902 5.10156 6.56414 4.8125 6.25195 4.64062C5.93975 4.46875 5.6978 4.46094 5.52609 4.61719L3.81683 6.35156C3.34853 6.82031 3.08317 7.44922 3.02073 8.23828C2.95829 9.02734 3.07926 9.88672 3.38366 10.8164C3.68805 11.7461 4.17585 12.7305 4.84707 13.7695C5.51829 14.8086 6.32219 15.7969 7.25878 16.7344C8.19536 17.6719 9.18268 18.4766 10.2207 19.1484C11.2588 19.8203 12.2422 20.3125 13.171 20.625C14.0998 20.9375 14.9583 21.0625 15.7466 21C16.5349 20.9375 17.1632 20.6719 17.6315 20.2031L19.3641 18.4688C19.5202 18.3125 19.5124 18.0742 19.3407 17.7539C19.169 17.4336 18.8802 17.1445 18.4744 16.8867C18.0685 16.6289 17.6549 16.5 17.2334 16.5H14.9856L13.4637 17.4375C12.7612 17.25 11.8949 16.7422 10.8646 15.9141C9.83439 15.0859 8.90561 14.1562 8.07829 13.125C7.25097 12.0938 6.74365 11.2266 6.55634 10.5234L7.49292 9ZM16.4373 12.75L17.9593 13.0078C17.8344 11.1328 17.1085 9.53125 15.7817 8.20312C14.4549 6.875 12.8627 6.14844 11.0051 6.02344L11.2393 7.54688C12.5973 7.71875 13.7602 8.28906 14.728 9.25781C15.6959 10.2266 16.2656 11.3906 16.4373 12.75ZM11.5202 9.11719L11.8012 10.8047C12.41 11.1016 12.8705 11.5625 13.1827 12.1875L14.8685 12.4688C14.6656 11.6406 14.2637 10.9258 13.6627 10.3242C13.0617 9.72266 12.3476 9.32031 11.5202 9.11719ZM10.49 3L10.7476 4.52344C12.3085 4.55469 13.7485 4.96484 15.0676 5.75391C16.3866 6.54297 17.4402 7.59766 18.2285 8.91797C19.0168 10.2383 19.4266 11.6797 19.4578 13.2422L20.9798 13.5C20.9798 12.0781 20.7027 10.7188 20.1485 9.42188C19.5944 8.125 18.849 7.00781 17.9124 6.07031C16.9759 5.13281 15.8598 4.38672 14.5641 3.83203C13.2685 3.27734 11.9105 3 10.49 3Z\"\n    fill=\"#43FFD2\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'search'\"\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M14.9489 14.5509L11.7239 11.326C12.8154 10.1308 13.3957 8.55591 13.3407 6.93829C13.2857 5.32068 12.5998 3.78882 11.4297 2.67051C10.2597 1.5522 8.69835 0.936262 7.0799 0.954495C5.46145 0.972728 3.91441 1.62368 2.76982 2.76807C1.62523 3.91246 0.974004 5.45938 0.955484 7.07783C0.936965 8.69627 1.55263 10.2577 2.67073 11.428C3.78883 12.5982 5.32057 13.2844 6.93818 13.3397C8.55578 13.395 10.1308 12.8149 11.3261 11.7237L14.5512 14.9488C14.6039 15.0015 14.6755 15.0311 14.7501 15.0311C14.8247 15.0311 14.8962 15.0014 14.9489 14.9487C15.0017 14.8959 15.0313 14.8244 15.0313 14.7498C15.0313 14.6752 15.0016 14.6037 14.9489 14.5509ZM1.53175 7.15602C1.53175 6.0435 1.86165 4.95597 2.47974 4.03094C3.09782 3.10591 3.97632 2.38494 5.00416 1.9592C6.03199 1.53346 7.16299 1.42206 8.25413 1.6391C9.34528 1.85615 10.3476 2.39188 11.1342 3.17855C11.9209 3.96522 12.4566 4.9675 12.6737 6.05864C12.8907 7.14978 12.7793 8.28078 12.3536 9.30862C11.9278 10.3365 11.2069 11.215 10.2818 11.833C9.35681 12.4511 8.26927 12.781 7.15675 12.781C5.66542 12.7793 4.23566 12.1862 3.18113 11.1316C2.1266 10.0771 1.53343 8.64735 1.53175 7.15602Z\"\n    fill=\"white\"\n  />\n</svg>\n\n<svg\n  *ngIf=\"icon === 'whatsapp'\"\n  width=\"25\"\n  height=\"25\"\n  viewBox=\"0 0 25 25\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  [ngClass]=\"{\n    'width-full': width === 'full',\n    'height-full': height === 'full'\n  }\"\n>\n  <path\n    d=\"M24.5716 5.91128C24.5615 5.39288 24.52 4.87556 24.4471 4.3622C24.3603 3.90557 24.2128 3.46262 24.0085 3.04512C23.5612 2.16219 22.8442 1.44477 21.9616 0.996992C21.5468 0.793645 21.1067 0.646542 20.653 0.559576C20.1357 0.485242 19.6143 0.44287 19.0918 0.432701C18.8707 0.424242 18.5843 0.420617 18.4514 0.420617L6.5517 0.416992C6.41879 0.416992 6.13241 0.420617 5.91128 0.429076C5.39287 0.439064 4.87556 0.480627 4.3622 0.553534C3.90557 0.64034 3.46262 0.787858 3.04512 0.992159C2.16224 1.43948 1.44484 2.15646 0.996992 3.03908C0.793698 3.45391 0.646598 3.894 0.559576 4.3477C0.484904 4.86497 0.442129 5.38634 0.431492 5.90887C0.424242 6.12999 0.419409 6.41637 0.419409 6.54928L0.416992 18.4489C0.416992 18.5819 0.420617 18.8682 0.429076 19.0894C0.439064 19.6078 0.480627 20.1251 0.553534 20.6385C0.640354 21.0951 0.787871 21.538 0.992159 21.9555C1.43948 22.8384 2.15646 23.5558 3.03908 24.0037C3.45393 24.2069 3.894 24.354 4.3477 24.4411C4.86499 24.5154 5.38637 24.5578 5.90887 24.5679C6.12999 24.5764 6.41637 24.58 6.54928 24.58L18.449 24.5824C18.5819 24.5824 18.8682 24.5788 19.0894 24.5704C19.6078 24.5603 20.1251 24.5188 20.6385 24.4459C21.0951 24.359 21.538 24.2115 21.9555 24.0073C22.8389 23.5602 23.5567 22.8432 24.0049 21.9604C24.2082 21.5455 24.3553 21.1055 24.4423 20.6517C24.517 20.1345 24.5598 19.6131 24.5704 19.0906C24.5776 18.8694 24.5825 18.5831 24.5825 18.4502L24.5837 6.5517C24.5837 6.41878 24.58 6.13241 24.5716 5.91128ZM12.7625 20.9067H12.7589C11.3206 20.9064 9.90524 20.5458 8.64212 19.8579L4.07462 21.0553L5.29745 16.5929C4.35067 14.95 3.97236 13.0406 4.22119 11.1607C4.47002 9.28091 5.33208 7.53568 6.67371 6.19564C8.01535 4.8556 9.7616 3.99562 11.6417 3.74903C13.5219 3.50243 15.4308 3.88301 17.0727 4.83175C18.7145 5.78049 19.9974 7.24439 20.7226 8.99647C21.4478 10.7486 21.5747 12.691 21.0836 14.5225C20.5925 16.354 19.5109 17.9724 18.0064 19.1267C16.502 20.2809 14.6588 20.9066 12.7625 20.9067Z\"\n    fill=\"#43FFD2\"\n  />\n  <path\n    d=\"M12.7664 5.13011C11.4869 5.12974 10.2306 5.47217 9.12829 6.12178C8.02594 6.77139 7.11775 7.70447 6.49817 8.82398C5.87859 9.94349 5.57025 11.2085 5.60521 12.4876C5.64017 13.7666 6.01716 15.013 6.69697 16.0969L6.86734 16.3676L6.14355 19.009L8.85384 18.2985L9.11484 18.4532C10.2182 19.1066 11.4769 19.4514 12.7592 19.4513H12.7628C14.6621 19.4516 16.4837 18.6974 17.8269 17.3547C19.1701 16.0119 19.9249 14.1906 19.9252 12.2913C19.9255 10.392 19.1713 8.57043 17.8286 7.22722C16.4858 5.88401 14.6645 5.12923 12.7652 5.12891L12.7664 5.13011ZM16.9763 15.3647C16.8179 15.6263 16.6071 15.8522 16.3571 16.0284C16.1072 16.2045 15.8234 16.327 15.5238 16.3882C15.0715 16.4657 14.6073 16.4368 14.1681 16.3036C13.7516 16.1738 13.3422 16.0221 12.9416 15.8492C11.4551 15.1032 10.188 13.9835 9.26467 12.6C8.76101 11.9596 8.45528 11.186 8.38501 10.3743C8.3792 10.0392 8.44325 9.70664 8.57307 9.3977C8.70288 9.08876 8.89562 8.81025 9.13901 8.57991C9.21094 8.49785 9.29905 8.43156 9.39782 8.38519C9.4966 8.33882 9.60389 8.31337 9.71297 8.31045C9.85555 8.31045 9.99934 8.31045 10.125 8.3177C10.2579 8.32374 10.4343 8.26695 10.6083 8.68745C10.7896 9.11762 11.2198 10.1773 11.2729 10.2849C11.3071 10.3412 11.3266 10.4052 11.3297 10.4711C11.3329 10.5369 11.3196 10.6025 11.291 10.6619C11.2368 10.7911 11.1644 10.912 11.076 11.0207C10.9672 11.1464 10.85 11.3011 10.7533 11.3977C10.6446 11.5053 10.5334 11.6213 10.6579 11.8364C10.9811 12.3898 11.3847 12.8923 11.8553 13.3274C12.366 13.7815 12.952 14.1429 13.5869 14.3956C13.802 14.5044 13.9276 14.485 14.0533 14.3412C14.179 14.1974 14.591 13.7129 14.7348 13.4978C14.8786 13.2827 15.0212 13.319 15.2181 13.3903C15.4151 13.4616 16.4748 13.9824 16.6899 14.0911C16.905 14.1999 17.0488 14.2518 17.1019 14.3412C17.1609 14.6873 17.1172 15.0431 16.9763 15.3647Z\"\n    fill=\"#43FFD2\"\n  />\n</svg>\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-26bb8cb7a2380c01cff2f15c0aa210ad2b58d812c409d510a809caf0e5c9ff4adb7cfba2954f46304e30c865a8b580c488d7ad033da65fe3ca24b9346464c874",
            "file": "src/app/components/loader/loader.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "defaultValue": "'Загрузка'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent {\n  @Input() text = 'Загрузка';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.loader {\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: rgb($color: $color-5, $alpha: 1);\r\n\r\n  &__icon {\r\n    max-width: 70px;\r\n    margin: 0 auto 5px;\r\n    color: $color-1;\r\n    transform: rotateZ(0deg);\r\n    transition: opacity 1s;\r\n    animation: rotationAmin 1.5s linear infinite;\r\n  }\r\n\r\n  &__text {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n}\r\n\r\n@keyframes rotationAmin {\r\n  from {\r\n    transform: rotateZ(0deg);\r\n  }\r\n  to {\r\n    transform: rotateZ(180deg);\r\n  }\r\n}\r\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"loader\">\n  <app-icon class=\"loader__icon\" icon=\"flower\"></app-icon>\n\n  <p class=\"loader__text\" *ngIf=\"text\" data-test=\"loaderText\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-1d2d0f89ffb814d47229ddd9b64affe4418d88c498721181098cfb786372a73004b03efc437ef4a9712f2215837d393c23c4533bee756f7b548103f242f0413d",
            "file": "src/app/pages/main/component/main.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.shared-bg-1 {\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    left: -15px;\r\n    width: 638px;\r\n    height: 928px;\r\n    background-image: image-set(\r\n      url('/assets/images/pages/main/branch-bg.webp') type('image/webp'),\r\n      url('/assets/images/pages/main/branch-bg.png')\r\n    );\r\n    background-position: left top;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    pointer-events: none;\r\n    transform: rotateZ(0);\r\n    transform-origin: left center;\r\n    animation: oscillationAnim 4s ease-in-out alternate infinite;\r\n  }\r\n}\r\n\r\n@keyframes oscillationAnim {\r\n  from {\r\n    transform: rotateZ(1deg);\r\n  }\r\n  to {\r\n    transform: rotateZ(-2deg);\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .shared-bg-1 {\r\n    &::after {\r\n      left: -50px;\r\n      width: 780px;\r\n      height: 936px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .shared-bg-1 {\r\n    &::after {\r\n      content: none;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-hero-section></app-hero-section>\n\n<app-catalog-section></app-catalog-section>\n\n<app-popular-section></app-popular-section>\n\n<app-how-to-order-section></app-how-to-order-section>\n\n<app-special-section></app-special-section>\n\n<div class=\"shared-bg-1\">\n  <app-questions-section></app-questions-section>\n  <app-social-section></app-social-section>\n</div>\n"
        },
        {
            "name": "MainContainerComponent",
            "id": "component-MainContainerComponent-eb6a8233be760dcf28614c96b10bc85b2179bd676aff8a8f75adc6a5e7b7e318f3e7967144d3c84346be7e1382c0d69d6e6f92b5c663d13121c8597ae45bf192",
            "file": "src/app/pages/main/main-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./main-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-main-container',\n  templateUrl: './main-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainContainerComponent {\n  constructor(private meta: Meta) {\n    this.setMeta();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-main></app-main>\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-0e45f21fa2d6e45ce5a7d8e77900ae2f5a2c3898a47144bd4f18bd9c8103d9abc72a261cb0c442c639f87abe58af80f39b760db95760e1aeef59c24cb722b31c",
            "file": "src/app/pages/not-found/not-found.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { pageData } from '~pages/not-found/data/pageData';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotFoundComponent {\n  public data = pageData;\n\n  constructor(private meta: Meta) {\n    this.setMeta();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.not-found {\r\n  position: relative;\r\n  padding-top: 80px;\r\n  padding-bottom: 93px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 64%;\r\n    max-width: 1100px;\r\n    height: 100%;\r\n    background-image: image-set(\r\n      url('/assets/images/pages/not-found/blue-flower.webp') type('image/webp'),\r\n      url('/assets/images/pages/not-found/blue-flower.png')\r\n    );\r\n    background-position: left center;\r\n    background-size: 83% auto;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    position: relative;\r\n\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/not-found/blue-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -438px;\r\n        top: -435px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/not-found/blue-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -472px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/not-found/blue-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -369px;\r\n        bottom: -367px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/not-found/blue-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-top: 60vh;\r\n    position: relative;\r\n  }\r\n\r\n  &__decor-text {\r\n    font-family: 'Cormorant', sans-serif;\r\n    font-size: 600px;\r\n  }\r\n}\r\n\r\n.decor-text {\r\n  &__letter {\r\n    background: linear-gradient(180deg, #163d8f 0%, #163d8f 0%, #4f6cab 54.69%, #b6cdff 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    background-clip: text;\r\n    color: transparent;\r\n  }\r\n}\r\n\r\n.letter-1 {\r\n  position: absolute;\r\n  top: -0.5em;\r\n  left: 0;\r\n}\r\n\r\n.letter-2 {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0.5em;\r\n  z-index: 3;\r\n}\r\n\r\n.letter-3 {\r\n  position: absolute;\r\n  top: -0.3em;\r\n  left: 1em;\r\n}\r\n\r\n.container-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.wrapper-text {\r\n  margin-left: auto;\r\n  &__title {\r\n    margin-bottom: 20px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__paragraph {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__link {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .letter-1 {\r\n    font-size: 400px;\r\n    left: 0.3em;\r\n  }\r\n\r\n  .letter-2 {\r\n    font-size: 400px;\r\n    left: 0.8em;\r\n  }\r\n\r\n  .letter-3 {\r\n    font-size: 400px;\r\n    left: 1.3em;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .letter-1 {\r\n    font-size: 300px;\r\n    left: 0.3em;\r\n  }\r\n\r\n  .letter-2 {\r\n    font-size: 300px;\r\n    left: 0.8em;\r\n  }\r\n\r\n  .letter-3 {\r\n    font-size: 300px;\r\n    left: 1.3em;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .not-found {\r\n    &::after {\r\n      width: 103%;\r\n    }\r\n\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  .letter-1 {\r\n    top: 0;\r\n    left: 0.1em;\r\n    font-size: 200px;\r\n  }\r\n\r\n  .letter-2 {\r\n    left: 0.6em;\r\n    top: 0.5em;\r\n    font-size: 200px;\r\n  }\r\n\r\n  .letter-3 {\r\n    top: 0.2em;\r\n    left: 1.1em;\r\n    font-size: 200px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"not-found\">\n  <div class=\"not-found__decor-color-bg-1\"></div>\n  <div class=\"not-found__decor-color-bg-2\"></div>\n\n  <div class=\"not-found__container container\">\n    <p class=\"not-found__decor-text decor-text\">\n      <span class=\"decor-text__letter letter-1\">{{ data.title.part }}</span>\n\n      <span class=\"decor-text__letter letter-2\">{{ data.title.part2 }}</span>\n\n      <span class=\"decor-text__letter letter-3\">{{ data.title.part3 }}</span>\n    </p>\n\n    <div class=\"not-found__container-text container-text\">\n      <div class=\"not-found__wrapper-text wrapper-text\">\n        <h1 class=\"wrapper-text__title text-uppercase\">{{ data.text }}</h1>\n\n        <p class=\"wrapper-text__paragraph text-uppercase\">\n          {{ data.text2 }}\n        </p>\n\n        <a\n          routerLink=\"/\"\n          routerLinkActive=\"router-link-active\"\n          class=\"wrapper-text__link text-uppercase text-color--1\"\n          >{{ data.link }}</a\n        >\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NotificationsComponent",
            "id": "component-NotificationsComponent-f3c932d7cba1069868acae682d89a30d166e264d3d54580de61a5efd3036def0c2fc2e50f3ccdc8fa2c2610de06f6a25670ddc286205c5e33ded881a402cd25a",
            "file": "src/app/components/notifications/notifications.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notifications",
            "styleUrls": [
                "./notifications.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notifications.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "notifications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "INotifyWithId[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "emitHideAll",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isNotificationExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isVisibleRemoveButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "notificationsList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INotifyWithId[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerCloseNotify",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerHideAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "trackById",
                    "args": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "notify",
                            "type": "INotifyWithId",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notify",
                            "type": "INotifyWithId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { INotifyWithId } from 'src/app/store/notifications/notifications.reducer';\nimport { enterLeaveAnimation } from '~animations/enter-leave-animation';\nimport { expandAnimation } from '~animations/expand-animation';\nimport { fadeAnimation } from '~animations/fade-animation';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss'],\n  animations: [enterLeaveAnimation, fadeAnimation, expandAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationsComponent {\n  protected isNotificationExists = false;\n  protected isVisibleRemoveButton = false;\n  protected notificationsList: INotifyWithId[] = [];\n  @Input() set notifications(notifications: INotifyWithId[]) {\n    this.notificationsList = notifications;\n    this.isVisibleRemoveButton = notifications.length > 1;\n    this.isNotificationExists = !!notifications.length;\n  }\n  @Output() emitHide: EventEmitter<INotifyWithId['id']> = new EventEmitter();\n  @Output() emitHideAll: EventEmitter<void> = new EventEmitter();\n\n  protected handlerCloseNotify(id: INotifyWithId['id']): void {\n    this.emitHide.emit(id);\n  }\n\n  protected handlerHideAll(): void {\n    this.emitHideAll.emit();\n  }\n\n  protected trackById(_: number, notify: INotifyWithId): INotifyWithId['id'] {\n    return notify.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.notifications {\r\n  z-index: 10;\r\n  position: fixed;\r\n  max-height: 100vh;\r\n  right: 30px;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 350px;\r\n  padding: 5px;\r\n\r\n  &__wrapper-list {\r\n    overflow-y: auto;\r\n  }\r\n\r\n  &__notify-item:not(:last-of-type) {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &__wrapper-btn {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  &__btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .notifications {\r\n    width: 300px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .notifications {\r\n    width: 250px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .notifications {\r\n    width: 200px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./notifications.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "notifications": {
                    "name": "notifications",
                    "setSignature": {
                        "name": "notifications",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "notifications",
                                "type": "INotifyWithId[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "notifications",
                                "type": "INotifyWithId[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div\n  class=\"notifications\"\n  *ngIf=\"isNotificationExists\"\n  [@fadeAnimation]\n  (click)=\"handlerHideAll()\"\n  (mouseenter)=\"handlerHideAll()\"\n  data-test=\"wrapper\"\n>\n  <div class=\"notifications__wrapper-list\">\n    <ul class=\"list-reset\">\n      <li\n        class=\"notifications__notify-item notify-item\"\n        *ngFor=\"let notify of notificationsList; trackBy: trackById\"\n        [@enterLeaveAnimation]\n      >\n        <app-notify\n          [notify]=\"notify\"\n          (emitClose)=\"handlerCloseNotify(notify.id)\"\n          data-test=\"notify\"\n        ></app-notify>\n      </li>\n    </ul>\n  </div>\n\n  <div\n    class=\"notifications__wrapper-btn\"\n    *ngIf=\"isVisibleRemoveButton\"\n    [@fadeAnimation]\n    [@expandAnimation]\n  >\n    <button\n      class=\"text-uppercase notifications__btn\"\n      appUiButton=\"3\"\n      [@expandAnimation]\n      data-test=\"buttonHideAll\"\n    >\n      скрыть все\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "NotificationsContainerComponent",
            "id": "component-NotificationsContainerComponent-2a20e2ead0f13aa1b2a0737b6f36bc51c07f031b885bbb3037b2ecb4b2d29a65446799f7009f4b8c25993fd373bd264245a1b1b81e540d45aa99a5a79d549933",
            "file": "src/app/containers/notifications-container/notifications-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notifications-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notifications-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notifications$",
                    "defaultValue": "this.notificationsService.getNotifications()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<INotifyWithId[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerNotifyClose",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerNotifyCloseAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NotificationsService } from 'src/app/services/notifications/notifications.service';\nimport { INotifyWithId } from 'src/app/store/notifications/notifications.reducer';\n\n@Component({\n  selector: 'app-notifications-container',\n  templateUrl: './notifications-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationsContainerComponent {\n  protected notifications$: Observable<INotifyWithId[]> =\n    this.notificationsService.getNotifications();\n\n  constructor(private notificationsService: NotificationsService) {}\n\n  protected handlerNotifyClose(id: INotifyWithId['id']) {\n    this.notificationsService.remove(id);\n  }\n\n  protected handlerNotifyCloseAll(): void {\n    this.notificationsService.removeAll();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "notificationsService",
                        "type": "NotificationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "notificationsService",
                        "type": "NotificationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-notifications\n  [notifications]=\"(notifications$ | async) || []\"\n  (emitHide)=\"handlerNotifyClose($event)\"\n  (emitHideAll)=\"handlerNotifyCloseAll()\"\n  data-test=\"notifications\"\n></app-notifications>\n"
        },
        {
            "name": "NotifyComponent",
            "id": "component-NotifyComponent-12fd7b8f2fdd048a66bf0b58ad483dde61a8b4acff81c67a846f19e4495422beb5b3df5bd890b9c24cd8aa75091181a2dcac17e9ff55d69e290cae45a5cb2052",
            "file": "src/app/components/notify/notify.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notify",
            "styleUrls": [
                "./notify.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notify.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "notify",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "INotify",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handlerClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { INotify } from './types';\n\n@Component({\n  selector: 'app-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotifyComponent {\n  @Input() notify: INotify;\n  @Output() emitClose: EventEmitter<null> = new EventEmitter();\n\n  protected handlerClose(): void {\n    this.emitClose.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.notify {\r\n  position: relative;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  border: 1px solid $color-1;\r\n\r\n  &--warn {\r\n    background-color: rgb($color-10, $alpha: 0.9);\r\n  }\r\n\r\n  &__btn {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    padding: 10px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 0;\r\n    color: $color-1;\r\n\r\n    &--mb {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .notify {\r\n    padding: 15px 25px 15px 15px;\r\n    font-size: 10px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .notify {\r\n    padding: 10px 25px 10px 10px;\r\n    font-size: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./notify.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"notify notify--warn\">\n  <button\n    class=\"notify__btn btn-reset btn-close\"\n    (click)=\"handlerClose()\"\n    data-test=\"buttonClose\"\n  ></button>\n\n  <div class=\"notify__wrapper-content\">\n    <h4\n      class=\"notify__title text-uppercase\"\n      [ngClass]=\"{ 'title--mb': notify.text }\"\n      *ngIf=\"notify.title\"\n      data-test=\"notifyTitle\"\n    >\n      {{ notify.title }}\n    </h4>\n\n    <p class=\"notify__text\" data-test=\"notifyDescr\">{{ notify.text }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "OrderComponent",
            "id": "component-OrderComponent-915ca89694e56cb981c8de2dda8bc387d313c9b2f4aebe6088dbcc63d08c29bc5791dffc6d943aab6127721d2d652a73c2407d81700003c06eb8237e69c055aa",
            "file": "src/app/pages/order/component/order.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order",
            "styleUrls": [
                "./order.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./order.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Cart | null",
                    "decorators": []
                },
                {
                    "name": "cartDiscount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "cartPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "cartProductCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitDeleteFromCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "emitProductCountChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "emitSubmitOrderForm",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter<IOrderData>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_cartDiscount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_cartPrice",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_promocodeDiscount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deliveryFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "deliveryPrice",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "houseControlValidators",
                    "defaultValue": "[Validators.required, empty]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isFormSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "minProductCount",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "orderForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "orderFormData",
                    "defaultValue": "{\n    user: {\n      firstName: '',\n      phone: '',\n      email: '',\n      recipient: {\n        firstName: '',\n        phone: ''\n      },\n      comment: ''\n    },\n    delivery: {\n      method: '',\n      street: '',\n      building: '',\n      house: '',\n      flat: '',\n      time: ''\n    },\n    payment: ''\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "orderIsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recipientFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectedDeliveryMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "streetControlValidators",
                    "defaultValue": "[Validators.required, empty]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeControlValidators",
                    "defaultValue": "[Validators.required, time]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "totalDiscount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalPrice",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changePriceWithDelivery",
                    "args": [
                        {
                            "name": "value",
                            "type": "\"courier\" | \"pickup\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "\"courier\" | \"pickup\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDeliveryFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "createOrderFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "createOrderFormGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "createRecipientFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "createUserFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 250,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerSubmitOrderForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "manageValidatorsDeliveryForm",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "productCountChange",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetOrderForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setTotalDiscount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setTotalPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToOrderLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToPromocodeDiscount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToResetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackByProductId",
                    "args": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateValAndValidatorsDelivery",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { enterLeaveAnimation } from '~animations/enter-leave-animation';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { expandAnimation } from 'src/app/animations/expand-animation';\nimport { fadeAnimation } from 'src/app/animations/fade-animation';\nimport { pageData } from '~pages/order/data/pageData';\nimport { Cart, ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { DeliveryService } from 'src/app/services/delivery/delivery.service';\nimport { OrderService } from 'src/app/services/order/order.service';\nimport { PromocodeService } from 'src/app/services/promocode/promocode.service';\nimport { empty } from 'src/app/validators/empty.validator';\nimport { time } from 'src/app/validators/time.validator';\nimport { IOrderData } from './types';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [expandAnimation, fadeAnimation, enterLeaveAnimation]\n})\nexport class OrderComponent implements OnInit {\n  public isFormSubmitted = false;\n  private _cartPrice = 0;\n  private _cartDiscount = 0;\n  private _promocodeDiscount = 0;\n  public data = pageData;\n  public minProductCount = 1;\n  public totalPrice = 0;\n  public deliveryPrice = 0;\n  public totalDiscount = 0;\n  public orderIsLoading = false;\n  public selectedDeliveryMethod: string;\n  private streetControlValidators = [Validators.required, empty];\n  private houseControlValidators = [Validators.required, empty];\n  private timeControlValidators = [Validators.required, time];\n\n  get promocodeDiscount(): number {\n    return this._promocodeDiscount;\n  }\n  set promocodeDiscount(value: number) {\n    this._promocodeDiscount = value;\n    this.setTotalDiscount();\n    this.setTotalPrice();\n  }\n\n  @Input() cart: Cart | null;\n  @Input() set cartDiscount(value: number) {\n    this._cartDiscount = value;\n    this.setTotalDiscount();\n    this.setTotalPrice();\n  }\n  get cartDiscount() {\n    return this._cartDiscount;\n  }\n  @Input() cartProductCount = 0;\n  @Input() set cartPrice(price: number) {\n    this._cartPrice = price;\n    this.setTotalPrice();\n  }\n  get cartPrice() {\n    return this._cartPrice;\n  }\n  @Output() emitSubmitOrderForm: EventEmitter<IOrderData> = new EventEmitter();\n  @Output() emitDeleteFromCart: EventEmitter<number> = new EventEmitter();\n  @Output() emitProductCountChange: EventEmitter<{\n    id: number;\n    count: number;\n  }> = new EventEmitter();\n  private orderFormData = {\n    user: {\n      firstName: '',\n      phone: '',\n      email: '',\n      recipient: {\n        firstName: '',\n        phone: ''\n      },\n      comment: ''\n    },\n    delivery: {\n      method: '',\n      street: '',\n      building: '',\n      house: '',\n      flat: '',\n      time: ''\n    },\n    payment: ''\n  };\n  private deliveryFormGroup: FormGroup;\n  private userFormGroup: FormGroup;\n  private recipientFormGroup: FormGroup;\n  public orderForm: FormGroup;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private deliveryService: DeliveryService,\n    private promocodeService: PromocodeService,\n    private orderService: OrderService\n  ) {\n    this.createOrderFormGroups();\n  }\n\n  ngOnInit(): void {\n    this.deliveryMethodControl?.valueChanges.subscribe((value) => {\n      this.changePriceWithDelivery(value);\n      this.manageValidatorsDeliveryForm(value);\n    });\n    this.subscribeToOrderLoading();\n    this.subscribeToPromocodeDiscount();\n  }\n\n  private createOrderFormGroups() {\n    this.deliveryFormGroup = this.createDeliveryFormGroup();\n    this.recipientFormGroup = this.createRecipientFormGroup();\n    this.userFormGroup = this.createUserFormGroup();\n    this.orderForm = this.createOrderFormGroup();\n  }\n\n  private createRecipientFormGroup() {\n    return this.fb.group({\n      firstName: this.orderFormData.user.recipient.firstName,\n      phone: [this.orderFormData.user.recipient.phone, [Validators.minLength(11)]]\n    });\n  }\n\n  private createUserFormGroup() {\n    return this.fb.group({\n      firstName: [this.orderFormData.user.firstName, [Validators.required, empty]],\n      phone: [this.orderFormData.user.phone, [Validators.required, Validators.minLength(11)]],\n      email: [this.orderFormData.user.email, [Validators.required, Validators.email]],\n      recipient: this.recipientFormGroup,\n      comment: [this.orderFormData.user.comment, [Validators.required, empty]]\n    });\n  }\n\n  private createDeliveryFormGroup() {\n    return this.fb.group({\n      method: [this.orderFormData.delivery.method, [Validators.required]],\n      street: [this.orderFormData.delivery.street, this.streetControlValidators],\n      building: this.orderFormData.delivery.building,\n      house: [this.orderFormData.delivery.house, this.houseControlValidators],\n      flat: this.orderFormData.delivery.flat,\n      time: [this.orderFormData.delivery.time, this.timeControlValidators]\n    });\n  }\n\n  private createOrderFormGroup() {\n    return this.fb.group({\n      user: this.userFormGroup,\n      delivery: this.deliveryFormGroup,\n      payment: [this.orderFormData.payment, Validators.required]\n    });\n  }\n\n  public get userNameControl() {\n    return this.userFormGroup.get('firstName');\n  }\n  public get userPhoneControl() {\n    return this.userFormGroup.get('phone');\n  }\n  public get userEmailControl() {\n    return this.userFormGroup.get('email');\n  }\n  public get recipientNameControl() {\n    return this.recipientFormGroup.get('firstName');\n  }\n  public get recipientPhoneControl() {\n    return this.recipientFormGroup.get('phone');\n  }\n  public get deliveryMethodControl() {\n    return this.deliveryFormGroup.get('method');\n  }\n  public get deliveryStreetControl() {\n    return this.deliveryFormGroup.get('street');\n  }\n  public get deliveryHouseControl() {\n    return this.deliveryFormGroup.get('house');\n  }\n  public get deliveryBuildingControl() {\n    return this.deliveryFormGroup.get('building');\n  }\n  public get deliveryTimeControl() {\n    return this.deliveryFormGroup.get('time');\n  }\n  public get deliveryFlatControl() {\n    return this.deliveryFormGroup.get('flat');\n  }\n  public get paymentControl() {\n    return this.orderForm.get('payment');\n  }\n  public get commentControl() {\n    return this.userFormGroup.get('comment');\n  }\n  public get isDeliveryByCourier(): boolean {\n    return this.deliveryMethodControl?.value === 'courier';\n  }\n\n  public changePriceWithDelivery(value: 'courier' | 'pickup'): void {\n    this.deliveryPrice = this.deliveryService.getPrice(value);\n    this.setTotalPrice();\n  }\n\n  private setTotalPrice(): void {\n    this.totalPrice = this.deliveryPrice + this.cartPrice - this.promocodeDiscount;\n  }\n\n  private setTotalDiscount(): void {\n    this.totalDiscount = this.promocodeDiscount + this.cartDiscount;\n  }\n\n  public handlerSubmitOrderForm() {\n    this.isFormSubmitted = true;\n\n    if (this.orderForm.invalid) {\n      return;\n    }\n    this.emitSubmitOrderForm.emit(this.orderForm.value);\n  }\n\n  subscribeToPromocodeDiscount() {\n    this.promocodeService.promocodeDiscount.subscribe((discount) => {\n      this.promocodeDiscount = discount;\n    });\n  }\n\n  subscribeToResetForm(): void {\n    this.orderService.getResetFormStream().subscribe(() => this.resetOrderForm());\n  }\n\n  subscribeToOrderLoading(): void {\n    this.orderService.getOrderLoading().subscribe((isLoading) => (this.orderIsLoading = isLoading));\n  }\n\n  private resetOrderForm(): void {\n    this.isFormSubmitted = false;\n    this.orderForm.reset();\n  }\n\n  public deleteFromCart(id: number): void {\n    this.emitDeleteFromCart.emit(id);\n  }\n\n  public productCountChange(id: number, count: number): void {\n    this.emitProductCountChange.emit({ id, count });\n  }\n\n  public trackByProductId(_: number, cartItem: ICartItem): number {\n    return cartItem.product.id;\n  }\n\n  private manageValidatorsDeliveryForm(value: string) {\n    if (value === 'courier') {\n      this.deliveryStreetControl?.setValidators(this.streetControlValidators);\n      this.deliveryHouseControl?.setValidators(this.houseControlValidators);\n      this.deliveryTimeControl?.setValidators(this.timeControlValidators);\n      this.updateValAndValidatorsDelivery();\n      return;\n    }\n    this.deliveryStreetControl?.removeValidators(this.streetControlValidators);\n    this.deliveryHouseControl?.removeValidators(this.houseControlValidators);\n    this.deliveryTimeControl?.removeValidators(this.timeControlValidators);\n    this.updateValAndValidatorsDelivery();\n  }\n\n  private updateValAndValidatorsDelivery() {\n    this.deliveryStreetControl?.updateValueAndValidity();\n    this.deliveryHouseControl?.updateValueAndValidity();\n    this.deliveryTimeControl?.updateValueAndValidity();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.order {\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__loader {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    max-width: 200px;\r\n    width: 100%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  &__bg {\r\n    &-top {\r\n      pointer-events: none;\r\n\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        height: 585px;\r\n        width: 869px;\r\n        right: -285px;\r\n        top: -175px;\r\n        z-index: -1;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/order/pink-flowers-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/order/pink-flowers-bg.png')\r\n        );\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: center;\r\n        transform: rotate(355deg);\r\n        pointer-events: none;\r\n      }\r\n\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        height: 340px;\r\n        width: 346px;\r\n        left: -219px;\r\n        top: -125px;\r\n        z-index: -1;\r\n        background-image: image-set(\r\n          url('/assets/images/pages/order/pink-flowers-bg.webp') type('image/webp'),\r\n          url('/assets/images/pages/order/pink-flowers-bg.png')\r\n        );\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: center;\r\n        transform: rotateZ(119deg);\r\n        pointer-events: none;\r\n      }\r\n    }\r\n    &-bottom {\r\n      &::after {\r\n        content: '';\r\n        position: fixed;\r\n        height: 685px;\r\n        width: 677px;\r\n        right: -161px;\r\n        bottom: -36px;\r\n        z-index: -1;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-repeat: no-repeat;\r\n        background-size: 100% 100%;\r\n        background-position: center;\r\n        transform: rotate(17deg);\r\n        opacity: 0.7;\r\n        pointer-events: none;\r\n      }\r\n\r\n      &::before {\r\n        content: '';\r\n        position: fixed;\r\n        width: 1034px;\r\n        height: 782px;\r\n        left: 236px;\r\n        bottom: -130px;\r\n        z-index: -1;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-repeat: no-repeat;\r\n        background-size: 100% 100%;\r\n        background-position: center;\r\n        transform: rotate(82deg);\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    height: 702px;\r\n    width: 724px;\r\n    right: -186px;\r\n    top: -170px;\r\n    z-index: -2;\r\n    background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    transform: rotate(17deg);\r\n    pointer-events: none;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 625px;\r\n    height: 640px;\r\n    left: -284px;\r\n    top: -314px;\r\n    z-index: -1;\r\n    background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    transform: rotate(116deg);\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n  }\r\n}\r\n\r\n.hero {\r\n  &__breadcrumbs {\r\n    margin-bottom: 60px;\r\n  }\r\n}\r\n\r\n.content {\r\n  &__container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &__order-form {\r\n    flex: 0 1 60%;\r\n    margin-right: 100px;\r\n  }\r\n\r\n  &__cart {\r\n    position: sticky;\r\n    top: 80px;\r\n    align-self: flex-start;\r\n  }\r\n}\r\n\r\n.order-form {\r\n  &__title {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  &__fieldset {\r\n    &:not(:last-of-type) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  &__legend {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__label-text {\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &__label {\r\n    display: block;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__fieldset-promocode {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &__total-description {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__btn {\r\n    max-width: 255px;\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__policy {\r\n    max-width: 360px;\r\n    width: 100%;\r\n  }\r\n\r\n  &__delivery-fields-wrapper {\r\n    padding: 20px 1px 1px 1px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__radio-wrapper {\r\n    &:not(:last-of-type) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  &__promocode {\r\n    max-width: 350px;\r\n  }\r\n}\r\n\r\n.policy {\r\n  font-weight: 300;\r\n  font-size: 11px;\r\n}\r\n\r\n.total-description {\r\n  &__wrapper-price {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.wrapper-price {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  &__paragraph-1 {\r\n    margin-right: 20px;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n  }\r\n}\r\n\r\n.cart {\r\n  &__title {\r\n    margin-bottom: 45px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__list {\r\n    margin-bottom: 20px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    max-height: 500px;\r\n    padding-right: 10px;\r\n  }\r\n\r\n  &__text {\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.select {\r\n  padding: 17px;\r\n  background-color: transparent;\r\n  font-size: 14px;\r\n  font-family: 'Oswald', sans-serif;\r\n  color: $color-6;\r\n  border: 1px solid $color-6;\r\n  appearance: none;\r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.select::-ms-expand {\r\n  display: none;\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .content {\r\n    &__order-form {\r\n      margin-right: 40px;\r\n    }\r\n\r\n    &__cart {\r\n      flex-basis: 40%;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .content {\r\n    &__order-form {\r\n      margin-right: 0;\r\n      flex-basis: 100%;\r\n    }\r\n\r\n    &__cart {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .order {\r\n    &__bg {\r\n      &-bottom {\r\n        &::after {\r\n          opacity: 0.3;\r\n        }\r\n        &::before {\r\n          width: 688px;\r\n          height: 782px;\r\n          right: -342px;\r\n          bottom: -402px;\r\n          left: 0;\r\n          opacity: 0.2;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./order.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "deliveryService",
                        "type": "DeliveryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "promocodeService",
                        "type": "PromocodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 102,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "deliveryService",
                        "type": "DeliveryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "promocodeService",
                        "type": "PromocodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "promocodeDiscount": {
                    "name": "promocodeDiscount",
                    "setSignature": {
                        "name": "promocodeDiscount",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 49,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "promocodeDiscount",
                        "type": "number",
                        "returnType": "number",
                        "line": 46
                    }
                },
                "cartDiscount": {
                    "name": "cartDiscount",
                    "setSignature": {
                        "name": "cartDiscount",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "cartDiscount",
                        "type": "",
                        "returnType": "",
                        "line": 61
                    }
                },
                "cartPrice": {
                    "name": "cartPrice",
                    "setSignature": {
                        "name": "cartPrice",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "price",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "price",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "cartPrice",
                        "type": "",
                        "returnType": "",
                        "line": 69
                    }
                },
                "userNameControl": {
                    "name": "userNameControl",
                    "getSignature": {
                        "name": "userNameControl",
                        "type": "",
                        "returnType": "",
                        "line": 166
                    }
                },
                "userPhoneControl": {
                    "name": "userPhoneControl",
                    "getSignature": {
                        "name": "userPhoneControl",
                        "type": "",
                        "returnType": "",
                        "line": 169
                    }
                },
                "userEmailControl": {
                    "name": "userEmailControl",
                    "getSignature": {
                        "name": "userEmailControl",
                        "type": "",
                        "returnType": "",
                        "line": 172
                    }
                },
                "recipientNameControl": {
                    "name": "recipientNameControl",
                    "getSignature": {
                        "name": "recipientNameControl",
                        "type": "",
                        "returnType": "",
                        "line": 175
                    }
                },
                "recipientPhoneControl": {
                    "name": "recipientPhoneControl",
                    "getSignature": {
                        "name": "recipientPhoneControl",
                        "type": "",
                        "returnType": "",
                        "line": 178
                    }
                },
                "deliveryMethodControl": {
                    "name": "deliveryMethodControl",
                    "getSignature": {
                        "name": "deliveryMethodControl",
                        "type": "",
                        "returnType": "",
                        "line": 181
                    }
                },
                "deliveryStreetControl": {
                    "name": "deliveryStreetControl",
                    "getSignature": {
                        "name": "deliveryStreetControl",
                        "type": "",
                        "returnType": "",
                        "line": 184
                    }
                },
                "deliveryHouseControl": {
                    "name": "deliveryHouseControl",
                    "getSignature": {
                        "name": "deliveryHouseControl",
                        "type": "",
                        "returnType": "",
                        "line": 187
                    }
                },
                "deliveryBuildingControl": {
                    "name": "deliveryBuildingControl",
                    "getSignature": {
                        "name": "deliveryBuildingControl",
                        "type": "",
                        "returnType": "",
                        "line": 190
                    }
                },
                "deliveryTimeControl": {
                    "name": "deliveryTimeControl",
                    "getSignature": {
                        "name": "deliveryTimeControl",
                        "type": "",
                        "returnType": "",
                        "line": 193
                    }
                },
                "deliveryFlatControl": {
                    "name": "deliveryFlatControl",
                    "getSignature": {
                        "name": "deliveryFlatControl",
                        "type": "",
                        "returnType": "",
                        "line": 196
                    }
                },
                "paymentControl": {
                    "name": "paymentControl",
                    "getSignature": {
                        "name": "paymentControl",
                        "type": "",
                        "returnType": "",
                        "line": 199
                    }
                },
                "commentControl": {
                    "name": "commentControl",
                    "getSignature": {
                        "name": "commentControl",
                        "type": "",
                        "returnType": "",
                        "line": 202
                    }
                },
                "isDeliveryByCourier": {
                    "name": "isDeliveryByCourier",
                    "getSignature": {
                        "name": "isDeliveryByCourier",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 205
                    }
                }
            },
            "templateData": "<div class=\"order\">\n  <div class=\"order__bg-top\"></div>\n\n  <div class=\"order__container container--pt\">\n    <div class=\"order__hero hero\">\n      <div class=\"container\">\n        <app-breadcrumbs class=\"hero__breadcrumbs\" [links]=\"data.breadcrumbs\"></app-breadcrumbs>\n\n        <h1 class=\"hero__title section-title text-uppercase\">\n          {{ data.title }}\n        </h1>\n      </div>\n    </div>\n\n    <div\n      class=\"order__content content\"\n      *ngIf=\"cartProductCount\"\n      [@fadeAnimation]\n      [@expandAnimation]\n    >\n      <app-loader class=\"order__loader\" *ngIf=\"orderIsLoading\" text=\"Оформляем заказ\"></app-loader>\n\n      <div class=\"content__container container\">\n        <form\n          class=\"content__order-form order-form\"\n          [formGroup]=\"orderForm\"\n          (ngSubmit)=\"handlerSubmitOrderForm()\"\n        >\n          <h2 class=\"order-form__title text-color--1 text-uppercase\">\n            {{ data.subtitle }}\n          </h2>\n\n          <fieldset class=\"order-form__fieldset\" formGroupName=\"user\">\n            <legend class=\"order-form__legend text-color--1 text-uppercase\">\n              {{ data.formTitle }}\n            </legend>\n\n            <label class=\"order-form__label\"\n              ><p class=\"order-form__label-text\">\n                {{ data.fields.name.title }}\n              </p>\n\n              <input\n                class=\"field field--default field--focus-default field--hover-default\"\n                [ngClass]=\"{\n                  'field--not-empty': userNameControl?.value,\n                  'field--error':\n                    (isFormSubmitted || userNameControl?.touched) &&\n                    (userNameControl?.hasError('empty') || !userNameControl?.value)\n                }\"\n                type=\"text\"\n                id=\"inputName\"\n                [placeholder]=\"data.fields.name.descr\"\n                formControlName=\"firstName\"\n                autocomplete=\"given-name\"\n              />\n\n              <app-error-field\n                ariaDescribedby=\"inputName\"\n                [isEmpty]=\"\n                  !!(\n                    (isFormSubmitted || userNameControl?.touched) &&\n                    userNameControl?.hasError('empty')\n                  )\n                \"\n                [isRequired]=\"\n                  !!((isFormSubmitted || userNameControl?.touched) && !userNameControl?.value)\n                \"\n              ></app-error-field>\n            </label>\n\n            <label class=\"order-form__label\"\n              ><p class=\"order-form__label-text\">\n                {{ data.fields.phone.title }}\n              </p>\n\n              <input\n                class=\"field field--default field--focus-default field--hover-default\"\n                [ngClass]=\"{\n                  'field--not-empty': userPhoneControl?.value,\n                  'field--error':\n                    (isFormSubmitted || userPhoneControl?.touched) &&\n                    (userPhoneControl?.hasError('minlength') || !userPhoneControl?.value)\n                }\"\n                type=\"text\"\n                id=\"inputPhone\"\n                [placeholder]=\"data.fields.phone.descr\"\n                formControlName=\"phone\"\n                mask=\"+0 (000) 000-00-00\"\n                autocomplete=\"tel\"\n              />\n\n              <app-error-field\n                ariaDescribedby=\"inputPhone\"\n                [isInvalidPhone]=\"\n                  !!(\n                    (isFormSubmitted || userPhoneControl?.touched) &&\n                    userPhoneControl?.hasError('minlength')\n                  )\n                \"\n                [isRequired]=\"\n                  !!((isFormSubmitted || userPhoneControl?.touched) && !userPhoneControl?.value)\n                \"\n              ></app-error-field>\n            </label>\n\n            <label class=\"order-form__label\"\n              ><p class=\"order-form__label-text\">\n                {{ data.fields.email.title }}\n              </p>\n\n              <input\n                class=\"field field--default field--focus-default field--hover-default\"\n                [ngClass]=\"{\n                  'field--not-empty': userEmailControl?.value,\n                  'field--error':\n                    (isFormSubmitted || userEmailControl?.touched) &&\n                    (userEmailControl?.hasError('email') || !userEmailControl?.value)\n                }\"\n                id=\"inputEmail\"\n                type=\"text\"\n                [placeholder]=\"data.fields.email.descr\"\n                formControlName=\"email\"\n                autocomplete=\"email\"\n              />\n\n              <app-error-field\n                ariaDescribedby=\"inputEmail\"\n                [isInvalidEmail]=\"\n                  !!(\n                    (isFormSubmitted || userEmailControl?.touched) &&\n                    userEmailControl?.hasError('email')\n                  )\n                \"\n                [isRequired]=\"\n                  !!((isFormSubmitted || userEmailControl?.touched) && !userEmailControl?.value)\n                \"\n              ></app-error-field>\n            </label>\n\n            <ng-container formGroupName=\"recipient\">\n              <label class=\"order-form__label\"\n                ><p class=\"order-form__label-text\">\n                  {{ data.fields.recipientPhone.title }}\n                </p>\n                <input\n                  class=\"field field--default field--focus-default field--hover-default\"\n                  [ngClass]=\"{\n                    'field--not-empty': recipientPhoneControl?.value,\n                    'field--error':\n                      (isFormSubmitted || recipientPhoneControl?.touched) &&\n                      recipientPhoneControl?.hasError('minlength')\n                  }\"\n                  type=\"text\"\n                  id=\"inputRecipientPhone\"\n                  [placeholder]=\"data.fields.recipientPhone.descr\"\n                  formControlName=\"phone\"\n                  mask=\"+0 (000) 000-00-00\"\n                />\n\n                <app-error-field\n                  ariaDescribedby=\"inputRecipientPhone\"\n                  [isInvalidPhone]=\"\n                    !!(\n                      (isFormSubmitted || recipientPhoneControl?.touched) &&\n                      recipientPhoneControl?.hasError('minlength')\n                    )\n                  \"\n                ></app-error-field>\n              </label>\n\n              <label class=\"order-form__label\"\n                ><p class=\"order-form__label-text\">\n                  {{ data.fields.recipientName.title }}\n                </p>\n\n                <input\n                  class=\"field field--default field--focus-default field--hover-default\"\n                  [ngClass]=\"{\n                    'field--not-empty': recipientNameControl?.value\n                  }\"\n                  type=\"text\"\n                  [placeholder]=\"data.fields.recipientName.descr\"\n                  formControlName=\"firstName\"\n                />\n              </label>\n            </ng-container>\n\n            <label class=\"order-form__label\"\n              ><p class=\"order-form__label-text\">\n                {{ data.fields.comment.title }}\n              </p>\n\n              <input\n                class=\"field field--default field--focus-default field--hover-default\"\n                [ngClass]=\"{\n                  'field--not-empty': commentControl?.value,\n                  'field--error':\n                    (isFormSubmitted || commentControl?.touched) &&\n                    (commentControl?.hasError('empty') || !commentControl?.value)\n                }\"\n                id=\"inputComment\"\n                type=\"text\"\n                [placeholder]=\"data.fields.comment.descr\"\n                formControlName=\"comment\"\n              />\n\n              <app-error-field\n                ariaDescribedby=\"inputComment\"\n                [isEmpty]=\"\n                  !!(\n                    (isFormSubmitted || commentControl?.touched) &&\n                    commentControl?.hasError('empty')\n                  )\n                \"\n                [isRequired]=\"\n                  !!((isFormSubmitted || commentControl?.touched) && !commentControl?.value)\n                \"\n              ></app-error-field>\n            </label>\n          </fieldset>\n\n          <fieldset class=\"order-form__fieldset\" formGroupName=\"delivery\">\n            <legend class=\"order-form__legend text-color--1 text-uppercase\">\n              {{ data.fields.delivery.title }}\n            </legend>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"method\"\n              id=\"radioPickupMethod\"\n              attrValue=\"pickup\"\n              attrName=\"method\"\n              labelValue=\"Самовывоз\"\n            ></app-radio-button>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"method\"\n              id=\"radioCourierMethod\"\n              attrValue=\"courier\"\n              attrName=\"method\"\n              labelValue=\"Доставка курьером\"\n            ></app-radio-button>\n\n            <app-error-field\n              ariaDescribedby=\"radioPickupMethod radioCourierMethod\"\n              [isRequiredRadio]=\"!!(isFormSubmitted && deliveryMethodControl?.hasError('required'))\"\n            ></app-error-field>\n\n            <div\n              class=\"order-form__delivery-fields-wrapper\"\n              *ngIf=\"isDeliveryByCourier\"\n              [@expandAnimation]\n            >\n              <label class=\"order-form__label\"\n                ><p class=\"order-form__label-text\">\n                  {{ data.fields.street.title }}\n                </p>\n\n                <input\n                  class=\"field field--default field--focus-default field--hover-default\"\n                  [ngClass]=\"{\n                    'field--not-empty': deliveryStreetControl?.value,\n                    'field--error':\n                      (isFormSubmitted || deliveryStreetControl?.touched) &&\n                      (!deliveryStreetControl?.value || deliveryStreetControl?.hasError('empty'))\n                  }\"\n                  id=\"inputStreet\"\n                  type=\"text\"\n                  [placeholder]=\"data.fields.street.descr\"\n                  formControlName=\"street\"\n                />\n\n                <app-error-field\n                  ariaDescribedby=\"inputStreet\"\n                  [isEmpty]=\"\n                    !!(\n                      (isFormSubmitted || deliveryStreetControl?.touched) &&\n                      deliveryStreetControl?.hasError('empty')\n                    )\n                  \"\n                  [isRequired]=\"\n                    !!(\n                      (isFormSubmitted || deliveryStreetControl?.touched) &&\n                      !deliveryStreetControl?.value\n                    )\n                  \"\n                ></app-error-field>\n              </label>\n\n              <div>\n                <label class=\"order-form__label\"\n                  ><p class=\"order-form__label-text\">\n                    {{ data.fields.building.title }}\n                  </p>\n\n                  <input\n                    class=\"field field--default field--focus-default field--hover-default\"\n                    [ngClass]=\"{\n                      'field--not-empty': deliveryBuildingControl?.value,\n                    }\"\n                    type=\"text\"\n                    [placeholder]=\"data.fields.building.descr\"\n                    formControlName=\"building\"\n                  />\n                </label>\n\n                <label class=\"order-form__label\"\n                  ><p class=\"order-form__label-text\">\n                    {{ data.fields.house.title }}\n                  </p>\n\n                  <input\n                    class=\"field field--default field--focus-default field--hover-default\"\n                    [ngClass]=\"{\n                      'field--not-empty': deliveryHouseControl?.value,\n                      'field--error':\n                        (isFormSubmitted || deliveryHouseControl?.touched) &&\n                        (!deliveryHouseControl?.value || deliveryHouseControl?.hasError('empty'))\n                    }\"\n                    id=\"inputHouse\"\n                    type=\"text\"\n                    [placeholder]=\"data.fields.house.descr\"\n                    formControlName=\"house\"\n                  />\n\n                  <app-error-field\n                    ariaDescribedby=\"inputHouse\"\n                    [isEmpty]=\"\n                      !!(\n                        (isFormSubmitted || deliveryHouseControl?.touched) &&\n                        deliveryHouseControl?.hasError('empty')\n                      )\n                    \"\n                    [isRequired]=\"\n                      !!(\n                        (isFormSubmitted || deliveryHouseControl?.touched) &&\n                        !deliveryHouseControl?.value\n                      )\n                    \"\n                  ></app-error-field>\n                </label>\n\n                <label class=\"order-form__label\"\n                  ><p class=\"order-form__label-text\">\n                    {{ data.fields.apartment.title }}\n                  </p>\n\n                  <input\n                    class=\"field field--default field--focus-default field--hover-default\"\n                    [ngClass]=\"{\n                      'field--not-empty': deliveryFlatControl?.value\n                    }\"\n                    type=\"text\"\n                    [placeholder]=\"data.fields.apartment.descr\"\n                    formControlName=\"flat\"\n                  />\n                </label>\n              </div>\n\n              <label class=\"order-form__label\"\n                ><p class=\"order-form__label-text\">\n                  {{ data.fields.deliveryTime.title }}\n                </p>\n\n                <input\n                  class=\"field field--default field--focus-default field--hover-default\"\n                  [ngClass]=\"{\n                    'field--not-empty': deliveryTimeControl?.value,\n                    'field--error':\n                      (deliveryTimeControl?.touched || isFormSubmitted) &&\n                      (!deliveryTimeControl?.value || deliveryTimeControl?.hasError('time'))\n                  }\"\n                  id=\"inputTime\"\n                  type=\"input\"\n                  [placeholder]=\"data.fields.deliveryTime.descr\"\n                  formControlName=\"time\"\n                  mask=\"00:00\"\n                />\n\n                <app-error-field\n                  ariaDescribedby=\"inputTime\"\n                  [isRequired]=\"\n                    !!(\n                      (isFormSubmitted || deliveryTimeControl?.touched) &&\n                      !deliveryTimeControl?.value\n                    )\n                  \"\n                  [isInvalidTime]=\"\n                    !!(\n                      (isFormSubmitted || deliveryTimeControl?.touched) &&\n                      deliveryTimeControl?.hasError('time')\n                    )\n                  \"\n                ></app-error-field>\n              </label>\n\n              <p class=\"text-uppercase\">\n                {{ data.fields.deliveryTime.shippingCost }}: {{ deliveryPrice | currency : 'RUB' }}\n              </p>\n            </div>\n          </fieldset>\n\n          <fieldset class=\"order-form__fieldset\">\n            <legend class=\"order-form__legend text-color--1 text-uppercase\">Оплата</legend>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"payment\"\n              attrValue=\"card\"\n              attrName=\"payment\"\n              labelValue=\"Банковская карта\"\n            ></app-radio-button>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"payment\"\n              attrValue=\"applePay\"\n              attrName=\"payment\"\n              id=\"radioApplePayment\"\n              labelValue=\"Apple pay\"\n            ></app-radio-button>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"payment\"\n              attrValue=\"googlePay\"\n              id=\"radioGooglePayment\"\n              attrName=\"payment\"\n              labelValue=\"Google pay\"\n            ></app-radio-button>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"payment\"\n              attrValue=\"cryptoCurrency\"\n              id=\"radioCryptoPayment\"\n              attrName=\"payment\"\n              labelValue=\"Криптовалюта\"\n            ></app-radio-button>\n\n            <app-radio-button\n              class=\"order-form__radio-wrapper\"\n              formControlName=\"payment\"\n              attrValue=\"checkingAccount\"\n              id=\"radioAccountPayment\"\n              attrName=\"payment\"\n              labelValue=\"С расчетного счета\"\n            ></app-radio-button>\n\n            <app-error-field\n              ariaDescribedby=\"radioApplePayment radioGooglePayment radioCryptoPayment radioAccountPayment\"\n              [isRequiredRadio]=\"!!(isFormSubmitted && paymentControl?.hasError('required'))\"\n            ></app-error-field>\n          </fieldset>\n\n          <fieldset class=\"order-form__fieldset order-form__fieldset-promocode\">\n            <legend class=\"order-form__legend text-color--1 text-uppercase\">Промокод</legend>\n\n            <app-promocode-field-container\n              class=\"order-form__promocode\"\n            ></app-promocode-field-container>\n          </fieldset>\n\n          <div class=\"order-form__total-description total-description\">\n            <div class=\"total-description__wrapper-price wrapper-price\">\n              <p class=\"text-color--1 text-uppercase wrapper-price__paragraph-1\">\n                Общая сумма заказа\n              </p>\n\n              <p class=\"text-color--1 text-uppercase wrapper-price__paragraph-2\">\n                {{ totalPrice | currency : 'RUB' }}\n              </p>\n            </div>\n\n            <p class=\"total-description__paragraph-1\">\n              Скидка = {{ totalDiscount | currency : 'RUB' }}\n            </p>\n\n            <p class=\"total-description__paragraph-2\">\n              Доставка = {{ deliveryPrice | currency : 'RUB' }}\n            </p>\n          </div>\n\n          <button class=\"order-form__btn text-uppercase\" appUiButton=\"1\">Оформить заказ</button>\n\n          <p class=\"order-form__policy policy\">\n            Нажимая на кнопку «К Оплате», я даю свое согласие на обработку персональных данных, в\n            соответствии с\n            <a class=\"policy__link text-color--3\" routerLink=\"#\">Политикой конфиденциальности</a>, а\n            так же ознакомлен с условиями оплаты и доставки\n          </p>\n        </form>\n\n        <section class=\"content__cart cart\">\n          <h2 class=\"cart__title text-color--1 text-uppercase\">Ваш заказ</h2>\n\n          <ul class=\"cart__list list-reset\">\n            <li\n              class=\"cart__item\"\n              *ngFor=\"let cartItem of cart; trackBy: trackByProductId\"\n              [@enterLeaveAnimation]\n            >\n              <app-product-item\n                [product]=\"cartItem.product\"\n                [count]=\"cartItem.count\"\n                [minCount]=\"minProductCount\"\n                (countChange)=\"productCountChange(cartItem.product.id, $event)\"\n                (emitDeleteFromCart)=\"deleteFromCart(cartItem.product.id)\"\n              ></app-product-item>\n            </li>\n          </ul>\n\n          <p class=\"cart__text text-color--1 text-uppercase\">\n            Предварительный итог: {{ cartPrice | currency : 'RUB' }}.\n          </p>\n        </section>\n      </div>\n    </div>\n\n    <div class=\"container\">\n      <a\n        *ngIf=\"!cartProductCount\"\n        class=\"text-uppercase\"\n        appUiButton=\"1\"\n        [routerLink]=\"'/catalog'\"\n        routerLinkActive=\"router-link-active\"\n        >В каталог</a\n      >\n    </div>\n  </div>\n\n  <div class=\"order__bg-bottom\"></div>\n</div>\n"
        },
        {
            "name": "OrderContainerComponent",
            "id": "component-OrderContainerComponent-10ec961a8bfe4a5ae5e51c7dbc357e03ea3f817e15f21926b6b1f30665809defac6a7355edb6aca46b2485301c9df0b6d249725bcd200ea1de0f21aa1bf79184",
            "file": "src/app/pages/order/order-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./order-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Cart | null",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "cartDiscount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "cartPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "cartProductCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "orderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrderComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'orderComponent'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerSubmitOrderForm",
                    "args": [
                        {
                            "name": "formData",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "IOrderData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "productCountChange",
                    "args": [
                        {
                            "name": "payload",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscribeToCartDiscount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCartPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCountInCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { OrderComponent } from './component/order.component';\nimport { Cart } from 'src/app/services/cart-storage/cart-storage.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { OrderService } from 'src/app/services/order/order.service';\nimport { Meta } from '@angular/platform-browser';\nimport { description } from './data/meta';\nimport { IOrderData } from './component/types';\n\n@Component({\n  selector: 'app-order-container',\n  templateUrl: './order-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrderContainerComponent implements OnInit {\n  @ViewChild('orderComponent') orderComponent: OrderComponent;\n  protected cart: Cart | null;\n  protected cartPrice: number;\n  protected cartDiscount: number;\n  protected cartProductCount: number;\n\n  constructor(\n    private meta: Meta,\n    private cartService: CartService,\n    private orderService: OrderService\n  ) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToCartPrice();\n    this.subscribeToCartDiscount();\n    this.subscribeToCart();\n    this.subscribeToCountInCart();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  protected subscribeToCountInCart(): void {\n    this.cartService.getCountInCart().subscribe((count) => (this.cartProductCount = count));\n  }\n\n  protected subscribeToCart(): void {\n    this.cartService.getCart().subscribe((cart) => (this.cart = cart));\n  }\n\n  protected handlerSubmitOrderForm(formData: IOrderData): void {\n    this.orderService.postOrder(formData);\n  }\n\n  private subscribeToCartPrice(): void {\n    this.cartService.getPrice().subscribe((price) => (this.cartPrice = price));\n  }\n\n  private subscribeToCartDiscount(): void {\n    this.cartService.getDiscount().subscribe((discount) => (this.cartDiscount = discount));\n  }\n\n  protected deleteFromCart(id: number): void {\n    this.cartService.deleteFromCart(id);\n  }\n\n  protected productCountChange(payload: { id: number; count: number }): void {\n    this.cartService.changeProductCount(payload.id, payload.count);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-order\n  #orderComponent\n  [cart]=\"cart\"\n  [cartPrice]=\"cartPrice\"\n  [cartDiscount]=\"cartDiscount\"\n  [cartProductCount]=\"cartProductCount\"\n  (emitDeleteFromCart)=\"deleteFromCart($event)\"\n  (emitProductCountChange)=\"productCountChange($event)\"\n  (emitSubmitOrderForm)=\"handlerSubmitOrderForm($event)\"\n></app-order>\n"
        },
        {
            "name": "OrderSuccessfulComponent",
            "id": "component-OrderSuccessfulComponent-01581c07cab1010ffada0cd86a37153b6c7f4b66caa8411e8b86184ceefa94b684409a14295903a6c5b42a0da7f1c15b13a171c605dd6b7244e52da97d575f4a",
            "file": "src/app/pages/order-successful/order-successful.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment-successful",
            "styleUrls": [
                "./order-successful.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./order-successful.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "orderId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToRouteData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs';\nimport { pageData } from '~pages/order-successful/data/pageData';\nimport { description } from './data/meta';\n\n@Component({\n  selector: 'app-payment-successful',\n  templateUrl: './order-successful.component.html',\n  styleUrls: ['./order-successful.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrderSuccessfulComponent implements OnInit {\n  public data = pageData;\n  public orderId: number;\n\n  constructor(private meta: Meta, private activatedRoute: ActivatedRoute) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToRouteData();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private subscribeToRouteData(): void {\n    this.activatedRoute.data\n      .pipe(map((data) => data[0]))\n      .subscribe((orderId) => (this.orderId = Number(orderId)));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n}\r\n\r\n.item {\r\n  width: 500px;\r\n  height: 500px;\r\n\r\n  &:nth-child(1) {\r\n    background-color: red;\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    background-color: yellow;\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    background-color: blue;\r\n  }\r\n\r\n  &:nth-child(4) {\r\n    background-color: violet;\r\n  }\r\n\r\n  &:nth-child(5) {\r\n    background-color: yellow;\r\n  }\r\n\r\n  &:nth-child(6) {\r\n    background-color: blue;\r\n  }\r\n\r\n  &:nth-child(7) {\r\n    background-color: violet;\r\n  }\r\n}\r\n\r\n.swiper {\r\n  // width: 1000px;\r\n  // height: 500px;\r\n}\r\n\r\n.payment-successful {\r\n  flex-grow: 1;\r\n\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 400px;\r\n      bottom: 0;\r\n      z-index: -1;\r\n      width: 50%;\r\n      max-width: 595px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/payment-successful/pink-flower.webp') type('image/webp'),\r\n        url('/assets/images/pages/payment-successful/pink-flower.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    position: relative;\r\n\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -438px;\r\n        top: -435px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -472px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(126deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 108px;\r\n        bottom: -367px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(234deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-top: 200px;\r\n    padding-bottom: 408px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n\r\n.wrapper-content {\r\n  &__paragraph-1 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__title-part-1 {\r\n    display: inline-block;\r\n    margin-right: 0.3em;\r\n  }\r\n\r\n  &__title-part-2 {\r\n    display: inline-block;\r\n  }\r\n\r\n  &__title-part-3 {\r\n    position: relative;\r\n    padding-left: 43%;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: 10%;\r\n      top: 50%;\r\n      width: 25%;\r\n      height: 1px;\r\n      background-color: #d978ac;\r\n    }\r\n  }\r\n  &__paragraph-3 {\r\n    margin-bottom: 60px;\r\n  }\r\n  &__link {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .payment-successful {\r\n    &--bg {\r\n      &::before {\r\n        width: 55%;\r\n      }\r\n    }\r\n\r\n    &__container {\r\n      padding-bottom: 160px;\r\n    }\r\n\r\n    &__title {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .wrapper-content {\r\n    &__title-part-1 {\r\n      display: block;\r\n      margin-right: 0;\r\n    }\r\n\r\n    &__title-part-2 {\r\n      position: relative;\r\n      text-align: end;\r\n\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: 6px;\r\n        top: 50%;\r\n        width: 30%;\r\n        height: 1px;\r\n        background-color: #d978ac;\r\n      }\r\n    }\r\n\r\n    &__title-part-3 {\r\n      align-self: flex-end;\r\n      padding-left: 0;\r\n\r\n      &::after {\r\n        content: none;\r\n      }\r\n    }\r\n\r\n    &__wrapper-descr {\r\n      padding-right: 110px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./order-successful.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"payment-successful payment-successful--bg\">\n  <div class=\"payment-successful__decor-color-bg-1\"></div>\n  <div class=\"payment-successful__decor-color-bg-2\"></div>\n\n  <div class=\"payment-successful__container container\">\n    <h1 class=\"payment-successful__title section-title text-uppercase\">\n      <p class=\"wrapper-content__title-part-1\">{{ data.title.part }}</p>\n      <p class=\"wrapper-content__title-part-2\">{{ data.title.part2 }}</p>\n      <p class=\"wrapper-content__title-part-3\">{{ data.title.part3 }}</p>\n    </h1>\n\n    <div class=\"payment-successful__wrapper-content wrapper-content\">\n      <p class=\"wrapper-content__paragraph-1 text-uppercase\">\n        {{ data.textOrderNumber }} {{ orderId }}\n      </p>\n\n      <div class=\"wrapper-content__wrapper-descr text-line-height-1-6\">\n        <p class=\"wrapper-content__paragraph-2 text-uppercase\">\n          {{ data.text }}\n        </p>\n\n        <p class=\"wrapper-content__paragraph-3 text-uppercase\">\n          {{ data.text2 }}\n        </p>\n      </div>\n\n      <a\n        class=\"wrapper-content__link text-uppercase text-color--1\"\n        routerLink=\"/\"\n        routerLinkActive=\"router-link-active\"\n        >{{ data.link }}</a\n      >\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PopularComponent",
            "id": "component-PopularComponent-9f579126e8c138b6696af4bc6a3df588b6c204427ffc3abcae2e6f95d936c12b43c1d9d641af422c9d84d3daeabc999e1941fd66d9bddab579f0738faaf1ffe1",
            "file": "src/app/page-components/main/popular/popular.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popular-section",
            "styleUrls": [
                "./popular.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "emitAddToCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.popularBouquets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isSliderVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "offerProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToViewportSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Subject, map, takeUntil } from 'rxjs';\nimport { ViewportSizeService } from 'src/app/services/events/resize/viewport-size.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { pageData } from '~pages/main/data/pageData';\nimport { IProduct } from '~types/product';\n\n@Component({\n  selector: 'app-popular-section',\n  templateUrl: './popular.component.html',\n  styleUrls: ['./popular.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopularComponent implements OnInit, OnDestroy {\n  public data = pageData.popularBouquets;\n  private destroySubject: Subject<null> = new Subject();\n  public isSliderVisible: boolean;\n  public offerProducts: IProduct[] = [];\n  public isLoading: boolean;\n  @Output() public emitAddToCart: EventEmitter<number> = new EventEmitter();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private vss: ViewportSizeService,\n    private productsService: ProductsService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToViewportSize();\n    this.subscribeToProducts();\n    this.subscribeToProductsLoading();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToViewportSize(): void {\n    this.vss.resizeObservable$\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((sizes) => sizes.width)\n      )\n      .subscribe((width) => {\n        this.isSliderVisible = width > 576;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProducts(): void {\n    this.productsService\n      .getProducts()\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((products) => products?.slice(0, 3))\n      )\n      .subscribe((products) => {\n        this.offerProducts = products;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsLoading(): void {\n    this.productsService\n      .productsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  public get isProductsNotEmpty(): boolean {\n    return this.offerProducts.length !== 0;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.popular-section {\r\n  background-image: url('/assets/images/pages/main/decor-bg.jpg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  background-size: 55%;\r\n\r\n  &--color-bg {\r\n    position: relative;\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 21%;\r\n      left: 5%;\r\n      z-index: -1;\r\n      width: 100%;\r\n      height: 70%;\r\n      transform: rotateZ(54deg);\r\n      background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 9%;\r\n      left: -30%;\r\n      z-index: -1;\r\n      width: 95%;\r\n      height: 55%;\r\n      transform: rotateZ(47deg);\r\n      background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 180px;\r\n  }\r\n\r\n  &__section-title {\r\n    margin-bottom: 15px;\r\n\r\n    &-part-1 {\r\n      display: block;\r\n    }\r\n    &-part-2 {\r\n      display: block;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  &__container-title {\r\n    margin-bottom: 90px;\r\n  }\r\n\r\n  &__paragraph {\r\n    text-align: center;\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n  }\r\n\r\n  &__wrapper-slider {\r\n    display: block;\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &__product-list {\r\n    display: block;\r\n    max-width: 450px;\r\n    margin: 0 auto 40px;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n  }\r\n}\r\n\r\n.link {\r\n  &--inline-flex {\r\n    display: inline-flex;\r\n  }\r\n\r\n  &--items-center {\r\n    align-items: center;\r\n  }\r\n\r\n  &__text {\r\n    margin-right: 10px;\r\n  }\r\n}\r\n\r\n.popular-products {\r\n  display: none;\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .popular-section {\r\n    &__paragraph {\r\n      font-size: 17px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .popular-section {\r\n    &__paragraph {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .popular-section {\r\n    &__container {\r\n      padding-bottom: 95px;\r\n    }\r\n\r\n    &__section-title-part-1 {\r\n      text-align: center;\r\n    }\r\n\r\n    &__paragraph {\r\n      margin-bottom: 30px;\r\n      text-align: end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__wrapper-slider {\r\n      height: 1000px;\r\n    }\r\n\r\n    &__container-title {\r\n      margin-bottom: 25px;\r\n    }\r\n  }\r\n\r\n  .popular-products {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    &__card {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./popular.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isProductsNotEmpty": {
                    "name": "isProductsNotEmpty",
                    "getSignature": {
                        "name": "isProductsNotEmpty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 82
                    }
                }
            },
            "templateData": "<section class=\"popular-section popular-section--color-bg\">\n  <div class=\"popular-section__container\">\n    <div class=\"container popular-section__container-title\">\n      <h2 class=\"section-title popular-section__section-title\">\n        <span class=\"popular-section__section-title-part-1\">{{\n          data.title | getWord : 0 | uppercase\n        }}</span>\n        <span class=\"popular-section__section-title-part-2\">{{\n          data.title | getWord : 1 | uppercase\n        }}</span>\n      </h2>\n\n      <p class=\"popular-section__paragraph\">\n        {{ data.descr }}\n      </p>\n    </div>\n\n    <app-products-offer-container\n      class=\"popular-section__wrapper-slider\"\n      *ngIf=\"isSliderVisible; else productsWrapper\"\n    ></app-products-offer-container>\n\n    <ng-template #productsWrapper>\n      <app-product-list-card class=\"popular-section__product-list\" [isLoading]=\"isLoading\">\n        <app-product-card\n          *ngFor=\"let product of offerProducts\"\n          [product]=\"product\"\n        ></app-product-card>\n      </app-product-list-card>\n    </ng-template>\n\n    <div class=\"container\">\n      <a\n        class=\"link link--inline-flex link--items-center outline-focus\"\n        [routerLink]=\"data.link.url\"\n      >\n        <p class=\"link__text\">{{ data.link.title | uppercase }}</p>\n\n        <app-icon icon=\"arrow-right\" viewBox=\"0 -3 100 10\" pathFill=\"#d978ac\"></app-icon>\n      </a>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "PriceComponent",
            "id": "component-PriceComponent-6a26cffb7f4ba86a641ae36506745db46d5a17042a4bc23738a432cbce99da5017e1b51ee52e87ec3f107b7598281d0c52880c2befcd91f5a2794c25a73466ab",
            "file": "src/app/components/price/price.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-price",
            "styleUrls": [
                "./price.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./price.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IPrice",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "oldPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IPrice } from './types';\n\n@Component({\n  selector: 'app-price',\n  templateUrl: './price.component.html',\n  styleUrls: ['./price.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PriceComponent {\n  protected currentPrice: number;\n  protected oldPrice: number;\n\n  @Input() set price(productPrice: IPrice) {\n    if (!productPrice) {\n      return;\n    }\n    if (productPrice?.discount) {\n      this.currentPrice = productPrice.value - productPrice.discount;\n      this.oldPrice = productPrice.value;\n      return;\n    }\n    this.currentPrice = productPrice.value;\n    this.oldPrice = 0;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.price {\r\n  display: inline-block;\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n\r\n  &--current {\r\n    margin-right: 10px;\r\n    color: $color-4;\r\n  }\r\n\r\n  &--old {\r\n    position: relative;\r\n    color: $color-8;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 1px;\r\n      background-color: $color-8;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./price.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "price": {
                    "name": "price",
                    "setSignature": {
                        "name": "price",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "productPrice",
                                "type": "IPrice",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "productPrice",
                                "type": "IPrice",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div>\n  <p class=\"price price--current\" data-test=\"priceCurrent\">{{ currentPrice | currency : 'RUB' }}</p>\n\n  <p class=\"price price--old\" *ngIf=\"oldPrice\" data-test=\"priceDiscount\">\n    {{ oldPrice | currency : 'RUB' }}\n  </p>\n</div>\n"
        },
        {
            "name": "ProductCardComponent",
            "id": "component-ProductCardComponent-3bba142f3ffdd6ba5ec7e4053e61c5dae24d0bf21aa53fcb666e03e97fb0eefaaae4aebfd2eb87acb9dfc144d3c8e9d8ecd5b84919bd67bdf4d4f57daaab3c64",
            "file": "src/app/components/product-card/product-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-card",
            "styleUrls": [
                "./product-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ProductCardData",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "productCard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { productCard } from './data';\nimport { ProductCardData } from './types';\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductCardComponent {\n  public data = productCard;\n\n  @Input() product: ProductCardData;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.product-card {\r\n  position: relative;\r\n\r\n  &__img-wrapper {\r\n    margin-bottom: 20px;\r\n    background-color: rgb($color: $color-5, $alpha: 0.4);\r\n  }\r\n\r\n  &__badge {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n    transform: translate(10px, -10px);\r\n    pointer-events: none;\r\n  }\r\n\r\n  &__title {\r\n    margin-top: 0;\r\n    margin-bottom: 15px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__price {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__card {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n  }\r\n}\r\n\r\n.img-wrapper {\r\n  position: relative;\r\n  height: 0;\r\n  padding-top: 128%;\r\n\r\n  &__link {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform: scale(1);\r\n    transition: 0.4s;\r\n\r\n    &:hover {\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n\r\n  &__img {\r\n    position: absolute;\r\n    top: 0;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: contain;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .product-card {\r\n    &__title {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .img-wrapper {\r\n    &__link {\r\n      &:hover {\r\n        transform: scale(1);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./product-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"product-card\">\n  <app-badge\n    class=\"product-card__badge\"\n    *ngIf=\"product?.isNew || product.price.discount\"\n    [bgColor]=\"product | productBadgeColor\"\n    [text]=\"product | productBadgeText\"\n  ></app-badge>\n\n  <div class=\"product-card__img-wrapper img-wrapper\">\n    <a\n      appImageUploadStatus\n      class=\"img-wrapper__link outline-focus\"\n      [routerLink]=\"['/product', product.id]\"\n    >\n      <img class=\"img-wrapper__img\" [src]=\"product.images.main\" [alt]=\"product.title\" />\n    </a>\n  </div>\n\n  <h3 class=\"product-card__title\">\n    <a class=\"outline-focus\" [routerLink]=\"['/product', product.id]\">\n      {{ product.title | uppercase }}\n    </a>\n  </h3>\n\n  <app-price class=\"product-card__price\" [price]=\"product.price\"></app-price>\n\n  <ng-content slot=\"btn\"></ng-content>\n</div>\n"
        },
        {
            "name": "ProductComponent",
            "id": "component-ProductComponent-f6a50d531a2d6bbdeb76f79760916cf060873bc74070ac578f6e2d78386f4fda216615a53cd2a9d4d2b223e37d4923802131875984c22053e174d8612d794e99",
            "file": "src/app/pages/product/component/product.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product",
            "styleUrls": [
                "./product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndexProductImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "countVisibleSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isPlatformBrowser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "offerProductsIsVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "previousParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Params",
                    "decorators": []
                },
                {
                    "name": "previousUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "IProduct | null",
                    "decorators": []
                },
                {
                    "name": "productError",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "productImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "ProductImages | null",
                    "decorators": []
                },
                {
                    "name": "productIsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "recommendedProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "IProduct[]",
                    "decorators": []
                },
                {
                    "name": "sliderOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "TOrientation",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "countChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "emitAddToCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter<ICartItem>"
                },
                {
                    "name": "emitRequestProduct",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter<undefined>"
                },
                {
                    "name": "emitSetActiveImage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_countVisibleSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "_product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "breadcrumbs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBreadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "categoryName",
                    "defaultValue": "CATEGORY_NAME",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "pageData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "enumCategories",
                    "defaultValue": "EnumCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "minCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "spaceBetweenSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "viewportWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateBreadcrumbs",
                    "args": [
                        {
                            "name": "mainRoute",
                            "type": "IRouteData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "productCategory",
                            "type": "Categories",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "productTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "mainRoute",
                            "type": "IRouteData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "productCategory",
                            "type": "Categories",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "productTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerCounter",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repeatRequestProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setActiveImage",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { pageData } from '~pages/product/data/pageData';\nimport { TOrientation } from 'src/app/components/slider/slider.component';\nimport {\n  CATEGORY_NAME,\n  CATEGORY_PARAMS,\n  Categories,\n  EnumCategories,\n  IProduct\n} from '~types/product';\nimport { ProductImages } from './types';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { IBreadcrumb } from '~components/breadcrumbs/types';\nimport { IRouteData, mainRoute, routes } from '~data/routes';\nimport { Params } from '@angular/router';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductComponent {\n  protected readonly categoryName = CATEGORY_NAME;\n  protected readonly enumCategories = EnumCategories;\n  protected data = pageData;\n  private _product: IProduct;\n  protected minCount = 0;\n  protected viewportWidth: number;\n  protected spaceBetweenSlides: number;\n  protected breadcrumbs: IBreadcrumb[] = [];\n\n  @Input() previousUrl: string;\n  @Input() previousParams: Params;\n  @Input() count = 0;\n  @Input() productError: ErrorPayload['error'] | null = null;\n  @Input() productIsLoading = false;\n  @Input() set product(product: IProduct | null) {\n    if (!product) {\n      return;\n    }\n    this._product = product;\n    this.generateBreadcrumbs(mainRoute, product.categories[0], product.title);\n  }\n  public get product() {\n    return this._product;\n  }\n  protected _countVisibleSlides: number;\n  @Input() set countVisibleSlides(count: number) {\n    this._countVisibleSlides = count;\n    this.spaceBetweenSlides = count >= 4 ? 5 : 20;\n  }\n  @Input() recommendedProducts: IProduct[];\n  @Input() activeIndexProductImage: number;\n  @Input() productImages: ProductImages | null;\n  @Input() sliderOrientation: TOrientation;\n  @Input() offerProductsIsVisible: boolean;\n  @Input() isPlatformBrowser: boolean;\n  @Output() emitAddToCart: EventEmitter<ICartItem> = new EventEmitter();\n  @Output() emitRequestProduct: EventEmitter<undefined> = new EventEmitter();\n  @Output() countChange: EventEmitter<number> = new EventEmitter();\n  @Output() emitSetActiveImage: EventEmitter<number> = new EventEmitter();\n\n  public setActiveImage(index: number): void {\n    this.emitSetActiveImage.emit(index);\n  }\n\n  public onChange(value: number): void {\n    this.countChange.emit(value);\n  }\n\n  public repeatRequestProduct(): void {\n    this.emitRequestProduct.emit();\n  }\n\n  public handlerCounter(value: number): void {\n    this.count = value >= 0 ? value : 0;\n  }\n\n  public addToCart(): void {\n    if (!this.product) {\n      return;\n    }\n    this.emitAddToCart.emit({ product: this.product, count: 1 });\n  }\n\n  protected generateBreadcrumbs(\n    mainRoute: IRouteData,\n    productCategory: Categories,\n    productTitle: IProduct['title']\n  ) {\n    this.breadcrumbs = [\n      mainRoute,\n      {\n        title: routes.catalog.title,\n        url: routes.catalog.url\n      },\n      {\n        title: CATEGORY_NAME[EnumCategories[productCategory]],\n        url: routes.catalog.url,\n        params: { category: CATEGORY_PARAMS[EnumCategories[productCategory]] }\n      },\n      { title: productTitle }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.product {\r\n  &__decor-color-bg {\r\n    &-1 {\r\n      position: relative;\r\n\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(76deg);\r\n      }\r\n\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -417px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        right: -277px;\r\n        bottom: 101px;\r\n        z-index: -1;\r\n        width: 704px;\r\n        height: 717px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: contain;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(335deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 529px;\r\n        top: 272px;\r\n        z-index: -1;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-3 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -85px;\r\n        bottom: 12px;\r\n        z-index: -1;\r\n        width: 650px;\r\n        height: 717px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(72deg);\r\n      }\r\n\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -420px;\r\n        top: 1031px;\r\n        z-index: -1;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        opacity: 0.5;\r\n        transform: rotateZ(69deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &__breadcrumbs {\r\n    display: block;\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &__loader {\r\n    max-width: 200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &__error {\r\n    max-width: 200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &__product-section {\r\n    margin-bottom: 80px;\r\n  }\r\n\r\n  &__additionally {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  &__tabs {\r\n    margin-bottom: 100px;\r\n  }\r\n}\r\n\r\n.about-product {\r\n  display: flex;\r\n\r\n  &__link {\r\n    display: none;\r\n    padding-left: 10px;\r\n  }\r\n\r\n  &__product-images-wrapper {\r\n    display: flex;\r\n    width: 50%;\r\n    margin-right: 30px;\r\n  }\r\n\r\n  &__descr-product {\r\n    width: 50%;\r\n  }\r\n}\r\n\r\n.product-images-wrapper {\r\n  &__images-slider {\r\n    flex: 1 1 30%;\r\n    margin-right: 20px;\r\n    height: 100%;\r\n  }\r\n\r\n  &__wrapper-image {\r\n    flex: 1 1 70%;\r\n  }\r\n\r\n  &__slide-content-wrapper {\r\n    height: 100%;\r\n    padding: 3px;\r\n  }\r\n\r\n  &__slide-btn {\r\n    height: 100%;\r\n    padding: 0;\r\n  }\r\n\r\n  &__slide-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n\r\n.images-slider {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &__slider {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n.control-btn {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  transition: background-color 0.3s;\r\n\r\n  &::after {\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 100%;\r\n  }\r\n\r\n  &--prev {\r\n    &::after {\r\n      transform: translate(-50%, -50%) rotateZ(90deg);\r\n    }\r\n  }\r\n\r\n  &--next {\r\n    &::after {\r\n      transform: translate(-50%, -50%) rotateZ(-90deg);\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb($color: $color-1, $alpha: 0.3);\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgb($color: $color-1, $alpha: 0.5);\r\n  }\r\n}\r\n\r\n.slide-btn {\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    background-color: $color-1;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n  }\r\n\r\n  &--active {\r\n    &::after {\r\n      opacity: 0.4;\r\n    }\r\n  }\r\n}\r\n\r\n.wrapper-image {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  &__image {\r\n    object-fit: contain;\r\n    height: 100%;\r\n    max-height: 100%;\r\n  }\r\n}\r\n\r\n.descr-product {\r\n  &__link {\r\n    display: inline-block;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 15px;\r\n    font-size: 40px;\r\n    font-family: 'Cormorant', sans-serif;\r\n  }\r\n\r\n  &__subtitle {\r\n    margin-right: 1em;\r\n  }\r\n\r\n  &__item {\r\n    margin-left: 0.5em;\r\n\r\n    &:not(:last-of-type) {\r\n      &:after {\r\n        content: ',';\r\n      }\r\n    }\r\n  }\r\n\r\n  &__price {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__descr-paragraph-1 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__descr-paragraph-2 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__descr-paragraph-3 {\r\n    margin-bottom: 70px;\r\n  }\r\n}\r\n\r\n.wrapper-controls {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &__btn {\r\n    margin-right: 30px;\r\n    flex: 0 1 50%;\r\n  }\r\n\r\n  &__counter {\r\n    flex: 0 1 30%;\r\n  }\r\n}\r\n\r\n.additionally {\r\n  &__title {\r\n    margin-bottom: 45px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.additionally-list {\r\n  display: flex;\r\n\r\n  &__additionally-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-basis: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 30px 16px;\r\n    border-radius: 20px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n}\r\n\r\n.additionally-item {\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: -15px;\r\n    left: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: #000000;\r\n    border-radius: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  &__title {\r\n    min-height: 3em;\r\n    margin-bottom: 15px;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n  }\r\n\r\n  &__paragraph {\r\n    align-self: center;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.tabs {\r\n  &--bg {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 100px;\r\n      z-index: -1;\r\n      width: 335px;\r\n      height: 501px;\r\n      background-image: image-set(\r\n        url('/assets/images/pages/product/foliage-bg.webp') type('image/webp'),\r\n        url('/assets/images/pages/product/foliage-bg.png')\r\n      );\r\n      background-size: contain;\r\n      background-position: center right;\r\n      background-repeat: no-repeat;\r\n    }\r\n  }\r\n}\r\n\r\n.tabs-list {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #555555;\r\n  }\r\n}\r\n\r\n.tabs-item {\r\n  flex: 1 1 100%;\r\n\r\n  &__btn {\r\n    width: 100%;\r\n    padding: 30px 40px;\r\n    position: relative;\r\n    color: #555555;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 3px;\r\n      border-radius: 3px;\r\n      background-color: #43ffd2;\r\n      opacity: 0;\r\n      transform: scaleX(0);\r\n      transition: transform 0.3s;\r\n    }\r\n\r\n    &[data-active='true'] {\r\n      color: #43ffd2;\r\n\r\n      &::before {\r\n        opacity: 1;\r\n        transform: scaleX(1);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.offer {\r\n  &__title {\r\n    margin-bottom: 25px;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .about-product {\r\n    &__product-images-wrapper {\r\n      flex-direction: column-reverse;\r\n    }\r\n  }\r\n\r\n  .product-images-wrapper {\r\n    &__wrapper-image {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    &__images-slider {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  .images-slider {\r\n    flex-direction: row;\r\n\r\n    &__control-btn {\r\n      width: initial;\r\n    }\r\n  }\r\n\r\n  .control-btn {\r\n    &--prev {\r\n      &::after {\r\n        transform: translate(-50%, -50%) rotateZ(0deg);\r\n      }\r\n    }\r\n    &--next {\r\n      &::after {\r\n        transform: translate(-50%, -50%) rotateZ(180deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  .additionally-list {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    &__additionally-item {\r\n      &:not(:last-child) {\r\n        margin-right: 0;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .additionally-item {\r\n    max-width: 65%;\r\n\r\n    &__title {\r\n      min-height: initial;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .wrapper-controls {\r\n    &__btn {\r\n      margin-right: 15px;\r\n    }\r\n\r\n    &__counter {\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .product {\r\n    &__container {\r\n      padding-bottom: 100px;\r\n    }\r\n\r\n    &__product-section {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    &__tabs {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  .descr-product {\r\n    &__link {\r\n      display: none;\r\n    }\r\n\r\n    &__title {\r\n      font-size: 20px;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    &__descr-paragraph-1 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__descr-paragraph-2 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__descr-paragraph-3 {\r\n      font-size: 12px;\r\n    }\r\n\r\n    &__descr-paragraph-4 {\r\n      font-size: 12px;\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n\r\n  .about-product {\r\n    flex-direction: column;\r\n\r\n    &__product-images-wrapper {\r\n      width: 100%;\r\n      margin-right: 0;\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    &__descr-product {\r\n      width: 100%;\r\n    }\r\n\r\n    &__link {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .wrapper-controls {\r\n    &__btn {\r\n      margin-right: 10px;\r\n      flex-basis: 60%;\r\n    }\r\n  }\r\n\r\n  .additionally {\r\n    &__title {\r\n      margin-bottom: 35px;\r\n    }\r\n  }\r\n\r\n  .additionally-item {\r\n    max-width: 85%;\r\n\r\n    &::after {\r\n      width: 20px;\r\n      height: 20px;\r\n      top: -10px;\r\n    }\r\n\r\n    &__title {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .tabs {\r\n    &__tabs-wrapper {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .offer {\r\n    &__title {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./product.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "product": {
                    "name": "product",
                    "setSignature": {
                        "name": "product",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "product",
                                "type": "IProduct | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "product",
                                "type": "IProduct | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "product",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                },
                "countVisibleSlides": {
                    "name": "countVisibleSlides",
                    "setSignature": {
                        "name": "countVisibleSlides",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "count",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "count",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"product\">\n  <div class=\"product__decor-color-bg-1\"></div>\n  <div class=\"product__decor-color-bg-2\"></div>\n  <div class=\"product__decor-color-bg-3\"></div>\n\n  <div class=\"product__container container--pt\">\n    <app-breadcrumbs class=\"product__breadcrumbs container\" [links]=\"breadcrumbs\"></app-breadcrumbs>\n\n    <app-error-block\n      class=\"container product__error\"\n      *ngIf=\"productError\"\n      (emitRepeatRequest)=\"repeatRequestProduct()\"\n    ></app-error-block>\n\n    <div class=\"container\">\n      <app-loader\n        class=\"product__loader\"\n        *ngIf=\"productIsLoading\"\n        text=\"Печатаем страницу\"\n      ></app-loader>\n    </div>\n\n    <ng-container *ngIf=\"product && !productIsLoading\">\n      <div class=\"product__product-section product-section\">\n        <div class=\"product-section__about-product about-product container\">\n          <div class=\"about-product__product-images-wrapper product-images-wrapper\">\n            <div class=\"product-images-wrapper__images-slider images-slider\">\n              <ng-container *ngIf=\"isPlatformBrowser && productImages && productImages.length\">\n                <button\n                  aria-label=\"Предыдущие слайды\"\n                  class=\"images-slider__control-btn control-btn control-btn--prev btn-reset arrow-mini outline-focus\"\n                  (click)=\"imagesSlider.prevStep()\"\n                ></button>\n\n                <app-slider\n                  #imagesSlider\n                  class=\"images-slider__slider\"\n                  [step]=\"2\"\n                  [countVisibleSlides]=\"_countVisibleSlides\"\n                  [spaceBetweenSlides]=\"spaceBetweenSlides\"\n                  [orientation]=\"sliderOrientation\"\n                >\n                  <app-slide *ngFor=\"let image of productImages; let index = index\">\n                    <div class=\"product-images-wrapper__slide-content-wrapper\">\n                      <button\n                        class=\"btn-reset outline-focus product-images-wrapper__slide-btn slide-btn\"\n                        [ngClass]=\"{ 'slide-btn--active': activeIndexProductImage === index }\"\n                        aria-label=\"Выбрать фотографию для просмотра\"\n                        (click)=\"setActiveImage(index)\"\n                      >\n                        <img\n                          appImageUploadStatus\n                          class=\"product-images-wrapper__slide-image\"\n                          [src]=\"image\"\n                          [alt]=\"product.title\"\n                        />\n                      </button>\n                    </div>\n                  </app-slide>\n                </app-slider>\n\n                <button\n                  aria-label=\"Следующие слайды\"\n                  class=\"images-slider__control-btn control-btn control-btn--next btn-reset arrow-mini outline-focus\"\n                  (click)=\"imagesSlider.prevStep()\"\n                ></button>\n              </ng-container>\n            </div>\n\n            <div class=\"product-images-wrapper__wrapper-image wrapper-image\">\n              <img\n                class=\"wrapper-image__image\"\n                [src]=\"productImages?.[activeIndexProductImage]\"\n                [alt]=\"product.title\"\n              />\n            </div>\n          </div>\n\n          <div class=\"about-product__descr-product descr-product\">\n            <a\n              class=\"descr-product__link arrow-mini box-shadow-focus\"\n              [routerLink]=\"[previousUrl]\"\n              [queryParams]=\"previousParams\"\n              routerLinkActive=\"router-link-active\"\n              >назад\n            </a>\n\n            <h1 class=\"descr-product__title text-uppercase\">\n              {{ product.title }}\n            </h1>\n\n            <app-price class=\"descr-product__price\" [price]=\"product.price\"></app-price>\n\n            <p class=\"descr-product__descr-paragraph-2 text-line-height-1-6\">\n              {{ product.descr }}\n            </p>\n\n            <p class=\"descr-product__descr-paragraph-3 text-line-height-1-6\">\n              <span class=\"descr-product__subtitle text-weight-600\">{{ data.categories }}</span>\n              <span\n                class=\"text-weight-300 descr-product__item\"\n                *ngFor=\"let category of product.categories\"\n                >{{ category | categoryName }}</span\n              >\n            </p>\n\n            <div class=\"descr-product__wrapper-controls wrapper-controls\">\n              <button\n                class=\"wrapper-controls__btn text-uppercase\"\n                appUiButton=\"2\"\n                (click)=\"addToCart()\"\n              >\n                В корзину\n              </button>\n\n              <app-counter\n                [value]=\"count\"\n                (valueChange)=\"onChange($event)\"\n                class=\"wrapper-controls__counter\"\n                (emitDecrValue)=\"handlerCounter($event)\"\n                (emitIncrValue)=\"handlerCounter($event)\"\n                [min]=\"minCount\"\n              ></app-counter>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <section class=\"product__additionally additionally\">\n        <div class=\"additionally__container container\">\n          <h2 class=\"additionally__title text-color--3 text-uppercase\">\n            {{ data.section.additionally.title }}\n          </h2>\n\n          <ul class=\"additionally__additionally-list additionally-list list-reset\">\n            <li\n              class=\"additionally-list__additionally-item additionally-item card-background\"\n              *ngFor=\"let item of data.section.additionally.list\"\n            >\n              <h3 class=\"additionally-item__title text-uppercase text-color--1\">\n                {{ item.title }}\n              </h3>\n\n              <p class=\"additionally-item__paragraph\">\n                {{ item.text }}\n              </p>\n            </li>\n          </ul>\n        </div>\n      </section>\n\n      <div class=\"product__tabs tabs tabs--bg\">\n        <div class=\"tabs__container container\">\n          <app-tabs>\n            <app-tab tabTitle=\"Доставка и оплата\">\n              <app-delivery></app-delivery>\n            </app-tab>\n\n            <app-tab tabTitle=\"отзывы\" [isCache]=\"true\">\n              <ng-template>\n                <app-reviews></app-reviews>\n              </ng-template>\n            </app-tab>\n          </app-tabs>\n        </div>\n      </div>\n\n      <div class=\"product__offer offer\" *ngIf=\"offerProductsIsVisible && isPlatformBrowser\">\n        <div class=\"offer__container container\">\n          <h2 class=\"offer__title text-color--1 text-uppercase\">вам может понравиться:</h2>\n        </div>\n\n        <app-products-offer-container></app-products-offer-container>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "ProductContainerComponent",
            "id": "component-ProductContainerComponent-f2e0056aeb6f74ef9fda7fc96060185d8fbade49029f713ed8847e926a0c811ff75c85bc994579f5476638cef3fe629415379f566cd98091543aa3867c0c06bf",
            "file": "src/app/pages/product/product-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct | null",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeIndexProductImage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "countVisibleSlides",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isPlatformBrowser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "offerProductsIsVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "previousUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "previousUrlParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "productError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "productImages",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductImages | null",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "productIsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "sliderOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TOrientation",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "createArrayFromImages",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ProductImages | null",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeCount",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repeatRequestProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setActiveImage",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setPlatform",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToPreviousUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToRouteData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToViewportSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { Subject, combineLatest, map, takeUntil } from 'rxjs';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { TOrientation } from 'src/app/components/slider/slider.component';\nimport { IProduct } from '~types/product';\nimport { ProductImages } from './component/types';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { ViewportSizeService } from 'src/app/services/events/resize/viewport-size.service';\nimport { ProductContainerService } from 'src/app/services/product-container/product-container.service';\nimport { UrlRouteService } from 'src/app/services/url-route/url-route.service';\nimport { routes } from '~data/routes';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { description } from './data/meta';\nimport { HydrationStoreService } from 'src/app/services/hydration-store.service';\nimport { pages } from 'src/app/CEO';\n\n@Component({\n  selector: 'app-product-container',\n  templateUrl: './product-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null>;\n  private productId: number;\n  private _product: IProduct | null;\n  protected productImages: ProductImages | null = null;\n  protected activeIndexProductImage = 0;\n  protected previousUrl: string;\n  protected previousUrlParams: Params;\n  protected sliderOrientation: TOrientation;\n  protected offerProductsIsVisible: boolean;\n  protected countVisibleSlides = 4;\n  protected isPlatformBrowser: boolean;\n  protected set product(product: IProduct | null) {\n    this._product = product;\n    if (!product) {\n      return;\n    }\n    this.productImages = this.createArrayFromImages(product);\n  }\n  protected get product(): IProduct | null {\n    return this._product;\n  }\n  protected count = 0;\n  protected productIsLoading = false;\n  protected productError: ErrorPayload['error'] | null;\n\n  constructor(\n    private title: Title,\n    private meta: Meta,\n    private activeRoute: ActivatedRoute,\n    private productContainerService: ProductContainerService,\n    private vss: ViewportSizeService,\n    private cdr: ChangeDetectorRef,\n    private urlRouteService: UrlRouteService,\n    private hydrationStoreService: HydrationStoreService\n  ) {\n    this.destroySubject = new Subject();\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.setPlatform();\n    this.subscribeToRouteData();\n    this.subscribeToProduct();\n    this.subscribeToViewportSizes();\n    this.subscribeToPreviousUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private setPlatform(): void {\n    this.isPlatformBrowser = this.hydrationStoreService.isPlatformBrowser;\n  }\n\n  private subscribeToProduct(): void {\n    combineLatest([\n      this.productContainerService.getProduct(),\n      this.productContainerService.productIsLoading(),\n      this.productContainerService.getProductError()\n    ])\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe({\n        next: ([product, isLoading, error]) => {\n          this.productIsLoading = isLoading;\n          this.product = product;\n          this.productError = error;\n          if (product) {\n            this.meta.addTag(this.productContainerService.getKeywordsMeta(product));\n            this.title.setTitle(`${product.title} - ${pages.product.title}`);\n          }\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  private subscribeToRouteData(): void {\n    this.activeRoute.data\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((data) => data['product'])\n      )\n      .subscribe((productId) => {\n        this.productId = Number(productId);\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToViewportSizes(): void {\n    this.vss.resizeObservable$\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((sizes) => sizes.width)\n      )\n      .subscribe((width) => {\n        this.offerProductsIsVisible = width > 576;\n        this.sliderOrientation = width > 992 ? 'vertical' : 'horizontal';\n        this.countVisibleSlides = width > 992 ? 3 : 4;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToPreviousUrl(): void {\n    this.urlRouteService.previousUrlStream$\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((previousUrlInfo) => {\n        this.previousUrl = previousUrlInfo.url ?? routes.catalog.url;\n        this.previousUrlParams = previousUrlInfo.params ?? {};\n      });\n  }\n\n  protected onChangeCount(value: number): void {\n    this.count = value;\n  }\n\n  protected repeatRequestProduct(): void {\n    this.productContainerService.requestProduct(this.productId);\n  }\n\n  protected addToCart(): void {\n    if (!this.product) {\n      return;\n    }\n    if (this.count < 1) {\n      return;\n    }\n    this.productContainerService.addToCart({\n      product: this.product,\n      count: this.count\n    });\n  }\n\n  protected setActiveImage(index: number) {\n    this.activeIndexProductImage = index;\n  }\n\n  private createArrayFromImages(product: IProduct): ProductImages | null {\n    if (product && product.images.main && product.images?.other.length) {\n      return [...product.images.other, product.images.main];\n    }\n    if (product && product.images?.main) {\n      return [product.images.main];\n    }\n    return null;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productContainerService",
                        "type": "ProductContainerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "urlRouteService",
                        "type": "UrlRouteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productContainerService",
                        "type": "ProductContainerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "urlRouteService",
                        "type": "UrlRouteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hydrationStoreService",
                        "type": "HydrationStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "product": {
                    "name": "product",
                    "setSignature": {
                        "name": "product",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "product",
                                "type": "IProduct | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "product",
                                "type": "IProduct | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "product",
                        "type": "",
                        "returnType": "IProduct | null",
                        "line": 47
                    }
                }
            },
            "templateData": "<app-product\n  [previousUrl]=\"previousUrl\"\n  [previousParams]=\"previousUrlParams\"\n  [product]=\"product\"\n  [productImages]=\"productImages\"\n  [isPlatformBrowser]=\"isPlatformBrowser\"\n  [activeIndexProductImage]=\"activeIndexProductImage\"\n  [sliderOrientation]=\"sliderOrientation\"\n  [offerProductsIsVisible]=\"offerProductsIsVisible\"\n  [count]=\"count\"\n  [countVisibleSlides]=\"countVisibleSlides\"\n  (countChange)=\"onChangeCount($event)\"\n  [productIsLoading]=\"productIsLoading\"\n  [productError]=\"productError\"\n  (emitRequestProduct)=\"repeatRequestProduct()\"\n  (emitAddToCart)=\"addToCart()\"\n  (emitSetActiveImage)=\"setActiveImage($event)\"\n></app-product>\n"
        },
        {
            "name": "ProductItemComponent",
            "id": "component-ProductItemComponent-4feaac6c2be58fa11bddd0465119fb338a582a12fa39db3522844add69c2e080b94633956b528300a1cb4f5d164947d344394c7022535748cab37a9ef4c745f2",
            "file": "src/app/components/product-item/product-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-item",
            "styleUrls": [
                "./product-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IProduct",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "countChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "emitDeleteFromCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteFromCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProductPrice",
                    "args": [
                        {
                            "name": "price",
                            "type": "IPrice",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "IPrice",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeCount",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IPrice, IProduct } from 'src/types/product';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductItemComponent {\n  public price: number;\n\n  private _product: IProduct;\n  @Input() set product(product: IProduct) {\n    this._product = product;\n    this.price = this.getProductPrice(product.price);\n  }\n  get product(): IProduct {\n    return this._product;\n  }\n\n  @Input() minCount: number;\n  @Input() count: number;\n  @Output() countChange: EventEmitter<number> = new EventEmitter();\n  @Output() emitDeleteFromCart: EventEmitter<number> = new EventEmitter();\n\n  private getProductPrice(price: IPrice): number {\n    return price.value - price.discount;\n  }\n\n  public onChangeCount(value: number): void {\n    this.countChange.emit(value);\n  }\n\n  public deleteFromCart(id: number): void {\n    this.emitDeleteFromCart.emit(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.cart-item {\r\n  display: flex;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n\r\n  &__img-wrapper-link {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &__content {\r\n    flex: 1 1 100%;\r\n  }\r\n\r\n  &__descr {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &__controls {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &__title {\r\n    margin-right: 20px;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  &__counter {\r\n    max-width: 120px;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &__btn {\r\n    font-size: 10px;\r\n  }\r\n}\r\n\r\n.img-wrapper-link {\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 0 0 60px;\r\n  background-color: $color-6;\r\n\r\n  &__img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .cart-item {\r\n    &__title-link {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./product-item.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "product": {
                    "name": "product",
                    "setSignature": {
                        "name": "product",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "product",
                                "type": "IProduct",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "product",
                                "type": "IProduct",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "product",
                        "type": "",
                        "returnType": "IProduct",
                        "line": 18
                    }
                }
            },
            "templateData": "<div class=\"cart-item block-bottom-underline\">\n  <a\n    class=\"cart-item__img-wrapper-link img-wrapper-link outline-focus\"\n    [routerLink]=\"['/product', product.id]\"\n    aria-label=\"На страницу продукта\"\n  >\n    <img class=\"img-wrapper-link__img\" [src]=\"product.images.main\" [alt]=\"product.title\" />\n  </a>\n\n  <div class=\"cart-item__content\">\n    <div class=\"cart-item__descr\">\n      <h3 class=\"cart-item__title text-uppercase\">\n        <a\n          class=\"cart-item__title-link outline-focus\"\n          [routerLink]=\"['/product', product.id]\"\n          aria-label=\"На страницу продукта\"\n        >\n          {{ product.title }}\n        </a>\n      </h3>\n\n      <p class=\"cart-item__price text-color--1\">{{ price | currency : 'RUB' }}</p>\n    </div>\n\n    <div class=\"cart-item__controls\">\n      <app-counter\n        class=\"cart-item__counter\"\n        [value]=\"count\"\n        [min]=\"minCount\"\n        (valueChange)=\"onChangeCount($event)\"\n      ></app-counter>\n\n      <button\n        class=\"cart-item__btn btn-reset text-uppercase text-color--4 outline-focus\"\n        (click)=\"deleteFromCart(product.id)\"\n        aria-label=\"Удалить товар из корзины\"\n      >\n        <span class=\"text-underline\">Удалить</span>\n      </button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ProductListCardComponent",
            "id": "component-ProductListCardComponent-d5f9917ed12097c6b0bcf9b3958cd674ede3ad653ce2f7550df9a9a53900eb2d69ab6b68398554589df17a3fec4a0daa67c5f7e1eb4b5eada5819d6305c09fbe",
            "file": "src/app/components/product-list-card/product-list-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-list-card",
            "styleUrls": [
                "./product-list-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-list-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitRepeatRequest",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "repeatRequestProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-product-list-card',\n  templateUrl: './product-list-card.component.html',\n  styleUrls: ['./product-list-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductListCardComponent {\n  @Input() isLoading: boolean;\n  @Input() error: boolean;\n  @Output() emitRepeatRequest: EventEmitter<void> = new EventEmitter();\n\n  public repeatRequestProducts() {\n    this.emitRepeatRequest.emit();\n  }\n\n  get isNotLoading(): boolean {\n    return !this.isLoading;\n  }\n  get isNotError(): boolean {\n    return !this.error;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".products-list {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(208px, 1fr));\r\n  grid-column-gap: 30px;\r\n  grid-row-gap: 60px;\r\n\r\n  &__loader {\r\n    position: absolute;\r\n    left: 50%;\r\n    margin: 0 auto;\r\n    transform: translateX(-50%);\r\n  }\r\n}\r\n",
                    "styleUrl": "./product-list-card.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isNotLoading": {
                    "name": "isNotLoading",
                    "getSignature": {
                        "name": "isNotLoading",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 18
                    }
                },
                "isNotError": {
                    "name": "isNotError",
                    "getSignature": {
                        "name": "isNotError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"products-list\">\n  <app-loader *ngIf=\"isLoading\" class=\"products-list__loader\" text=\"фотографируем...\"></app-loader>\n\n  <app-error-block\n    *ngIf=\"error\"\n    text=\"Произошла ошибка\"\n    (emitRepeatRequest)=\"repeatRequestProducts()\"\n  ></app-error-block>\n\n  <ng-content *ngIf=\"isNotLoading && isNotError\"></ng-content>\n</div>\n"
        },
        {
            "name": "ProductsOfferContainerComponent",
            "id": "component-ProductsOfferContainerComponent-9858689fcbee3f1fe91323c5360e4a81a48fb5887977bcc14a978f0bc7e339c62d5b7d176fe847d8cb5de85207fb821d821f8fb7404d97e2bdd318f882e2c09c",
            "file": "src/app/containers/products-offer-container/products-offer-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products-offer-container",
            "styleUrls": [
                "./products-offer-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./products-offer-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "offerProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { IProduct } from '~types/product';\n\n@Component({\n  selector: 'app-products-offer-container',\n  templateUrl: './products-offer-container.component.html',\n  styleUrls: ['./products-offer-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductsOfferContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  protected isLoading: boolean;\n  protected offerProducts: IProduct[];\n  protected width: number;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private productsService: ProductsService,\n    private cartService: CartService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToProducts();\n    this.subscribeToProductsLoading();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToProducts(): void {\n    this.productsService\n      .getProducts()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((products) => {\n        this.offerProducts = products;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToProductsLoading(): void {\n    this.productsService\n      .productsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  protected addToCart(cartItem: ICartItem): void {\n    this.cartService.addToCart(cartItem);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./products-offer-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-products-slider\n  [products]=\"offerProducts\"\n  [isLoading]=\"isLoading\"\n  (emitAddToCart)=\"addToCart($event)\"\n  data-test=\"productsSlider\"\n></app-products-slider>\n"
        },
        {
            "name": "ProductsSliderComponent",
            "id": "component-ProductsSliderComponent-b045ea22639128f64f4f99fb2d07b8f7c9a78e176c26dc18d5dd40985c359b662af8d7e1ee4f358f05fcd4a11e99e13a2394af23484c9860ff235b6ffd819bb0",
            "file": "src/app/components/products-slider/products-slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products-slider",
            "styleUrls": [
                "./products-slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./products-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "IProduct[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitAddToCart",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<ICartItem>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "countVisibleSlides",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "ICartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToViewportSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { IProduct } from '~types/product';\nimport { ICartItem } from 'src/app/services/cart-storage/cart-storage.service';\nimport { ViewportSizeService } from 'src/app/services/events/resize/viewport-size.service';\n\n@Component({\n  selector: 'app-products-slider',\n  templateUrl: './products-slider.component.html',\n  styleUrls: ['./products-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductsSliderComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  protected countVisibleSlides = 4;\n  @Input() products: IProduct[] = [];\n  @Input() isLoading: boolean;\n  @Output() emitAddToCart: EventEmitter<ICartItem> = new EventEmitter();\n\n  constructor(private cdr: ChangeDetectorRef, private vss: ViewportSizeService) {}\n\n  ngOnInit(): void {\n    this.subscribeToViewportSize();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  protected addToCart(cartItem: ICartItem): void {\n    this.emitAddToCart.emit(cartItem);\n  }\n\n  private subscribeToViewportSize(): void {\n    this.vss.resizeObservable$.pipe(takeUntil(this.destroySubject)).subscribe((size) => {\n      this.countVisibleSlides = size.width > 991 ? 4 : 3;\n      this.cdr.markForCheck();\n    });\n  }\n\n  get productsNotEmpty(): boolean {\n    return !!this.products.length;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.popular-section__loader {\r\n  margin: 0 auto;\r\n  grid-column: 2/3;\r\n}\r\n\r\n.slider {\r\n  &__card {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n  }\r\n}\r\n\r\n.wrapper-slider {\r\n  display: grid;\r\n  grid-template-columns: 80px 1fr 80px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  &__slider {\r\n    order: 2;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &__btn-prev {\r\n    order: 1;\r\n    align-self: center;\r\n    padding: 20px 5px;\r\n  }\r\n\r\n  &__btn-next {\r\n    order: 3;\r\n    align-self: center;\r\n    padding: 20px 5px;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .wrapper-slider {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n\r\n    &__btn-prev {\r\n      width: 60px;\r\n    }\r\n    &__btn-next {\r\n      width: 60px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .wrapper-slider {\r\n    grid-template-columns: 1fr;\r\n\r\n    &__slider {\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n    }\r\n\r\n    &__btn-prev {\r\n      display: none;\r\n    }\r\n    &__btn-next {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./products-slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vss",
                        "type": "ViewportSizeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "productsNotEmpty": {
                    "name": "productsNotEmpty",
                    "getSignature": {
                        "name": "productsNotEmpty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 51
                    }
                }
            },
            "templateData": "<div class=\"popular-section__wrapper-slider wrapper-slider\">\n  <app-loader\n    *ngIf=\"isLoading\"\n    class=\"popular-section__loader\"\n    text=\"фотографируем...\"\n    data-test=\"loader\"\n  ></app-loader>\n\n  <ng-container *ngIf=\"productsNotEmpty\">\n    <app-slider\n      class=\"wrapper-slider__slider container\"\n      #popularProductsSlider\n      [step]=\"3\"\n      [countVisibleSlides]=\"countVisibleSlides\"\n      [spaceBetweenSlides]=\"30\"\n      data-test=\"slider\"\n    >\n      <app-slide *ngFor=\"let product of products\">\n        <app-product-card [product]=\"product\" class=\"slider__card\" data-test=\"product\">\n          <button\n            appUiButton=\"2\"\n            #btn\n            class=\"text-uppercase\"\n            (click)=\"addToCart({product, count: 1})\"\n            data-test=\"btnAddToCart\"\n          >\n            В корзину\n          </button>\n        </app-product-card>\n      </app-slide>\n    </app-slider>\n\n    <button\n      class=\"wrapper-slider__btn-prev btn-prev btn-reset outline-focus\"\n      (click)=\"popularProductsSlider.prevStep()\"\n      aria-label=\"Предыдущие слайды\"\n    >\n      <app-icon class=\"btn-prev__icon\" width=\"full\" icon=\"arrow-right\"></app-icon>\n    </button>\n\n    <button\n      class=\"wrapper-slider__btn-next btn-next btn-reset outline-focus\"\n      (click)=\"popularProductsSlider.nextStep()\"\n      aria-label=\"Следующие слайды\"\n    >\n      <app-icon icon=\"arrow-right\" width=\"full\"></app-icon>\n    </button>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "PromocodeFieldComponent",
            "id": "component-PromocodeFieldComponent-67ed8fdc3feea5bb13f47df0bbafff6f429562417e656bad0889a4eefbb78d5831eac7d3209cbbb5dfbf8682f3bc8ae5448cdbe2ee832efa1fcfe4ba8be84817",
            "file": "src/app/components/promocode-field/promocode-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-promocode-field",
            "styleUrls": [
                "./promocode-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./promocode-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "promocodeData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IPromocodeData",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSubmitForm",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<IPromocodeData>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "promocodeControl",
                    "defaultValue": "new FormControl<IPromocodeData['promocode']>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { isNonNull } from 'src/types';\nimport { IPromocodeData } from './types';\n\n@Component({\n  selector: 'app-promocode-field',\n  templateUrl: './promocode-field.component.html',\n  styleUrls: ['./promocode-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PromocodeFieldComponent {\n  public promocodeControl = new FormControl<IPromocodeData['promocode']>('');\n  @Input() set promocodeData(data: IPromocodeData) {\n    this.promocodeControl.setValue(data.promocode);\n  }\n\n  @Output() emitSubmitForm: EventEmitter<IPromocodeData> = new EventEmitter();\n\n  public handlerClick(): void {\n    if (this.promocodeControl.invalid || !isNonNull(this.promocodeControl.value)) {\n      return;\n    }\n    this.emitSubmitForm.emit({ promocode: this.promocodeControl.value });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\n.promocode {\r\n  display: flex;\r\n\r\n  &__input {\r\n    margin-right: 20px;\r\n    font-size: 19px;\r\n\r\n    &::placeholder {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./promocode-field.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "promocodeData": {
                    "name": "promocodeData",
                    "setSignature": {
                        "name": "promocodeData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "IPromocodeData",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "IPromocodeData",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"promocode\">\n  <input\n    class=\"promocode__input field field--default field--focus-default field--hover-default\"\n    type=\"text\"\n    placeholder=\"Промокод\"\n    name=\"promocode\"\n    [formControl]=\"promocodeControl\"\n    appEmpty\n  />\n\n  <button\n    class=\"promocode__btn text-uppercase\"\n    (click)=\"handlerClick()\"\n    type=\"button\"\n    appUiButton=\"2\"\n  >\n    Применить\n  </button>\n</div>\n"
        },
        {
            "name": "PromocodeFieldContainerComponent",
            "id": "component-PromocodeFieldContainerComponent-0168c4fa23230a41490288849179620bc50a8fae323fdb528e4245c0189a17413f4b024e0bcf9644f118d5aef75632414cb976bb16ddb97d248a9067a5823dc3",
            "file": "src/app/containers/promocode-field-container/promocode-field-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-promocode-field-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./promocode-field-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handlerSubmitForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "IPromocodeData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IPromocodeData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IPromocodeData } from 'src/app/components/promocode-field/types';\nimport { PromocodeService } from 'src/app/services/promocode/promocode.service';\n\n@Component({\n  selector: 'app-promocode-field-container',\n  templateUrl: './promocode-field-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PromocodeFieldContainerComponent {\n  constructor(private promocodeService: PromocodeService) {}\n\n  protected handlerSubmitForm(data: IPromocodeData): void {\n    this.promocodeService.getDiscount(data.promocode);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "promocodeService",
                        "type": "PromocodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "promocodeService",
                        "type": "PromocodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-promocode-field\n  (emitSubmitForm)=\"handlerSubmitForm($event)\"\n  data-test=\"promocodeField\"\n></app-promocode-field>\n"
        },
        {
            "name": "QuestionsSectionComponent",
            "id": "component-QuestionsSectionComponent-66e9d37f37fe881d28e440d1db7b725957f6aa94d5015de8dc7f8c556820ccb031319ee4a0caf8c98d0b4bba7c52672e8911facd16154439a32559df33f07ba3",
            "file": "src/app/page-components/main/questions-section/questions-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-questions-section",
            "styleUrls": [
                "./questions-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./questions-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { pageData } from '~pages/main/data/pageData';\n\n@Component({\n  selector: 'app-questions-section',\n  templateUrl: './questions-section.component.html',\n  styleUrls: ['./questions-section.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuestionsSectionComponent {\n  public data = pageData.questions;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.feedback-section {\r\n  position: relative;\r\n  background-color: #0f2222;\r\n  z-index: 0;\r\n\r\n  &__container {\r\n    display: flex;\r\n    padding-top: 40px;\r\n    padding-bottom: 80px;\r\n  }\r\n\r\n  &__section-title {\r\n    padding-right: 20px;\r\n  }\r\n\r\n  &__section-title-part-2 {\r\n    padding-left: 1em;\r\n  }\r\n}\r\n\r\n.decor-color-bg {\r\n  z-index: -1;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 15%;\r\n    left: -13%;\r\n    width: 810px;\r\n    height: 550px;\r\n    background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 15%;\r\n    left: 0;\r\n    width: 810px;\r\n    height: 550px;\r\n    background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    background-position: center;\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-md) {\r\n  .feedback-section {\r\n    &::after {\r\n      left: -27%;\r\n    }\r\n\r\n    &::before {\r\n      left: -15%;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .feedback-section {\r\n    &__container {\r\n      flex-direction: column;\r\n      padding-top: 40px;\r\n      padding-bottom: 40px;\r\n    }\r\n\r\n    &__section-title {\r\n      margin-bottom: 115px;\r\n    }\r\n  }\r\n\r\n  .decor-color-bg {\r\n    &::before {\r\n      left: 0;\r\n      top: -80px;\r\n    }\r\n\r\n    &::after {\r\n      left: 38px;\r\n      top: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./questions-section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"feedback-section\">\n  <div class=\"decor-color-bg\"></div>\n\n  <div class=\"container feedback-section__container\">\n    <h2 class=\"section-title feedback-section__section-title\">\n      <p class=\"feedback-section__section-title-part-1\">ОСТАЛИСЬ</p>\n      <p class=\"feedback-section__section-title-part-2\">ВОПРОСЫ?</p>\n    </h2>\n\n    <app-feedback-form-container></app-feedback-form-container>\n  </div>\n</div>\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-34a90f29e9ed60b0f1302310361a8b12ebebc04c457351c1a9aae75c875c095a897554d9646639e9194ea65296901675cd7e799c497c4f1721682af4825f83a4",
            "file": "src/app/components/radio-button/radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RadioButtonComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-radio-button",
            "styleUrls": [
                "./radio-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "attrValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_id",
                    "defaultValue": "this.utilsService.generateRandomString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onChangeCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnChangeCallback<string>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouchedCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnTouchedCallback",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change', ['$event.target.value']"
                        }
                    ],
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focusout'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "RadioOnChangeCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "RadioOnChangeCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43
                },
                {
                    "name": "focusout",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostListener, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UtilsService } from 'src/app/services/utils/utils.service';\nimport { OnChangeCallback, OnTouchedCallback } from 'src/types/controlValueAccessor';\nimport { RadioOnChangeCallback } from './types';\n\n@Component({\n  selector: 'app-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RadioButtonComponent),\n      multi: true\n    }\n  ]\n})\nexport class RadioButtonComponent implements ControlValueAccessor {\n  @Input() attrName: string;\n  @Input() attrValue: string;\n  @Input() labelValue: string;\n\n  private _id: string = this.utilsService.generateRandomString();\n  protected get id() {\n    return this._id;\n  }\n\n  protected isChecked = false;\n\n  constructor(private utilsService: UtilsService) {}\n\n  private _value: string;\n  public get value(): string {\n    return this._value;\n  }\n\n  private onChangeCallBack: OnChangeCallback<string>;\n  private onTouchedCallBack: OnTouchedCallback;\n\n  @HostListener('change', ['$event.target.value'])\n  private onChange(value: string) {\n    if (!this.onChangeCallBack) {\n      return;\n    }\n    this.onChangeCallBack(value);\n  }\n\n  @HostListener('focusout')\n  private onFocusout() {\n    if (!this.onTouchedCallBack) {\n      return;\n    }\n    this.onTouchedCallBack();\n  }\n\n  public writeValue(value: string): void {\n    this._value = value;\n    this.isChecked = value === this.attrValue;\n  }\n\n  public registerOnChange(fn: RadioOnChangeCallback): void {\n    this.onChangeCallBack = fn;\n  }\n\n  public registerOnTouched(fn: OnTouchedCallback): void {\n    this.onTouchedCallBack = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.radio-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &__custom-radio {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 16px;\r\n    height: 16px;\r\n    margin-right: 12px;\r\n    pointer-events: none;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid $color-4;\r\n      border-radius: 50%;\r\n      outline-color: transparent;\r\n      outline-width: 2px;\r\n      outline-style: solid;\r\n      transition: outline-color 0.3s;\r\n    }\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      z-index: 3;\r\n      width: 9px;\r\n      height: 9px;\r\n      background-color: $color-4;\r\n      border-radius: 50%;\r\n      opacity: 0;\r\n      transform: translate(-50%, -50%) scale(0);\r\n      transition: transform 0.3s;\r\n    }\r\n  }\r\n\r\n  &__input {\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n\r\n    &:checked ~ .radio-wrapper__custom-radio {\r\n      &::after {\r\n        opacity: 1;\r\n        transform: translate(-50%, -50%) scale(1);\r\n      }\r\n    }\r\n\r\n    &:focus ~ .radio-wrapper__custom-radio {\r\n      &::before {\r\n        outline-color: $color-1;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__label {\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./radio-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "string",
                        "returnType": "string",
                        "line": 35
                    }
                }
            },
            "templateData": "<div class=\"radio-wrapper\">\n  <input\n    class=\"radio-wrapper__input\"\n    [id]=\"id\"\n    type=\"radio\"\n    [name]=\"attrName\"\n    [value]=\"attrValue\"\n    [checked]=\"isChecked\"\n  />\n\n  <div class=\"radio-wrapper__custom-radio\"></div>\n\n  <label class=\"radio-wrapper__label text-uppercase\" [for]=\"id\">{{\n    labelValue\n  }}</label>\n</div>\n"
        },
        {
            "name": "RangeComponent",
            "id": "component-RangeComponent-bed889b394f0838d464f82d0c281586a37ff3c5b35f87d926c87f58c4177ac688f374e422442d308392d8b0872ff2aa7deb37210518cbce6bb54e916cdf0b515",
            "file": "src/app/components/range/range.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RangeComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-range",
            "styleUrls": [
                "./range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./range.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "gap",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "IRangeValue",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_value",
                    "defaultValue": "{ from: this.min, to: this.max }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRangeValue",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "callbackOnChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RangeCallbackOnChange | undefined",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "callbackOnTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnTouchedCallback | undefined",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "this.utilsService.generateRandomString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inputRangeFromElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputRangeFrom'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inputRangeToElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputRangeTo'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeRangeFrom",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "changeRangeTo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handlerInputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "RangeCallbackOnChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "RangeCallbackOnChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValueRange",
                    "args": [
                        {
                            "name": "rangeTarget",
                            "type": "RangeTarget",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "rangeTarget",
                            "type": "RangeTarget",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateRangeState",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "AtLeastOne<IRangeValue>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "AtLeastOne<IRangeValue>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "rangeValue",
                            "type": "IRangeValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rangeValue",
                            "type": "IRangeValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AtLeastOne } from 'src/types';\nimport { RangeTarget, RangeCallbackOnChange, IRangeValue } from './types';\nimport { OnTouchedCallback } from '~types/controlValueAccessor';\nimport { UtilsService } from 'src/app/services/utils/utils.service';\n\n@Component({\n  selector: 'app-range',\n  templateUrl: './range.component.html',\n  styleUrls: ['./range.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RangeComponent),\n      multi: true\n    }\n  ]\n})\nexport class RangeComponent implements ControlValueAccessor {\n  private id = this.utilsService.generateRandomString();\n  @ViewChild('inputRangeFrom')\n  private inputRangeFromElRef: ElementRef<HTMLInputElement>;\n  @ViewChild('inputRangeTo') inputRangeToElRef: ElementRef<HTMLInputElement>;\n\n  @Input() gap = 1;\n  @Input() min = 0;\n  @Input() max = 10;\n\n  private _value: IRangeValue = { from: this.min, to: this.max };\n  @Input() set value(newValue: IRangeValue) {\n    this._value = newValue;\n\n    if (this.callbackOnChange) {\n      this.callbackOnChange(newValue);\n    }\n    this.cdr.markForCheck();\n  }\n  get value(): IRangeValue {\n    return this._value;\n  }\n\n  private callbackOnChange: RangeCallbackOnChange | undefined;\n  private callbackOnTouched: OnTouchedCallback | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, private utilsService: UtilsService) {}\n\n  public writeValue(rangeValue: IRangeValue): void {\n    this.updateRangeState(rangeValue);\n  }\n\n  public registerOnChange(fn: RangeCallbackOnChange): void {\n    this.callbackOnChange = fn;\n  }\n\n  public registerOnTouched(fn: OnTouchedCallback): void {\n    this.callbackOnTouched = fn;\n  }\n\n  protected handlerInputEvent(event: Event): void {\n    const targetRange: HTMLInputElement = <HTMLInputElement>event.target;\n\n    if (targetRange.id === 'rangeFrom') {\n      this.changeRangeFrom();\n      return;\n    }\n    this.changeRangeTo();\n  }\n\n  private updateRangeState(newValue: AtLeastOne<IRangeValue>): void {\n    this.value = {\n      ...this.value,\n      ...newValue\n    };\n  }\n\n  private setValueRange(rangeTarget: RangeTarget, value: number): void {\n    if (rangeTarget === 'from') {\n      this.updateRangeState({ from: value });\n      this.inputRangeFromElRef.nativeElement.value = String(value);\n      return;\n    }\n    this.updateRangeState({ to: value });\n    this.inputRangeToElRef.nativeElement.value = String(value);\n  }\n\n  private changeRangeFrom(): void {\n    const valueRangeCurrent = Number(this.inputRangeFromElRef.nativeElement.value);\n    const valueRangeTo = Number(this.inputRangeToElRef.nativeElement.value);\n\n    if (valueRangeCurrent + this.gap > valueRangeTo) {\n      this.setValueRange('from', valueRangeTo - this.gap);\n      return;\n    }\n    this.updateRangeState({ from: valueRangeCurrent });\n  }\n\n  private changeRangeTo(): void {\n    const valueRangeCurrent = Number(this.inputRangeToElRef.nativeElement.value);\n    const valueRangeFrom = Number(this.inputRangeFromElRef.nativeElement.value);\n\n    if (valueRangeCurrent - this.gap < valueRangeFrom) {\n      this.setValueRange('to', valueRangeFrom + this.gap);\n      return;\n    }\n    this.updateRangeState({ to: valueRangeCurrent });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\r\n\r\n.wrapper-range {\r\n  &__container-range {\r\n    position: relative;\r\n    height: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.container-range {\r\n  &__range {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-color: transparent;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    pointer-events: none;\r\n\r\n    &::-webkit-slider-runnable-track {\r\n      appearance: none;\r\n      height: 5px;\r\n    }\r\n    &::-moz-range-track {\r\n      appearance: none;\r\n      height: 5px;\r\n    }\r\n    &::-ms-range-track {\r\n      appearance: none;\r\n      height: 5px;\r\n    }\r\n  }\r\n\r\n  &__range-track {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    margin: auto 0;\r\n    background-color: $color-4;\r\n  }\r\n}\r\n\r\ninput[type=\"range\"] {\r\n  &::-webkit-slider-thumb {\r\n    margin-top: -0.1em;\r\n    background-color: $color-1;\r\n    width: 0.7em;\r\n    height: 0.7em;\r\n    border-radius: 50%;\r\n    pointer-events: auto;\r\n    appearance: none;\r\n    cursor: pointer;\r\n  }\r\n  // &::-moz-range-thumb {\r\n  //   margin-top: -6px;\r\n\r\n  //   background-color: $color-1;\r\n  //   width: 0.7em;\r\n  //   height: 0.7em;\r\n  //   border-radius: 50%;\r\n  //   pointer-events: auto;\r\n  //   appearance: none;\r\n  //   cursor: pointer;\r\n  // }\r\n  // &::-ms-range-thumb {\r\n  //   margin-top: -6px;\r\n  //   width: 0.7em;\r\n  //   height: 0.7em;\r\n  //   border-radius: 50%;\r\n  //   background-color: $color-1;\r\n  //   pointer-events: auto;\r\n  //   appearance: none;\r\n  //   cursor: pointer;\r\n  // }\r\n}\r\n\r\n.range {\r\n  &:focus {\r\n    outline: none;\r\n\r\n    &::-webkit-slider-thumb {\r\n      outline: 2px solid $color-1;\r\n      outline-offset: 2px;\r\n    }\r\n    &::-ms-range-thumb {\r\n      outline: 2px solid $color-1;\r\n      outline-offset: 2px;\r\n    }\r\n    &::-ms-range-thumb {\r\n      outline: 2px solid $color-1;\r\n      outline-offset: 2px;\r\n    }\r\n  }\r\n  &--1 {\r\n  }\r\n  &--2 {\r\n  }\r\n}\r\n\r\n//\r\n\r\n// input[type=\"range\"] {\r\n//   -webkit-appearance: none;\r\n//   -moz-appearance: none;\r\n//   appearance: none;\r\n//   width: 100%;\r\n//   outline: none;\r\n//   position: absolute;\r\n//   margin: auto;\r\n//   top: 0;\r\n//   bottom: 0;\r\n//   background-color: transparent;\r\n//   pointer-events: none;\r\n// }\r\n// .slider-track {\r\n//   width: 100%;\r\n//   height: 5px;\r\n//   position: absolute;\r\n//   margin: auto;\r\n//   top: 0;\r\n//   bottom: 0;\r\n//   border-radius: 5px;\r\n// }\r\n// input[type=\"range\"]::-webkit-slider-runnable-track {\r\n//   -webkit-appearance: none;\r\n//   height: 5px;\r\n// }\r\n// input[type=\"range\"]::-moz-range-track {\r\n//   -moz-appearance: none;\r\n//   height: 5px;\r\n// }\r\n// input[type=\"range\"]::-ms-track {\r\n//   appearance: none;\r\n//   height: 5px;\r\n// }\r\n// input[type=\"range\"]::-webkit-slider-thumb {\r\n//   -webkit-appearance: none;\r\n//   height: 1.7em;\r\n//   width: 1.7em;\r\n//   background-color: #3264fe;\r\n//   cursor: pointer;\r\n//   margin-top: -9px;\r\n//   pointer-events: auto;\r\n//   border-radius: 50%;\r\n// }\r\n// input[type=\"range\"]::-moz-range-thumb {\r\n//   -webkit-appearance: none;\r\n//   height: 1.7em;\r\n//   width: 1.7em;\r\n//   cursor: pointer;\r\n//   border-radius: 50%;\r\n//   background-color: #3264fe;\r\n//   pointer-events: auto;\r\n// }\r\n// input[type=\"range\"]::-ms-thumb {\r\n//   appearance: none;\r\n//   height: 1.7em;\r\n//   width: 1.7em;\r\n//   cursor: pointer;\r\n//   border-radius: 50%;\r\n//   background-color: #3264fe;\r\n//   pointer-events: auto;\r\n// }\r\n// input[type=\"range\"]:active::-webkit-slider-thumb {\r\n//   background-color: #ffffff;\r\n//   border: 3px solid #3264fe;\r\n// }\r\n// .values {\r\n//   background-color: #3264fe;\r\n//   width: 32%;\r\n//   position: relative;\r\n//   margin: auto;\r\n//   padding: 10px 0;\r\n//   border-radius: 5px;\r\n//   text-align: center;\r\n//   font-weight: 500;\r\n//   font-size: 25px;\r\n//   color: #ffffff;\r\n// }\r\n// .values:before {\r\n//   content: \"\";\r\n//   position: absolute;\r\n//   height: 0;\r\n//   width: 0;\r\n//   border-top: 15px solid #3264fe;\r\n//   border-left: 15px solid transparent;\r\n//   border-right: 15px solid transparent;\r\n//   margin: auto;\r\n//   bottom: -14px;\r\n//   left: 0;\r\n//   right: 0;\r\n// }\r\n",
                    "styleUrl": "./range.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newValue",
                                "type": "IRangeValue",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "newValue",
                                "type": "IRangeValue",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "IRangeValue",
                        "line": 48
                    }
                }
            },
            "templateData": "<div class=\"wrapper-range\">\n  <div class=\"wrapper-range__container-range container-range\">\n    <div class=\"container-range__range-track\"></div>\n    <label class=\"visually-hidden\" for=\"rangeFrom\">Минимальное значение</label>\n\n    <input\n      #inputRangeFrom\n      class=\"container-range__range range range--1\"\n      type=\"range\"\n      name=\"\"\n      id=\"rangeFrom\"\n      [min]=\"min\"\n      [max]=\"max\"\n      (input)=\"handlerInputEvent($event)\"\n      [value]=\"value.from\"\n    />\n\n    <label class=\"visually-hidden\" for=\"rangeTo\">Максимальное значение</label>\n\n    <input\n      #inputRangeTo\n      class=\"container-range__range range range--2\"\n      type=\"range\"\n      name=\"\"\n      id=\"rangeTo\"\n      [min]=\"min\"\n      [max]=\"max\"\n      (input)=\"handlerInputEvent($event)\"\n      [value]=\"value.to\"\n    />\n  </div>\n</div>\n"
        },
        {
            "name": "RatingComponent",
            "id": "component-RatingComponent-d1a720d1bfc7a8fd5289d745ed45e8c84fcbb84598e418638f415044f778cf73ac56615d2c670f5aafd23433aceaff92f8c389f6faca4c44371d86628f758a5a",
            "file": "src/app/components/rating/rating.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RatingComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-rating",
            "styleUrls": [
                "./rating.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxRating",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Rating | RatingNotSet",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitOnChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<EmitRating>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "_rating",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Rating | RatingNotSet",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maxRatingIterable",
                    "defaultValue": "new Array(this.maxRating)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onChangeCallBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnChangeCallback<string>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouchedCallback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnTouchedCallback",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "generateInputId",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change', ['$event.target.value']"
                        }
                    ],
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isChecked",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focusout'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback<string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnTouchedCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "Rating | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Rating | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69
                },
                {
                    "name": "focusout",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  forwardRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { UtilsService } from 'src/app/services/utils/utils.service';\r\nimport { EmitRating, Rating, RatingNotSet } from './types';\r\nimport { OnChangeCallback, OnTouchedCallback } from '~types/controlValueAccessor';\r\n\r\n@Component({\r\n  selector: 'app-rating',\r\n  templateUrl: `./rating.component.html`,\r\n  styleUrls: ['./rating.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => RatingComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class RatingComponent implements ControlValueAccessor {\r\n  private readonly _id: string;\r\n\r\n  private _rating: Rating | RatingNotSet = null;\r\n  @Input() set rating(value: Rating | RatingNotSet) {\r\n    this._rating = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n  public get rating() {\r\n    return this._rating;\r\n  }\r\n\r\n  private _disabled = false;\r\n  @Input() set isDisabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  @Input() maxRating = 5;\r\n  @Output() emitOnChange: EventEmitter<EmitRating> = new EventEmitter();\r\n\r\n  private onChangeCallBack: OnChangeCallback<string>;\r\n  private onTouchedCallback: OnTouchedCallback;\r\n\r\n  constructor(private cdr: ChangeDetectorRef, utilsService: UtilsService) {\r\n    this._id = utilsService.generateRandomString();\r\n  }\r\n\r\n  public get disabled() {\r\n    return this._disabled;\r\n  }\r\n  public get id() {\r\n    return this._id;\r\n  }\r\n\r\n  protected maxRatingIterable = new Array(this.maxRating);\r\n\r\n  public isChecked(value: number): boolean {\r\n    return this.rating === value;\r\n  }\r\n\r\n  @HostListener('change', ['$event.target.value'])\r\n  private handlerChange(value: string): void {\r\n    if (this.onChangeCallBack) {\r\n      this.rating = Number(value);\r\n      this.onChangeCallBack(value);\r\n      return;\r\n    }\r\n    this.rating = Number(value);\r\n    this.emitOnChange.emit(this.rating);\r\n  }\r\n\r\n  @HostListener('focusout')\r\n  private onTouched(): void {\r\n    if (!this.onTouchedCallback) {\r\n      return;\r\n    }\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  public generateInputId(i: number, id: string): string {\r\n    return 'rate-' + (i + 1) + '-' + id;\r\n  }\r\n\r\n  public writeValue(value: Rating | null): void {\r\n    this.rating = value;\r\n  }\r\n\r\n  public registerOnChange(fn: OnChangeCallback<string>): void {\r\n    this.onChangeCallBack = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: OnTouchedCallback): void {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.rating {\r\n  position: relative;\r\n  display: inline-block;\r\n  font-size: 40px;\r\n  line-height: 1;\r\n}\r\n.rating::before {\r\n  content: '★★★★★';\r\n  display: block;\r\n}\r\n.rating__items {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  overflow: hidden;\r\n}\r\n.rating__input {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 0;\r\n  opacity: 0;\r\n}\r\n.rating__label {\r\n  flex: 0 0 20%;\r\n  height: 100%;\r\n  color: #cfcfcf;\r\n  outline: 1px solid transparent;\r\n  outline-offset: -2px;\r\n  cursor: pointer;\r\n}\r\n.rating__label:before {\r\n  content: '★';\r\n  transition: color 0.2s;\r\n}\r\n\r\n.rating__input:not(:disabled) {\r\n  & + .rating__label:hover {\r\n    color: #f5d76c4b;\r\n  }\r\n}\r\n.rating__label--active {\r\n  color: #f5d76b;\r\n}\r\n.rating__input:focus + .rating__label {\r\n  outline-color: $color-1;\r\n}\r\n.rating__input:disabled + .rating__label {\r\n  cursor: default;\r\n}\r\n",
                    "styleUrl": "./rating.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "rating": {
                    "name": "rating",
                    "setSignature": {
                        "name": "rating",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "Rating | RatingNotSet",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "Rating | RatingNotSet",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "rating",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "isDisabled": {
                    "name": "isDisabled",
                    "setSignature": {
                        "name": "isDisabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "disabled": {
                    "name": "disabled",
                    "getSignature": {
                        "name": "disabled",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                },
                "id": {
                    "name": "id",
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 58
                    }
                }
            },
            "templateData": "<div class=\"rating\">\r\n  <form class=\"rating__items\">\r\n    <ng-container *ngFor=\"let _ of maxRatingIterable; let i = index\">\r\n      <input\r\n        class=\"rating__input\"\r\n        type=\"radio\"\r\n        name=\"rating\"\r\n        [id]=\"generateInputId(i, id)\"\r\n        [value]=\"i + 1\"\r\n        [checked]=\"isChecked(i + 1)\"\r\n        [disabled]=\"disabled\"\r\n      />\r\n      <label\r\n        class=\"rating__label\"\r\n        [ngClass]=\"{ 'rating__label--active': rating && rating >= i + 1 }\"\r\n        [for]=\"generateInputId(i, id)\"\r\n      ></label>\r\n    </ng-container>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "ReviewComponent",
            "id": "component-ReviewComponent-1d6039e933a399413e58d1ed49296e4d9a27006f293a48a1e5a73017c51b4050e94c20ea9e27642b97cd6c7616e4430378fd0fefc5eb0ce676af43acf2ea9d40",
            "file": "src/app/components/review/review.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-review",
            "styleUrls": [
                "./review.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./review.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IReview } from './types';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewComponent {\n  @Input() comment: IReview['comment'];\n  @Input() author: IReview['author'];\n  @Input() createdAt: IReview['createdAt'];\n  @Input() rating: IReview['rating'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.review-item {\r\n  position: relative;\r\n  padding: 44px 5px 5px;\r\n\r\n  &::after {\r\n    content: '“';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    color: $color-1;\r\n    font-size: 30px;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 16px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &__rating {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &__info-text {\r\n    color: $color-8;\r\n  }\r\n}\r\n",
                    "styleUrl": "./review.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"reviews-list__review-item review-item\">\n  <p class=\"review-item__text\">\n    {{ comment }}\n  </p>\n\n  <app-rating [isDisabled]=\"true\" [rating]=\"rating\" class=\"review-item__rating\"></app-rating>\n\n  <p class=\"review-item__info-text\">{{ author }}, {{ createdAt | date : 'shortDate' }}</p>\n</div>\n"
        },
        {
            "name": "ReviewFormComponent",
            "id": "component-ReviewFormComponent-9565d6cf6760104c5dec4d9e86b5ff55ae3703170d1c51adf27311dcc57002667871c2684dafd0d7bcf2fbe2c609e61c0654ede22f703374873a1485eef7ada1",
            "file": "src/app/components/review-form/review-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-review-form",
            "styleUrls": [
                "./review-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./review-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "isExistReviews",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isReviewsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "reviewFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "INewReview",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSubmitForm",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<INewReview>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_reviewFormData",
                    "defaultValue": "{\n    rating: null,\n    comment: '',\n    author: '',\n    email: ''\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INewReview",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isFormSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "reviewForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initReviewFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setTouchedStateForm",
                    "args": [
                        {
                            "name": "isSubmitted",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isSubmitted",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { INewReview } from './types';\nimport { ErrorPayload } from '~types/apiPayloads';\nimport { empty } from 'src/app/validators/empty.validator';\n\n@Component({\n  selector: 'app-review-form',\n  templateUrl: './review-form.component.html',\n  styleUrls: ['./review-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewFormComponent implements OnInit {\n  public isFormSubmitted = false;\n  public reviewForm: FormGroup;\n  private _reviewFormData: INewReview = {\n    rating: null,\n    comment: '',\n    author: '',\n    email: ''\n  };\n\n  @Input() isLoading = false;\n  @Input() isReviewsLoading = false;\n  @Input() error: ErrorPayload['error'] | null = null;\n  @Input() isExistReviews = false;\n\n  get reviewFormData(): INewReview {\n    return this._reviewFormData;\n  }\n  @Input() set reviewFormData(formData: INewReview) {\n    if (this.reviewForm) {\n      this.reviewForm.setValue(formData);\n      return;\n    }\n    this._reviewFormData = formData;\n    this.setTouchedStateForm(false);\n  }\n\n  @Output() emitSubmitForm: EventEmitter<INewReview> = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.reviewForm = this.initReviewFormGroup();\n  }\n\n  private initReviewFormGroup() {\n    return this.fb.group({\n      rating: [this.reviewFormData.rating, [Validators.required]],\n      comment: [this.reviewFormData.comment, [Validators.required, empty]],\n      author: [this.reviewFormData.author, [Validators.required, empty]],\n      email: [this.reviewFormData.email, [Validators.required, Validators.email]]\n    });\n  }\n\n  public get commentControl() {\n    return this.reviewForm.get('comment');\n  }\n  public get authorControl() {\n    return this.reviewForm.get('author');\n  }\n  public get emailControl() {\n    return this.reviewForm.get('email');\n  }\n  public get ratingControl() {\n    return this.reviewForm.get('rating');\n  }\n\n  private setTouchedStateForm(isSubmitted: boolean) {\n    this.isFormSubmitted = isSubmitted;\n  }\n\n  public resetForm(): void {\n    this.reviewForm.reset();\n    this.setTouchedStateForm(false);\n  }\n\n  public handlerSubmit(): void {\n    this.setTouchedStateForm(true);\n    if (this.reviewForm.invalid) {\n      return;\n    }\n    this.emitSubmitForm.emit(this.reviewForm.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.review-form {\r\n  position: relative;\r\n\r\n  &__title {\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &__paragraph-1 {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__paragraph-2 {\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  &__rating-label {\r\n    display: inline-block;\r\n    margin-bottom: 45px;\r\n  }\r\n\r\n  &__label {\r\n    &:not(:last-of-type) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    &:last-of-type {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n\r\n  &__loader {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    max-width: 200px;\r\n    width: 100%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  &__textarea {\r\n    min-height: 180px;\r\n  }\r\n\r\n  &__btn {\r\n    max-width: 255px;\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &__paragraph-3 {\r\n    max-width: 500px;\r\n  }\r\n}\r\n\r\n.label {\r\n  display: block;\r\n\r\n  &__text {\r\n    margin-bottom: 4px;\r\n  }\r\n}\r\n\r\n.paragraph-3 {\r\n  &__link {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .review-form {\r\n    &__title {\r\n      margin-bottom: 10px;\r\n      font-size: 14px;\r\n    }\r\n\r\n    &__paragraph-1 {\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    &__rating {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./review-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "reviewFormData": {
                    "name": "reviewFormData",
                    "setSignature": {
                        "name": "reviewFormData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formData",
                                "type": "INewReview",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "formData",
                                "type": "INewReview",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "reviewFormData",
                        "type": "",
                        "returnType": "INewReview",
                        "line": 35
                    }
                },
                "commentControl": {
                    "name": "commentControl",
                    "getSignature": {
                        "name": "commentControl",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                },
                "authorControl": {
                    "name": "authorControl",
                    "getSignature": {
                        "name": "authorControl",
                        "type": "",
                        "returnType": "",
                        "line": 67
                    }
                },
                "emailControl": {
                    "name": "emailControl",
                    "getSignature": {
                        "name": "emailControl",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                },
                "ratingControl": {
                    "name": "ratingControl",
                    "getSignature": {
                        "name": "ratingControl",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                }
            },
            "templateData": "<form class=\"review-form\" [formGroup]=\"reviewForm\" (ngSubmit)=\"handlerSubmit()\">\n  <app-loader class=\"review-form__loader\" *ngIf=\"isLoading\" text=\"Удивляемся отзыву\"></app-loader>\n\n  <ng-container *ngIf=\"isExistReviews && !isReviewsLoading\">\n    <h3 class=\"review-form__title text-uppercase text-color--1\">\n      Оставьте свой отзыв на “Рубиновые искры”\n    </h3>\n\n    <p class=\"review-form__paragraph-1\">\n      Ваш адрес email не будет опубликован. Обязательные поля помечены *\n    </p>\n  </ng-container>\n\n  <ng-template *ngIf=\"!isExistReviews && !isReviewsLoading\">\n    <div class=\"reviews__empty-reviews-wrapper empty-reviews-wrapper\">\n      <h3 class=\"text-color--1 text-uppercase empty-reviews-wrapper__text-1\">\n        Будьте первым, кто оставил отзыв на “Рубиновые искры”\n      </h3>\n\n      <p class=\"empty-reviews-wrapper__text-2\">\n        Ваш адрес email не будет опубликован. Обязательные поля помечены *\n      </p>\n    </div>\n  </ng-template>\n\n  <label class=\"review-form__rating-label\">\n    <p class=\"review-form__paragraph-2\">Ваша оценка:</p>\n\n    <app-rating formControlName=\"rating\"></app-rating>\n\n    <app-error-field\n      [isRequiredRadio]=\"!!(isFormSubmitted && ratingControl?.hasError('required'))\"\n    ></app-error-field>\n  </label>\n\n  <label class=\"review-form__label label\">\n    <p class=\"label__text\">Ваш отзыв*</p>\n\n    <textarea\n      class=\"review-form__textarea field field--default resize--none\"\n      [ngClass]=\"{\n        'field--not-empty': commentControl?.value,\n        'field--error':\n          (isFormSubmitted || commentControl?.touched) &&\n          (!commentControl?.value || commentControl?.hasError('empty'))\n      }\"\n      placeholder=\"Введите комментарий\"\n      formControlName=\"comment\"\n    ></textarea>\n\n    <app-error-field\n      [isEmpty]=\"\n        !!((isFormSubmitted || commentControl?.touched) && commentControl?.hasError('empty'))\n      \"\n      [isRequired]=\"!!((isFormSubmitted || commentControl?.touched) && !commentControl?.value)\"\n    ></app-error-field>\n  </label>\n\n  <label class=\"review-form__label label\">\n    <p class=\"label__text\">Имя*</p>\n\n    <input\n      class=\"review-form__input field field--default\"\n      [ngClass]=\"{\n        'field--not-empty': authorControl?.value,\n        'field--error':\n          (isFormSubmitted || authorControl?.touched) &&\n          (!authorControl?.value || authorControl?.hasError('empty'))\n      }\"\n      type=\"text\"\n      placeholder=\"Введите ваше имя\"\n      formControlName=\"author\"\n    />\n\n    <app-error-field\n      [isEmpty]=\"\n        !!((isFormSubmitted || authorControl?.touched) && authorControl?.hasError('empty'))\n      \"\n      [isRequired]=\"!!((isFormSubmitted || authorControl?.touched) && !authorControl?.value)\"\n    ></app-error-field>\n  </label>\n\n  <label class=\"review-form__label label\">\n    <p class=\"label__text\">E-mail*</p>\n\n    <input\n      class=\"review-form__input field field--default\"\n      [ngClass]=\"{\n        'field--not-empty': emailControl?.value,\n        'field--error':\n          (isFormSubmitted || emailControl?.touched) &&\n          (!emailControl?.value || emailControl?.hasError('email'))\n      }\"\n      type=\"text\"\n      placeholder=\"Введите вашу почту\"\n      formControlName=\"email\"\n    />\n\n    <app-error-field\n      [isInvalidEmail]=\"\n        !!((isFormSubmitted || emailControl?.touched) && emailControl?.hasError('email'))\n      \"\n      [isRequired]=\"!!((isFormSubmitted || emailControl?.touched) && !emailControl?.value)\"\n    ></app-error-field>\n  </label>\n\n  <app-error-block *ngIf=\"error\"></app-error-block>\n\n  <button class=\"review-form__btn text-uppercase\" appUiButton=\"1\">отправить</button>\n\n  <p class=\"review-form__paragraph-3 paragraph-3\">\n    Нажимая на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в\n    соответствии с\n    <a class=\"paragraph-3__link text-color--3 link outline-focus\" routerLink=\"\"\n      >Политикой конфиденциальности.</a\n    >\n  </p>\n</form>\n"
        },
        {
            "name": "ReviewFormContainerComponent",
            "id": "component-ReviewFormContainerComponent-cc10c524a524186424fd837c72d645f5659283c1950469970c13f3661b88c68b65791af998daa7bc56cae7cd3be48e236921146b14d6bb6fc63cdc886cd17610",
            "file": "src/app/containers/review-form-container/review-form-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-review-form-container",
            "styleUrls": [
                "./review-form-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./review-form-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{ ...this.initialData }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "initialData",
                    "defaultValue": "{\n    rating: null,\n    comment: '',\n    author: '',\n    email: ''\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INewReview",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isExistReviews",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isFormSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "reviewError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "reviewFormComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReviewFormComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'reviewForm', {read: ReviewFormComponent}"
                        }
                    ]
                },
                {
                    "name": "reviewIsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "reviewsIsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerReviewSubmit",
                    "args": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "INewReview",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToPostCommentError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToPostCommentLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToResetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToReviewsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { INewReview } from 'src/app/components/review-form/types';\nimport { ReviewsService } from 'src/app/services/reviews/reviews.service';\nimport { ReviewFormComponent } from '~components/review-form/review-form.component';\nimport { ErrorPayload } from '~types/apiPayloads';\n\n@Component({\n  selector: 'app-review-form-container',\n  templateUrl: './review-form-container.component.html',\n  styleUrls: ['./review-form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewFormContainerComponent implements OnInit, OnDestroy {\n  @ViewChild('reviewForm', { read: ReviewFormComponent }) reviewFormComponent: ReviewFormComponent;\n  private destroySubject: Subject<null> = new Subject();\n  protected isFormSubmitted = false;\n  protected reviewIsLoading = false;\n  protected reviewsIsLoading = false;\n  protected reviewError: ErrorPayload['error'] | null;\n  protected isExistReviews = false;\n  private initialData: INewReview = {\n    rating: null,\n    comment: '',\n    author: '',\n    email: ''\n  };\n  protected formData = { ...this.initialData };\n\n  constructor(private cdr: ChangeDetectorRef, private reviewsService: ReviewsService) {}\n\n  ngOnInit(): void {\n    this.subscribeToPostCommentLoading();\n    this.subscribeToPostCommentError();\n    this.subscribeToReviewsLoading();\n    this.subscribeToResetForm();\n    this.subscribeToComments();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeToComments(): void {\n    this.reviewsService\n      .getComments()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((reviews) => {\n        this.isExistReviews = reviews !== null && !!reviews.length;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToPostCommentError() {\n    this.reviewsService\n      .postCommentError()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((error) => {\n        this.reviewError = error;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToResetForm() {\n    this.reviewsService\n      .getResetFormStream()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(() => {\n        this.resetForm();\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToPostCommentLoading() {\n    this.reviewsService\n      .postCommentIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((reviewIsLoading) => {\n        this.reviewIsLoading = reviewIsLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToReviewsLoading() {\n    this.reviewsService\n      .commentsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((reviewsIsLoading) => {\n        this.reviewsIsLoading = reviewsIsLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  protected handlerReviewSubmit(formData: INewReview) {\n    this.reviewsService.postComment(formData);\n  }\n\n  private resetForm() {\n    if (!this.reviewFormComponent) {\n      return;\n    }\n    this.reviewFormComponent.resetForm();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./review-form-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-review-form\n  #reviewForm\n  [reviewFormData]=\"formData\"\n  [isExistReviews]=\"isExistReviews\"\n  [isLoading]=\"reviewIsLoading\"\n  [isReviewsLoading]=\"reviewsIsLoading\"\n  [error]=\"reviewError\"\n  (emitSubmitForm)=\"handlerReviewSubmit($event)\"\n  data-test=\"reviewForm\"\n></app-review-form>\n"
        },
        {
            "name": "ReviewListComponent",
            "id": "component-ReviewListComponent-bf81ff399452eb3bca3e107611c7b99783d663e04950268e6bd289fa767a663d6162934282355f825e19f9523fea2f56ae0a250e420adc23deb7221ba0c9e104",
            "file": "src/app/components/review-list/review-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-review-list",
            "styleUrls": [
                "./review-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./review-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "reviews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IReview[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitRepeatRequestReviews",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "repeatRequestComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IReview } from '../review/types';\nimport { ErrorPayload } from '~types/apiPayloads';\n\n@Component({\n  selector: 'app-review-list',\n  templateUrl: './review-list.component.html',\n  styleUrls: ['./review-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewListComponent {\n  @Input() reviews: IReview[];\n  @Input() isLoading: boolean;\n  @Input() error: ErrorPayload['error'] | null;\n  @Output() emitRepeatRequestReviews: EventEmitter<void> = new EventEmitter();\n\n  get isExistReviews(): boolean {\n    return this.reviews?.length !== 0;\n  }\n\n  public repeatRequestComments(): void {\n    this.emitRepeatRequestReviews.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reviews {\r\n  &__review {\r\n    &:not(:last-child) {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n\r\n  &__loader {\r\n    max-width: 200px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n",
                    "styleUrl": "./review-list.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isExistReviews": {
                    "name": "isExistReviews",
                    "getSignature": {
                        "name": "isExistReviews",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 17
                    }
                }
            },
            "templateData": "<div class=\"reviews\">\n  <app-error-block\n    class=\"container reviews__error\"\n    *ngIf=\"error\"\n    (emitRepeatRequest)=\"repeatRequestComments()\"\n  ></app-error-block>\n\n  <app-loader class=\"reviews__loader\" *ngIf=\"isLoading\" text=\"Загружаем отзывы\"></app-loader>\n\n  <ng-container *ngIf=\"isExistReviews\">\n    <app-review\n      class=\"reviews__review\"\n      *ngFor=\"let review of reviews\"\n      [comment]=\"review.comment\"\n      [author]=\"review.author\"\n      [createdAt]=\"review.createdAt\"\n      [rating]=\"review.rating\"\n    ></app-review>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "ReviewListContainerComponent",
            "id": "component-ReviewListContainerComponent-60074811840d324b3ccbe0a0360d760d7a6beeb3ddb60bfa5afe5595139fd34640a94de5cbe48b082cba79b62678391bec523bf9c260c12b74017ea020cd49be",
            "file": "src/app/containers/review-list-container/review-list-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-review-list-container",
            "styleUrls": [
                "./review-list-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./review-list-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "IsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "reviews",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IReview[] | ",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "repeatRequestComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestComments",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCommentsError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToCommentsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { map, Subject, takeUntil } from 'rxjs';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { ReviewsService } from 'src/app/services/reviews/reviews.service';\nimport { IReview } from '~components/review/types';\nimport { ErrorPayload } from '~types/apiPayloads';\n\n@Component({\n  selector: 'app-review-list-container',\n  templateUrl: './review-list-container.component.html',\n  styleUrls: ['./review-list-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewListContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  private productId: number;\n  public reviews: IReview[] | [] = [];\n  public IsLoading = false;\n  public error: ErrorPayload['error'] | null = null;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private productsService: ProductsService,\n    private reviewsService: ReviewsService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToProduct();\n    this.subscribeToComments();\n    this.subscribeToCommentsLoading();\n    this.subscribeToCommentsError();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  public requestComments(id: number): void {\n    this.reviewsService.requestComments(id);\n  }\n\n  private subscribeToProduct(): void {\n    this.productsService\n      .getProduct()\n      .pipe(\n        takeUntil(this.destroySubject),\n        map((product) => product?.id)\n      )\n      .subscribe((id) => {\n        if (id === undefined) {\n          return;\n        }\n        this.productId = id;\n        this.requestComments(id);\n      });\n  }\n\n  private subscribeToComments(): void {\n    this.reviewsService\n      .getComments()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((reviews) => {\n        this.reviews = reviews ? reviews : [];\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToCommentsLoading(): void {\n    this.reviewsService\n      .commentsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((reviewsIsLoading) => {\n        this.IsLoading = reviewsIsLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeToCommentsError(): void {\n    this.reviewsService\n      .getCommentsError()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((error) => {\n        this.error = error;\n      });\n  }\n\n  public repeatRequestComments(): void {\n    this.requestComments(this.productId);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./review-list-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reviewsService",
                        "type": "ReviewsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-review-list\n  [reviews]=\"reviews\"\n  [isLoading]=\"IsLoading\"\n  [error]=\"error\"\n  (emitRepeatRequestReviews)=\"repeatRequestComments()\"\n></app-review-list>\n"
        },
        {
            "name": "ReviewsComponent",
            "id": "component-ReviewsComponent-04721fde17ae82fba2fce0d38a7777e23d63b5bf0f6b150f9e45f7e31a21107a57a0cf9281a20ca2fb2b367669536ca7c5948c48c0733ab17783eeef10031c37",
            "file": "src/app/page-components/product/reviews/reviews.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reviews",
            "styleUrls": [
                "./reviews.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reviews.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n.reviews {\r\n  &__reviews-list {\r\n    display: block;\r\n    margin-bottom: 100px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./reviews.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"reviews\">\n  <div class=\"reviews__container container\">\n    <app-review-list-container class=\"reviews__reviews-list\"></app-review-list-container>\n\n    <app-review-form-container></app-review-form-container>\n  </div>\n</div>\n"
        },
        {
            "name": "SearchFormComponent",
            "id": "component-SearchFormComponent-6a8a7ace8eb875538aa2d548f53b24ec0aa5077b645759f535f58c50283fc7a51b081463247ff3d636c96fc5dd3f875ffb910449c7bf88bab5b2c464f79c0f5c",
            "file": "src/app/components/search-form/search-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-form",
            "styleUrls": [
                "./search-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "seachValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "SearchValue",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSubmitForm",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputSearchValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchValue",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SearchValue } from './types';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchFormComponent {\n  @Input() set seachValue(value: SearchValue) {\n    this.inputSearchValue = value;\n  }\n  @Output() emitSubmitForm: EventEmitter<{ search: SearchValue }> = new EventEmitter();\n\n  public inputSearchValue: SearchValue = '';\n\n  public handlerSubmit(form: NgForm): void {\n    if (form.invalid) {\n      return;\n    }\n    this.emitSubmitForm.emit({ search: form.value.search });\n    form.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.form-search {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &__btn-search {\r\n    margin-right: 5px;\r\n  }\r\n\r\n  &__input {\r\n    transition: border-color 0.3s;\r\n\r\n    &::placeholder {\r\n      transition: opacity 0.3s;\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom-color: $color-1;\r\n\r\n      &::placeholder {\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    .btn-search__icon {\r\n      animation: zoomAnimation 0.5s;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes zoomAnimation {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.btn-search {\r\n  padding: 5px 10px;\r\n\r\n  &__icon {\r\n    transform: scale(1);\r\n  }\r\n}\r\n",
                    "styleUrl": "./search-form.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "seachValue": {
                    "name": "seachValue",
                    "setSignature": {
                        "name": "seachValue",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "SearchValue",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 12,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "SearchValue",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form class=\"form-search\" #form=\"ngForm\" (ngSubmit)=\"handlerSubmit(form)\">\n  <button class=\"btn-reset btn-search form-search__btn-search outline-focus\" aria-label=\"Найти\">\n    <app-icon class=\"btn-search__icon\" icon=\"search\"></app-icon>\n  </button>\n\n  <input\n    class=\"field field--mini field--border-transparent field--color-light field--placeholder-uppercase form-search__input\"\n    type=\"search\"\n    placeholder=\"ПОИСК\"\n    [(ngModel)]=\"inputSearchValue\"\n    name=\"search\"\n    appEmpty\n    required\n    aria-label=\"Поиск товара по ключевому слову\"\n  />\n</form>\n"
        },
        {
            "name": "SearchFormContainerComponent",
            "id": "component-SearchFormContainerComponent-aca831a513b499bec4471d39a0bea94b6260694a2c40d3864b4000e08dfbfdb89a77d8a70c511717c244a47c8730cbb2eb46dd454c789c44c8ad81519489e392",
            "file": "src/app/containers/search-form-container/search-form-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-form-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-form-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateToSearchPage",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-form-container',\n  templateUrl: './search-form-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchFormContainerComponent {\n  constructor(private router: Router) {}\n\n  public navigateToSearchPage(data: { search: string }) {\n    this.router.navigate(['/searching-results'], {\n      queryParams: { search: data.search }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-search-form\n  (emitSubmitForm)=\"navigateToSearchPage($event)\"\n  data-test=\"searchForm\"\n></app-search-form>\n"
        },
        {
            "name": "SearchingResultsComponent",
            "id": "component-SearchingResultsComponent-dcc6f17c39920bf046ea3860a9fcb75238853b7173a5b7b0bb3e0b4b93f2d92e2f0dec1bbc564af7242590e509322c7b8346a02546bdae8cfd91e9072af2f954",
            "file": "src/app/pages/searching-results/component/searching-results.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-searching-results",
            "styleUrls": [
                "./searching-results.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searching-results.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IProduct[]",
                    "decorators": []
                },
                {
                    "name": "productsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "searchValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IProduct } from '~types/product';\n\n@Component({\n  selector: 'app-searching-results',\n  templateUrl: './searching-results.component.html',\n  styleUrls: ['./searching-results.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchingResultsComponent {\n  @Input() searchValue: string;\n  @Input() products: IProduct[];\n  @Input() productsLoading: boolean;\n\n  get isProductsEmpty(): boolean {\n    return !this.products?.length && !this.productsLoading;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.results {\r\n  flex-grow: 1;\r\n\r\n  &__btn-scroll {\r\n    position: fixed;\r\n    right: 20px;\r\n    bottom: 30px;\r\n  }\r\n\r\n  &__decor-color-bg {\r\n    position: relative;\r\n\r\n    &-1 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -419px;\r\n        top: -462px;\r\n        z-index: -2;\r\n        width: 1045px;\r\n        height: 970px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        opacity: 0.7;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: -438px;\r\n        top: -435px;\r\n        z-index: -2;\r\n        width: 1033px;\r\n        height: 946px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n      }\r\n    }\r\n    &-2 {\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -472px;\r\n        bottom: -359px;\r\n        z-index: -2;\r\n        width: 967px;\r\n        height: 933px;\r\n        background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(126deg);\r\n      }\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        right: 108px;\r\n        bottom: -135px;\r\n        z-index: -2;\r\n        width: 942px;\r\n        height: 744px;\r\n        background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n        background-size: 100% 100%;\r\n        background-position: center right;\r\n        background-repeat: no-repeat;\r\n        transform: rotateZ(14deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__title {\r\n    margin-bottom: 50px;\r\n  }\r\n\r\n  &__container {\r\n    padding-bottom: 100px;\r\n  }\r\n}\r\n\r\n.results-empty {\r\n  &__text {\r\n    max-width: 331px;\r\n    margin-bottom: 20px;\r\n  }\r\n  &__link {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .results {\r\n    &__container {\r\n      padding-bottom: 60px;\r\n    }\r\n\r\n    &__title {\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./searching-results.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isProductsEmpty": {
                    "name": "isProductsEmpty",
                    "getSignature": {
                        "name": "isProductsEmpty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 15
                    }
                }
            },
            "templateData": "<div class=\"results\">\n  <div class=\"results__decor-color-bg-1\"></div>\n  <div class=\"results__decor-color-bg-2\"></div>\n\n  <div class=\"results__container container container--pt\">\n    <h1 class=\"results__title text-color--1 text-uppercase\">Результат поиска: {{ searchValue }}</h1>\n\n    <app-product-list-card class=\"results__products-list\" [isLoading]=\"productsLoading\">\n      <app-product-card *ngFor=\"let product of products\" [product]=\"product\"></app-product-card>\n    </app-product-list-card>\n\n    <div class=\"results__results-empty\" *ngIf=\"isProductsEmpty\">\n      <p class=\"results-empty__text text-uppercase text-line-height-1-6\">\n        По данному запросу ничего не найдено. Попробуйте еще раз или перейдите в каталог\n      </p>\n\n      <a class=\"results-empty__link text-uppercase\" routerLink=\"/catalog\" appUiButton=\"1\"\n        >В каталог</a\n      >\n    </div>\n  </div>\n\n  <button\n    class=\"results__btn-scroll btn-reset btn-scroll card-background\"\n    aria-label=\"Пролистнуть наверх\"\n    appButtonScroll\n  >\n    <app-icon class=\"btn-scroll__icon\" icon=\"arrow-right\"></app-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "SearchingResultsContainerComponent",
            "id": "component-SearchingResultsContainerComponent-cfb65202620cf48577fdffb15a9022f382bc353a7fb3c32fade58553d289c67833a74d4b5e7f1bd34b42749cb72e5ef791ce19f075b7604070ddfe17f2d5f049",
            "file": "src/app/pages/searching-results/searching-results-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-searching-results-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./searching-results-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMeta",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeChangeQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscribeToProductsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, map, switchMap, takeUntil, tap } from 'rxjs';\nimport { ProductsFilterService } from 'src/app/services/products-filter/products-filter.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\n\nimport { IProduct } from '~types/product';\nimport { description } from './data/meta';\nimport { pages } from 'src/app/CEO';\n\n@Component({\n  selector: 'app-searching-results-container',\n  templateUrl: './searching-results-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchingResultsContainerComponent implements OnInit, OnDestroy {\n  private destroySubject: Subject<null> = new Subject();\n  public searchValue = '';\n  public isLoading: boolean;\n  public products: IProduct[] = [];\n\n  constructor(\n    private title: Title,\n    private cdr: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private productsService: ProductsService,\n    private productsFilterService: ProductsFilterService,\n    private meta: Meta\n  ) {\n    this.setMeta();\n  }\n\n  ngOnInit(): void {\n    this.subscribeToProductsLoading();\n    this.subscribeChangeQueryParams();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private setMeta(): void {\n    this.meta.addTag({\n      name: 'description',\n      content: description\n    });\n  }\n\n  private subscribeToProductsLoading(): void {\n    this.productsService\n      .productsIsLoading()\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((isLoading) => {\n        this.isLoading = isLoading;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private subscribeChangeQueryParams(): void {\n    this.activatedRoute.queryParams\n      .pipe(\n        takeUntil(this.destroySubject),\n        tap((params) => {\n          this.products = [];\n          this.searchValue = params['search'];\n          this.title.setTitle(`${this.searchValue} - ${pages.searching.title}`);\n        }),\n        switchMap((params) =>\n          this.productsService\n            .getProducts()\n            .pipe(\n              map((products) =>\n                products.filter((product) =>\n                  this.productsFilterService.isHasTitle(product, { title: params['search'] })\n                )\n              )\n            )\n        )\n      )\n      .subscribe((product) => {\n        this.products = product;\n        this.cdr.markForCheck();\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsFilterService",
                        "type": "ProductsFilterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-searching-results\n  [productsLoading]=\"isLoading\"\n  [searchValue]=\"searchValue\"\n  [products]=\"products\"\n></app-searching-results>\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-3091ab2f3d84c49d66255bfc0d6c350c1e09a55991cd4a8c28069c919b2c3aa684cee57d272369f7d2bc1598c593c69cac7b52807261d2a908ead8ef2d6e885b",
            "file": "src/app/components/sidebar/sidebar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "positionMenu",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "PositionMenu",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "keydownObserver",
                    "args": [
                        {
                            "name": "key",
                            "type": "KeydownKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "KeydownKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "switchScrolling",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchVisibleMenu",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { PositionMenu } from './types';\nimport {\n  KeydownEventService,\n  KeydownKey\n} from 'src/app/services/events/keydown/keydown-event.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  private _isOpen = false;\n  private set isMenuOpen(value: boolean) {\n    this.switchScrolling(value);\n    this._isOpen = value;\n    this.cdr.markForCheck();\n  }\n\n  private destroySubject: Subject<null> = new Subject();\n  @Input() positionMenu: PositionMenu = 'left';\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private keydownEventService: KeydownEventService\n  ) {}\n\n  ngOnInit(): void {\n    this.keydownEventService.keydownObservable$\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe((key) => this.keydownObserver(key));\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private keydownObserver(key: KeydownKey): void {\n    if (key === 'Escape' && this._isOpen) {\n      this.switchVisibleMenu(false);\n    }\n  }\n\n  public get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  public get isLeftPosition(): boolean {\n    return this.positionMenu === 'left';\n  }\n\n  public get isRightPosition(): boolean {\n    return this.positionMenu === 'right';\n  }\n\n  public switchVisibleMenu(value?: boolean): void {\n    if (value === undefined) {\n      this.isMenuOpen = !this.isMenuOpen;\n      return;\n    }\n    this.isMenuOpen = value;\n  }\n\n  private switchScrolling(value: boolean): void {\n    if (value) {\n      this.renderer.addClass(this.document.body, 'overflow-hidden');\n      return;\n    }\n    this.renderer.removeClass(this.document.body, 'overflow-hidden');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.outgoing-block {\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 10;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: $color-9;\r\n  transition: transform 0.3s;\r\n\r\n  &__wrapper-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n\r\n  &--position {\r\n    &-left {\r\n      right: 100%;\r\n    }\r\n\r\n    &-right {\r\n      left: 100%;\r\n    }\r\n  }\r\n\r\n  &--opened {\r\n    &-left {\r\n      transform: translateX(100%);\r\n    }\r\n\r\n    &-right {\r\n      transform: translateX(-100%);\r\n    }\r\n  }\r\n}\r\n\r\n.background {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 9;\r\n  display: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb($color: $color-9, $alpha: 0.5);\r\n  cursor: pointer;\r\n\r\n  &--active {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.visibility--hidden {\r\n  visibility: hidden;\r\n}\r\n",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "keydownEventService",
                        "type": "KeydownEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "keydownEventService",
                        "type": "KeydownEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isMenuOpen": {
                    "name": "isMenuOpen",
                    "setSignature": {
                        "name": "isMenuOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "isOpen": {
                    "name": "isOpen",
                    "getSignature": {
                        "name": "isOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 60
                    }
                },
                "isLeftPosition": {
                    "name": "isLeftPosition",
                    "getSignature": {
                        "name": "isLeftPosition",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 64
                    }
                },
                "isRightPosition": {
                    "name": "isRightPosition",
                    "getSignature": {
                        "name": "isRightPosition",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 68
                    }
                }
            },
            "templateData": "<div\n  class=\"outgoing-block\"\n  [ngClass]=\"{\n    'outgoing-block--position-left': isLeftPosition,\n    'outgoing-block--position-right': isRightPosition,\n    'outgoing-block--opened-left': isOpen && isLeftPosition,\n    'outgoing-block--opened-right': isOpen && isRightPosition\n  }\"\n>\n  <div\n    class=\"outgoing-block__wrapper-content\"\n    [ngClass]=\"{ 'visibility--hidden': !isOpen }\"\n    aria-haspopup=\"true\"\n    [attr.aria-expanded]=\"isOpen\"\n    role=\"dialog\"\n  >\n    <ng-content></ng-content>\n  </div>\n</div>\n\n<div\n  class=\"background\"\n  [ngClass]=\"{ 'background--active': isOpen }\"\n  (pointerdown)=\"switchVisibleMenu(false)\"\n></div>\n"
        },
        {
            "name": "SlideComponent",
            "id": "component-SlideComponent-45bc5663e943efeb4b6a34a86a98c99e4eefe4d80e9e2e9244006eb2aa8cb935c46c39cf65163ba15566dde512dbf0bfad04c1033fbe2f7f50605e871959b83b",
            "file": "src/app/components/slide/slide.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide",
            "styleUrls": [
                "./slide.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slide.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-slide',\n  templateUrl: './slide.component.html',\n  styleUrls: ['./slide.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlideComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n}\r\n\r\n.slide {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./slide.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"slide\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-5b67a95541c78f8ea72da19e6c82d729877ef6ae6f43bd32ffd87b7c2670554f8df4b7fbb5eea81e0665fc08899bb363ae7a8f9fde59f137f4296de375ebf7d8",
            "file": "src/app/components/slider/slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animateDuration",
                    "defaultValue": "0.3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "countVisibleSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "TOrientation",
                    "decorators": []
                },
                {
                    "name": "spaceBetweenSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_activeIndexStepSlides",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_countVisibleSlides",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isDraggable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_offsetSlidesCurrent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TOrientation",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "_slideHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_slideWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_spaceBetweenSlides",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_stepSlideToPx",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "containerRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'containerRef', {read: 'containerRef'}"
                        }
                    ]
                },
                {
                    "name": "countSlides",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "indexLastStepSlides",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isDraggableForMouse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isVisibleContent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "maxCountStepSlides",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "offsetSlidesBeforeMoving",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "pointerInitialPosition",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pointerOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resizeObserver$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResizeObserver",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sliderElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'slider'"
                        }
                    ]
                },
                {
                    "name": "sliderHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sliderWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "slidesQueryList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ElementRef>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SlideComponent, {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "stepRatio",
                    "defaultValue": "0.3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "stepRatioToPx",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "wrapperElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "calcBasedNumberSlides",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "calculateHeightSlides",
                    "args": [
                        {
                            "name": "sliderWrapperHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sliderWrapperHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateSizeSlides",
                    "args": [
                        {
                            "name": "sliderRootWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sliderRootHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sliderRootWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sliderRootHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateWidthSlides",
                    "args": [
                        {
                            "name": "sliderWrapperWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sliderWrapperWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPointerPosition",
                    "args": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerPointerDown",
                    "args": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerPointerMove",
                    "args": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 307,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerPointerUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "nextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 354,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "preventClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prevStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "saveSliderSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setActiveSlideAfterOffset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setFixedHeghtToSlider",
                    "args": [
                        {
                            "name": "sliderHeight",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sliderHeight",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHandlerPreventClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setHeightToSlides",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setHorizontalSpaceToSlide",
                    "args": [
                        {
                            "name": "slide",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "slide",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setVerticalSpaceToSlide",
                    "args": [
                        {
                            "name": "slide",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "slide",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWidthToSlides",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SlideComponent } from '~components/slide/slide.component';\n\nexport type TOrientation = 'vertical' | 'horizontal';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SliderComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\n  @ViewChild('containerRef', { read: 'containerRef' })\n  containerRef: ViewContainerRef;\n  @ContentChildren(SlideComponent, { read: ElementRef })\n  slidesQueryList: QueryList<ElementRef>;\n  @ViewChild('slider') sliderElRef: ElementRef;\n  @ViewChild('wrapper') wrapperElRef: ElementRef;\n\n  protected _orientation: TOrientation = 'horizontal';\n  @Input() public set orientation(orientation: TOrientation) {\n    this._orientation = orientation;\n\n    if (!this.sliderElRef) {\n      return;\n    }\n    this.cdr.markForCheck();\n\n    this.sliderWidth = parseFloat(getComputedStyle(this.sliderElRef.nativeElement).width);\n    this.sliderHeight = parseFloat(getComputedStyle(this.sliderElRef.nativeElement).height);\n\n    this.calculateSizeSlides(this.sliderWidth, this.sliderHeight);\n  }\n\n  private _countVisibleSlides = 2;\n  @Input() public set countVisibleSlides(count: number) {\n    this._countVisibleSlides = count;\n\n    if (!this.sliderElRef) {\n      return;\n    }\n    this.sliderHeight = parseFloat(getComputedStyle(this.sliderElRef.nativeElement).height);\n    this.sliderWidth = parseFloat(getComputedStyle(this.sliderElRef.nativeElement).width);\n    this.calculateSizeSlides(this.sliderWidth, this.sliderHeight);\n  }\n  @Input() public step = 2;\n  @Input() public animateDuration = 0.3;\n  @Input() public set spaceBetweenSlides(value: number) {\n    this._spaceBetweenSlides = Math.ceil(value / 2);\n  }\n  public get spaceBetweenSlides() {\n    return this._spaceBetweenSlides;\n  }\n\n  private destroySubject: Subject<null> = new Subject();\n  private sliderHeight = 0;\n  private sliderWidth = 0;\n  private _spaceBetweenSlides = 15;\n  private _stepSlideToPx = 0;\n  private _activeIndexStepSlides = 0;\n  private _slideWidth = 0;\n  private _slideHeight = 0;\n  private _offsetSlidesCurrent = 0;\n  private countSlides: number;\n  private indexLastStepSlides = 0;\n  private maxCountStepSlides = 0;\n  private resizeObserver$: ResizeObserver;\n  private stepRatio = 0.3;\n  private stepRatioToPx = 0;\n  private _isDraggable = false;\n  private isDraggableForMouse = false;\n  private pointerInitialPosition = 0;\n  private pointerOffset = 0;\n  protected isVisibleContent = false;\n  protected offsetSlidesBeforeMoving = 0;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    if (this.isHorizontalOrientation) {\n      this.isVisibleContent = true;\n    }\n    this.resizeObserver$ = new ResizeObserver((entries) => {\n      this.calculateSizeSlides(entries[0].contentRect.width, entries[0].contentRect.height);\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.slidesQueryList.changes.pipe(takeUntil(this.destroySubject)).subscribe(() => {\n      this.calcBasedNumberSlides();\n      this.saveSliderSizes();\n      this.calculateSizeSlides(this.sliderWidth, this.sliderHeight);\n    });\n    this.calcBasedNumberSlides();\n  }\n\n  ngAfterViewInit(): void {\n    this.saveSliderSizes();\n    this.setHandlerPreventClick();\n    this.calculateSizeSlides(this.sliderWidth, this.sliderHeight);\n    this.resizeObserver$.observe(this.sliderElRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    if (this.resizeObserver$) {\n      this.resizeObserver$.disconnect();\n    }\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private setHandlerPreventClick(): void {\n    this.sliderElRef.nativeElement.addEventListener(\n      'click',\n      (ev: MouseEvent) => this.preventClickEvent(ev),\n      { capture: true }\n    );\n  }\n\n  private calculateSizeSlides(sliderRootWidth: number, sliderRootHeight: number): void {\n    this.isVisibleContent = false;\n    if (this.isHorizontalOrientation) {\n      this.setFixedHeghtToSlider(null);\n      this.calculateWidthSlides(sliderRootWidth);\n      this.wrapperElRef.nativeElement.style.flexDirection = 'row';\n      this.isVisibleContent = true;\n      this.cdr.markForCheck();\n      return;\n    }\n    this.setFixedHeghtToSlider(this.sliderHeight);\n    this.calculateHeightSlides(sliderRootHeight);\n    this.wrapperElRef.nativeElement.style.flexDirection = 'column';\n    this.isVisibleContent = true;\n    this.cdr.markForCheck();\n  }\n\n  private calcBasedNumberSlides(): void {\n    this.countSlides = this.slidesQueryList.length;\n    this.maxCountStepSlides = Math.ceil(this.countSlides / this.step);\n    this.indexLastStepSlides = this.maxCountStepSlides - 1;\n  }\n\n  private saveSliderSizes(): void {\n    const { width, height } = getComputedStyle(this.sliderElRef.nativeElement);\n    this.sliderHeight = parseFloat(width);\n    this.sliderWidth = parseFloat(height);\n  }\n\n  private set slideWidth(width: number) {\n    this._slideWidth = width;\n    this.stepSlideToPx = this.slideWidth * this.step + this.spaceBetweenSlides * 2 * this.step;\n    this.stepRatioToPx = this.stepSlideToPx * this.stepRatio;\n    this.setWidthToSlides();\n  }\n\n  private get slideWidth() {\n    return this._slideWidth;\n  }\n\n  public get isDraggable(): boolean {\n    return this._isDraggable;\n  }\n\n  private set slideHeight(height: number) {\n    this._slideHeight = height;\n    this.stepSlideToPx = this.slideHeight * this.step + this.spaceBetweenSlides * 2 * this.step;\n    this.stepRatioToPx = this.stepSlideToPx * this.stepRatio;\n    this.setHeightToSlides();\n  }\n\n  private get slideHeight() {\n    return this._slideHeight;\n  }\n\n  private setHorizontalSpaceToSlide(slide: HTMLElement, isReset?: boolean): void {\n    slide.style.marginLeft = isReset ? '' : `${this.spaceBetweenSlides}px`;\n    slide.style.marginRight = isReset ? '' : `${this.spaceBetweenSlides}px`;\n  }\n\n  private setVerticalSpaceToSlide(slide: HTMLElement, isReset?: boolean): void {\n    slide.style.marginTop = isReset ? '' : `${this.spaceBetweenSlides}px`;\n    slide.style.marginBottom = isReset ? '' : `${this.spaceBetweenSlides}px`;\n  }\n\n  private setWidthToSlides(): void {\n    this.slidesQueryList.forEach((slideElRef) => {\n      slideElRef.nativeElement.style.width = `${this.slideWidth}px`;\n      slideElRef.nativeElement.style.height = '';\n      this.setHorizontalSpaceToSlide(slideElRef.nativeElement);\n      this.setVerticalSpaceToSlide(slideElRef.nativeElement, true);\n    });\n  }\n\n  private setHeightToSlides(): void {\n    this.slidesQueryList.forEach((slideElRef) => {\n      slideElRef.nativeElement.style.height = `${this.slideHeight}px`;\n      slideElRef.nativeElement.style.width = '';\n      this.setVerticalSpaceToSlide(slideElRef.nativeElement);\n      this.setHorizontalSpaceToSlide(slideElRef.nativeElement, true);\n    });\n  }\n\n  private setFixedHeghtToSlider(sliderHeight: number | null): void {\n    this.sliderElRef.nativeElement.style.height = sliderHeight === null ? '' : `${sliderHeight}px`;\n  }\n\n  private set stepSlideToPx(value: number) {\n    this._stepSlideToPx = value;\n    this.offsetSlidesCurrent = -(this.activeIndexStepSlides * value);\n  }\n\n  private get stepSlideToPx(): number {\n    return this._stepSlideToPx;\n  }\n\n  private set offsetSlidesCurrent(value: number) {\n    this._offsetSlidesCurrent = value;\n  }\n\n  protected get offsetSlidesCurrent(): number {\n    return this._offsetSlidesCurrent;\n  }\n\n  private set activeIndexStepSlides(indexGuessStepSlides: number) {\n    if (indexGuessStepSlides === 0) {\n      this._activeIndexStepSlides = 0;\n      this.offsetSlidesCurrent = 0;\n      return;\n    }\n    if (indexGuessStepSlides < 0) {\n      this._activeIndexStepSlides = this.indexLastStepSlides;\n      this.offsetSlidesCurrent = -(this.indexLastStepSlides * this.stepSlideToPx);\n      return;\n    }\n    if (indexGuessStepSlides > this.indexLastStepSlides) {\n      this._activeIndexStepSlides = 0;\n      this.offsetSlidesCurrent = 0;\n      return;\n    }\n    this._activeIndexStepSlides = indexGuessStepSlides;\n    this.offsetSlidesCurrent = -(indexGuessStepSlides * this.stepSlideToPx);\n  }\n\n  private get activeIndexStepSlides(): number {\n    return this._activeIndexStepSlides;\n  }\n\n  private setActiveSlideAfterOffset(): void {\n    const interimCalc = -this.offsetSlidesCurrent / this.stepSlideToPx;\n    const guessIndexStepSlide =\n      this.pointerOffset < 0 ? Math.ceil(interimCalc) : Math.floor(interimCalc);\n\n    this.activeIndexStepSlides = guessIndexStepSlide;\n  }\n\n  private calculateWidthSlides(sliderWrapperWidth: number): void {\n    this.slideWidth = sliderWrapperWidth / this._countVisibleSlides - this.spaceBetweenSlides * 2;\n  }\n\n  private calculateHeightSlides(sliderWrapperHeight: number): void {\n    this.slideHeight = sliderWrapperHeight / this._countVisibleSlides - this.spaceBetweenSlides * 2;\n  }\n\n  protected get isVerticalOrientation(): boolean {\n    return this._orientation === 'vertical';\n  }\n\n  protected get isHorizontalOrientation(): boolean {\n    return !this.isVerticalOrientation;\n  }\n\n  protected handlerPointerDown(ev: PointerEvent): void {\n    ev.preventDefault();\n\n    if (!ev.currentTarget) {\n      return;\n    }\n\n    this._isDraggable = true;\n    this.pointerInitialPosition = this.getPointerPosition(ev);\n    this.offsetSlidesBeforeMoving = this.offsetSlidesCurrent;\n  }\n\n  private getPointerPosition(ev: PointerEvent): number {\n    if (this.isHorizontalOrientation) {\n      return ev.clientX - (<HTMLElement>ev.currentTarget).offsetLeft;\n    } else {\n      return ev.clientY - (<HTMLElement>ev.currentTarget).offsetTop;\n    }\n  }\n\n  protected handlerPointerMove(ev: PointerEvent): void {\n    ev.preventDefault();\n\n    if (!this._isDraggable) {\n      return;\n    }\n\n    if (!this.isDraggableForMouse && ev.pointerType === 'mouse') {\n      this.isDraggableForMouse = true;\n    }\n\n    this.pointerOffset = this.getPointerPosition(ev) - this.pointerInitialPosition;\n    this.animateDuration = 0;\n    this.offsetSlidesCurrent = this.offsetSlidesBeforeMoving + this.pointerOffset;\n\n    if (Math.abs(this.pointerOffset) >= this.stepRatioToPx) {\n      this.handlerPointerUp();\n    }\n  }\n\n  protected handlerPointerUp(): void {\n    if (this._isDraggable) {\n      this._isDraggable = false;\n    } else {\n      return;\n    }\n\n    this.animateDuration = 0.3;\n    this.offsetSlidesBeforeMoving = this.offsetSlidesCurrent;\n\n    this.setActiveSlideAfterOffset();\n    this.pointerOffset = 0;\n  }\n\n  protected preventClickEvent(event: MouseEvent) {\n    if (this.isDraggableForMouse) {\n      this.isDraggableForMouse = false;\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n\n  public prevStep(): void {\n    this.activeIndexStepSlides = this.activeIndexStepSlides - 1;\n    this.cdr.markForCheck();\n  }\n\n  public nextStep(): void {\n    this.activeIndexStepSlides = this.activeIndexStepSlides + 1;\n    this.cdr.markForCheck();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.slider {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  &--orientation-verical {\r\n    width: 100%;\r\n  }\r\n\r\n  &__container {\r\n    display: flex;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    touch-action: none;\r\n\r\n    &--vertical {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  &__wrapper {\r\n    display: flex;\r\n    width: 100%;\r\n\r\n    &--orientation-vertical {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 90,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterContentInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "orientation": {
                    "name": "orientation",
                    "setSignature": {
                        "name": "orientation",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "orientation",
                                "type": "TOrientation",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "orientation",
                                "type": "TOrientation",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "countVisibleSlides": {
                    "name": "countVisibleSlides",
                    "setSignature": {
                        "name": "countVisibleSlides",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "count",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "count",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "spaceBetweenSlides": {
                    "name": "spaceBetweenSlides",
                    "setSignature": {
                        "name": "spaceBetweenSlides",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 63,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "spaceBetweenSlides",
                        "type": "",
                        "returnType": "",
                        "line": 66
                    }
                },
                "slideWidth": {
                    "name": "slideWidth",
                    "setSignature": {
                        "name": "slideWidth",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "width",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 164,
                        "jsdoctags": [
                            {
                                "name": "width",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "slideWidth",
                        "type": "",
                        "returnType": "",
                        "line": 171
                    }
                },
                "isDraggable": {
                    "name": "isDraggable",
                    "getSignature": {
                        "name": "isDraggable",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 175
                    }
                },
                "slideHeight": {
                    "name": "slideHeight",
                    "setSignature": {
                        "name": "slideHeight",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "height",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 179,
                        "jsdoctags": [
                            {
                                "name": "height",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "slideHeight",
                        "type": "",
                        "returnType": "",
                        "line": 186
                    }
                },
                "stepSlideToPx": {
                    "name": "stepSlideToPx",
                    "setSignature": {
                        "name": "stepSlideToPx",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 222,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "stepSlideToPx",
                        "type": "number",
                        "returnType": "number",
                        "line": 227
                    }
                },
                "offsetSlidesCurrent": {
                    "name": "offsetSlidesCurrent",
                    "setSignature": {
                        "name": "offsetSlidesCurrent",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 231,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "offsetSlidesCurrent",
                        "type": "number",
                        "returnType": "number",
                        "line": 235
                    }
                },
                "activeIndexStepSlides": {
                    "name": "activeIndexStepSlides",
                    "setSignature": {
                        "name": "activeIndexStepSlides",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "indexGuessStepSlides",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 239,
                        "jsdoctags": [
                            {
                                "name": "indexGuessStepSlides",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeIndexStepSlides",
                        "type": "number",
                        "returnType": "number",
                        "line": 259
                    }
                },
                "isVerticalOrientation": {
                    "name": "isVerticalOrientation",
                    "getSignature": {
                        "name": "isVerticalOrientation",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 279
                    }
                },
                "isHorizontalOrientation": {
                    "name": "isHorizontalOrientation",
                    "getSignature": {
                        "name": "isHorizontalOrientation",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 283
                    }
                }
            },
            "templateData": "<div class=\"slider\" #slider [ngClass]=\"{ 'slider--orientation-verical': isVerticalOrientation }\">\n  <div\n    class=\"slider__container\"\n    (pointermove)=\"handlerPointerMove($event)\"\n    (pointerdown)=\"handlerPointerDown($event)\"\n    (pointerup)=\"handlerPointerUp()\"\n    ondrag=\"() => false\"\n  >\n    <div\n      #wrapper\n      class=\"slider__wrapper\"\n      [ngStyle]=\"{\n        transform: isHorizontalOrientation\n          ? 'translateX(' + offsetSlidesCurrent + 'px)'\n          : 'translateY(' + offsetSlidesCurrent + 'px)',\n        transition: 'transform ' + animateDuration + 's'\n      }\"\n    >\n      <ng-container #containerRef *ngIf=\"isVisibleContent\">\n        <ng-content></ng-content>\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SocialSectionComponent",
            "id": "component-SocialSectionComponent-172f0f4da42c50c00aaef253a6514cdc856ed7fbfc2aed54dbbbb4ab9f34b35413344b55e697272201265c0fe539ff56aab72d05d884c02fc0a896f7e18fe869",
            "file": "src/app/page-components/main/social-section/social-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-social-section",
            "styleUrls": [
                "./social-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./social-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.social",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { pageData } from '~pages/main/data/pageData';\n\n@Component({\n  selector: 'app-social-section',\n  templateUrl: './social-section.component.html',\n  styleUrls: ['./social-section.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SocialSectionComponent {\n  public data = pageData.social;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.social-section {\r\n  position: relative;\r\n\r\n  &__container {\r\n    display: flex;\r\n    padding-top: 270px;\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  &--decor-bg {\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -231px;\r\n      left: 76%;\r\n      width: 793px;\r\n      height: 580px;\r\n      background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n      background-position: bottom;\r\n      background-repeat: no-repeat;\r\n      transform: rotateZ(11deg);\r\n      background-size: 100% 100%;\r\n      z-index: -1;\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -150px;\r\n    left: 20%;\r\n    width: 975px;\r\n    height: 290px;\r\n    background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n    background-position: bottom;\r\n    background-repeat: no-repeat;\r\n    transform: rotateZ(11deg);\r\n    background-size: 100% 100%;\r\n    z-index: -1;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -140px;\r\n    left: -12%;\r\n    width: 509px;\r\n    height: 290px;\r\n    background-image: url('/assets/images/pages/shared/green-color-bg.svg');\r\n    background-position: bottom;\r\n    background-repeat: no-repeat;\r\n    transform: rotateZ(11deg);\r\n    background-size: 100% 100%;\r\n    z-index: -1;\r\n    opacity: 0.8;\r\n  }\r\n}\r\n\r\n.wrapper {\r\n  &-1 {\r\n    display: flex;\r\n    flex-basis: 70%;\r\n    flex-grow: 1;\r\n    min-height: 160px;\r\n    margin-right: 30px;\r\n\r\n    &__block-image {\r\n      flex-basis: 100%;\r\n    }\r\n\r\n    &__block-image:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n\r\n  &-2 {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-basis: 30%;\r\n  }\r\n}\r\n\r\n.social-list {\r\n  display: flex;\r\n\r\n  &__item {\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &__icon {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.wrapper-social-list {\r\n  align-self: flex-end;\r\n}\r\n\r\n.signature {\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: -55px;\r\n    width: 50%;\r\n    min-width: 100px;\r\n    height: 101px;\r\n    background-image: url('/assets/images/pages/main/our-social-networks-bg.svg');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: $color-1;\r\n  }\r\n}\r\n\r\n.block-image {\r\n  background-position: bottom;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  &-1 {\r\n    background-image: url('/assets/images/pages/main/social-section-img-1.jpg');\r\n  }\r\n  &-2 {\r\n    background-image: url('/assets/images/pages/main/social-section-img-2.jpg');\r\n  }\r\n  &-3 {\r\n    background-image: url('/assets/images/pages/main/social-section-img-3.jpg');\r\n  }\r\n  &-4 {\r\n    background-image: url('/assets/images/pages/main/social-section-img-4.jpg');\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .social-section {\r\n    &__container {\r\n      flex-direction: column-reverse;\r\n      padding-top: 100px;\r\n      padding-bottom: 100px;\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    &-1 {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      display: grid;\r\n      grid-gap: 20px;\r\n      margin-right: 0;\r\n\r\n      &__block-image {\r\n        padding-top: 100%;\r\n\r\n        &:not(:last-child) {\r\n          margin-right: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-2 {\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n\r\n      &__signature {\r\n        margin-right: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrapper-social-list {\r\n    align-self: center;\r\n  }\r\n\r\n  .signature {\r\n    width: 40%;\r\n    padding-top: 130px;\r\n\r\n    &::after {\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n\r\n    &::before {\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .social-section {\r\n    &__container {\r\n      padding-top: 10px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./social-section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"social-section\">\n  <div class=\"social-section--decor-bg\"></div>\n\n  <div class=\"container social-section__container\">\n    <h2 class=\"visually-hidden\">{{ data.title }}</h2>\n\n    <div class=\"wrapper-1\">\n      <div class=\"wrapper-1__block-image block-image block-image-1\"></div>\n      <div class=\"wrapper-1__block-image block-image block-image-2\"></div>\n      <div class=\"wrapper-1__block-image block-image block-image-3\"></div>\n      <div class=\"wrapper-1__block-image block-image block-image-4\"></div>\n    </div>\n\n    <div class=\"wrapper-2\">\n      <div class=\"wrapper-2__signature signature\"></div>\n\n      <div class=\"wrapper-social-list\">\n        <ul class=\"list-reset wrapper-social-list__social-list social-list\">\n          <li class=\"social-list__item\">\n            <a\n              class=\"social-list__link outline-focus\"\n              [href]=\"data.contacts.social.instagram\"\n              aria-label=\"Инстаграм\"\n              ><app-icon\n                class=\"social-list__icon\"\n                width=\"full\"\n                height=\"full\"\n                icon=\"instagram\"\n              ></app-icon\n            ></a>\n          </li>\n\n          <li class=\"social-list__item\">\n            <a\n              class=\"social-list__link outline-focus\"\n              [href]=\"data.contacts.social.whatsapp\"\n              aria-label=\"Вотсап\"\n              ><app-icon\n                class=\"social-list__icon\"\n                width=\"full\"\n                height=\"full\"\n                icon=\"whatsapp\"\n              ></app-icon\n            ></a>\n          </li>\n\n          <li class=\"social-list__item\">\n            <a\n              class=\"social-list__link outline-focus\"\n              [href]=\"'tel:' + data.contacts.phone\"\n              aria-label=\"Совершить звонок\"\n              ><app-icon\n                class=\"social-list__icon\"\n                width=\"full\"\n                height=\"full\"\n                icon=\"phone\"\n              ></app-icon\n            ></a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "SortingComponent",
            "id": "component-SortingComponent-11453030d995a1b38c063ed675fb6b90188be834cc144681eace7f881e6a4dfc754755fea94d8d96bcec752184ccc5ce1d10ef84c9547d586413101ec48f1309",
            "file": "src/app/components/sorting/sorting.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sorting",
            "styleUrls": [
                "./sorting.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sorting.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeOptionIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "defaultTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "IOption<T>[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitSetSorting",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<IOption | null>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeOptionIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_defaultTitle",
                    "defaultValue": "'Сортировка'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Title",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "categoryTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CategoryTitle",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "dropdownComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownComponent",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown', {read: DropdownComponent}"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sort | null",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSorting",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resetActiveOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setActiveOption",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSorting",
                    "args": [
                        {
                            "name": "option",
                            "type": "IOption<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "IOption<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { IOption, CategoryTitle, Sort, Title } from './types';\nimport { DropdownComponent } from '~components/dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-sorting',\n  templateUrl: './sorting.component.html',\n  styleUrls: ['./sorting.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SortingComponent<T extends string = never> {\n  @ViewChild('dropdown', { read: DropdownComponent }) dropdownComponent: DropdownComponent;\n  private _defaultTitle: Title = 'Сортировка';\n  @Input() set defaultTitle(value: IOption<T>['title']) {\n    this._defaultTitle = value;\n  }\n  @Input() options: IOption<T>[];\n\n  private _activeOptionIndex: number | null;\n  get activeOptionIndex(): number | null {\n    return this._activeOptionIndex;\n  }\n  @Input() set activeOptionIndex(index: number | null) {\n    if (index === null) {\n      this.resetActiveOption();\n      return;\n    }\n    this.setActiveOption(index);\n  }\n\n  @Output() emitSetSorting: EventEmitter<IOption<T> | null> = new EventEmitter();\n\n  protected categoryTitle: CategoryTitle;\n  protected sort: Sort | null;\n\n  get btnTitle(): Title {\n    return this.categoryTitle || this._defaultTitle;\n  }\n\n  private setActiveOption(index: number): void {\n    this._activeOptionIndex = index;\n    this.sort = this.options[index].sort;\n    this.categoryTitle = this.options[index].categoryTitle;\n  }\n\n  private resetActiveOption(): void {\n    this._activeOptionIndex = null;\n    this.sort = null;\n    this.categoryTitle = this._defaultTitle;\n  }\n\n  protected setSorting(option: IOption<T>, index: number): void {\n    if (index === this._activeOptionIndex) {\n      this.emitSetSorting.emit(null);\n      return;\n    }\n    this.emitSetSorting.emit(option);\n  }\n\n  public closeSorting(): void {\n    if (!this.dropdownComponent) {\n      return;\n    }\n    this.dropdownComponent.switchContentVisible(false);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n\r\n.sorting {\r\n  &__sort-btn {\r\n    width: 100%;\r\n    padding: 16px 20px;\r\n    text-align: start;\r\n  }\r\n}\r\n\r\n.sorting-list {\r\n  border-radius: 10px;\r\n  background-color: rgb($color: $color-5, $alpha: 0.9);\r\n}\r\n\r\n.item-btn {\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 16px 27px 16px 20px;\r\n  text-align: start;\r\n  transition: background-color 0.3s;\r\n\r\n  &--active {\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 10px;\r\n      top: 50%;\r\n      width: 10px;\r\n      height: 10px;\r\n      transform: translateY(-50%);\r\n      background-image: url('/assets/icons/check-mark.svg');\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      background-size: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgba($color: #7d2253, $alpha: 0.3);\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgba($color: #7d2253, $alpha: 0.5);\r\n  }\r\n}\r\n\r\n.sort-btn {\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  padding: 16px 40px 16px 20px;\r\n  border-radius: 10px;\r\n  text-align: start;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: rgba($color: #7d2253, $alpha: 0.3);\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgba($color: #7d2253, $alpha: 0.5);\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    border-top: 9px solid #ffffff;\r\n    border-left: 6px solid transparent;\r\n    border-right: 6px solid transparent;\r\n    transform-origin: center 2px;\r\n    transition: transform 0.1s;\r\n  }\r\n\r\n  &--asc {\r\n    &::after {\r\n      transform: rotateZ(180deg);\r\n    }\r\n  }\r\n\r\n  &--desc {\r\n    &::after {\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./sorting.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "defaultTitle": {
                    "name": "defaultTitle",
                    "setSignature": {
                        "name": "defaultTitle",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "activeOptionIndex": {
                    "name": "activeOptionIndex",
                    "setSignature": {
                        "name": "activeOptionIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "index",
                                "type": "number | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "index",
                                "type": "number | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeOptionIndex",
                        "type": "",
                        "returnType": "number | null",
                        "line": 27
                    }
                },
                "btnTitle": {
                    "name": "btnTitle",
                    "getSignature": {
                        "name": "btnTitle",
                        "type": "",
                        "returnType": "Title",
                        "line": 43
                    }
                }
            },
            "templateData": "<app-dropdown class=\"sorting\" trigger=\"click\" #dropdown>\n  <button\n    class=\"sorting__sort-btn sort-btn btn-reset text-color--4 text-uppercase text-weight-300 card-background outline-focus\"\n    [ngClass]=\"{\n      'sort-btn--desc': sort === 'desc',\n      'sort-btn--asc': sort === 'asc'\n    }\"\n    slot=\"button\"\n  >\n    {{ btnTitle }}\n  </button>\n\n  <ul class=\"sorting__sorting-list sorting-list list-reset\" slot=\"content\">\n    <li class=\"sorting__item\" *ngFor=\"let option of options; let index = index\">\n      <button\n        class=\"sorting__item-btn item-btn btn-reset text-color--4 text-weight-300 text-uppercase outline-focus\"\n        (click)=\"setSorting(option, index)\"\n        [ngClass]=\"{ 'item-btn--active': activeOptionIndex === index }\"\n      >\n        {{ option.title }}\n      </button>\n    </li>\n  </ul>\n</app-dropdown>\n"
        },
        {
            "name": "SortingContainerComponent",
            "id": "component-SortingContainerComponent-812250e6ded292e5e14b831a33d07669533f839513c5a19350cc837c8b0ba435fb05a5c153627274b925ae0461f063db07773a69af142ca031f397e49cc78a13",
            "file": "src/app/containers/sorting-container/sorting-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sorting-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sorting-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOptionIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IOption<TargetSort>[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "sortingComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortingComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sorting', {read: SortingComponent}"
                        }
                    ]
                },
                {
                    "name": "sortingParams",
                    "defaultValue": "{\n    targetSort: null,\n    sort: null\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISortingParams",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlerSetSorting",
                    "args": [
                        {
                            "name": "option",
                            "type": "IOption<TargetSort> | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "IOption<TargetSort> | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setActiveOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setQueryParams",
                    "args": [
                        {
                            "name": "unactive",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "unactive",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQueryParams",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetSort",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "targetSort",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQueryParams",
                    "args": [
                        {
                            "name": "sort",
                            "type": "null | Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetSort",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "null | Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "targetSort",
                            "type": "TargetSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeChangeQueryParams",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ISortingParams, TargetSort } from './types';\nimport { Sort, IOption } from 'src/app/components/sorting/types';\nimport { OPTIONS } from './data';\nimport { ParamsService } from 'src/app/services/params/params.service';\nimport { SortingComponent } from '~components/sorting/sorting.component';\n\n@Component({\n  selector: 'app-sorting-container',\n  templateUrl: './sorting-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SortingContainerComponent implements OnInit, OnDestroy {\n  @ViewChild('sorting', { read: SortingComponent }) sortingComponent: SortingComponent;\n  private destroySubject: Subject<null> = new Subject();\n  private sortingParams: ISortingParams = {\n    targetSort: null,\n    sort: null\n  };\n\n  protected options: IOption<TargetSort>[] = OPTIONS;\n  protected activeOptionIndex: number | null;\n\n  constructor(private activatedRoute: ActivatedRoute, private paramsService: ParamsService) {}\n\n  ngOnInit(): void {\n    this.subscribeChangeQueryParams();\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next(null);\n    this.destroySubject.complete();\n  }\n\n  private subscribeChangeQueryParams(): void {\n    this.activatedRoute.queryParams.pipe(takeUntil(this.destroySubject)).subscribe(() => {\n      this.saveQueryParams();\n      this.setActiveOption();\n    });\n  }\n\n  private saveQueryParams(): void {\n    this.sortingParams.sort = this.activatedRoute.snapshot.queryParams['sort'];\n    this.sortingParams.targetSort = this.activatedRoute.snapshot.queryParams['target-sort'];\n  }\n\n  private setActiveOption(): void {\n    if (!this.sortingParams.sort && !this.sortingParams.targetSort) {\n      this.activeOptionIndex = null;\n      return;\n    }\n    const activeOptionIndex = this.options.findIndex(\n      (option) =>\n        option.sort === this.sortingParams.sort &&\n        option.targetSort === this.sortingParams.targetSort\n    );\n    this.activeOptionIndex = activeOptionIndex === -1 ? null : activeOptionIndex;\n  }\n\n  protected handlerSetSorting(option: IOption<TargetSort> | null): void {\n    this.sortingComponent.closeSorting();\n    if (option) {\n      this.sortingParams.sort = option.sort;\n      this.sortingParams.targetSort = option.targetSort;\n      this.setQueryParams(this.sortingParams.sort, this.sortingParams.targetSort);\n      return;\n    }\n    this.setQueryParams(null);\n  }\n\n  private setQueryParams(unactive: null): void;\n  private setQueryParams(sort: Sort, targetSort: TargetSort): void;\n  private setQueryParams(sort: null | Sort, targetSort?: TargetSort): void {\n    if (sort === null) {\n      this.sortingParams.sort = null;\n      this.sortingParams.targetSort = null;\n      this.paramsService.resetParams({ sort: null, 'target-sort': null });\n      return;\n    }\n    this.paramsService.setParams(\n      { sort, 'target-sort': targetSort },\n      { sort: null, 'target-sort': null }\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "paramsService",
                        "type": "ParamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-sorting\n  #sorting\n  [options]=\"options\"\n  [activeOptionIndex]=\"activeOptionIndex\"\n  (emitSetSorting)=\"handlerSetSorting($event)\"\n  data-test=\"sorting\"\n></app-sorting>\n"
        },
        {
            "name": "SpecialComponent",
            "id": "component-SpecialComponent-4f09fbd967d64ea57ab313a2a92bf3777b471a46a196514c48bb618f690cad7c67876cf307d67fd45e39cbe2a61d6071e2dd8f4e99ba94a086c02c286ee70923",
            "file": "src/app/page-components/main/special/special.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-special-section",
            "styleUrls": [
                "./special.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./special.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "pageData.specialOccasion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { pageData } from '~pages/main/data/pageData';\n\n@Component({\n  selector: 'app-special-section',\n  templateUrl: './special.component.html',\n  styleUrls: ['./special.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpecialComponent {\n  public data = pageData.specialOccasion;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\r\n@import 'media';\r\n\r\n.special {\r\n  background-image: url('/assets/images/pages/shared/pink-color-bg.svg');\r\n  background-position: right -450px bottom;\r\n  background-repeat: no-repeat;\r\n\r\n  &__container {\r\n    display: grid;\r\n    grid-gap: 30px;\r\n    grid-template-columns: 0.5fr 325px 1fr 0.5fr 0.1fr 1fr;\r\n    padding-bottom: 160px;\r\n  }\r\n\r\n  &__section-title {\r\n    display: inline-block;\r\n    text-align: end;\r\n    grid-row: 1;\r\n    grid-column: 1/5;\r\n    margin-bottom: 0;\r\n\r\n    &-part-1 {\r\n      display: block;\r\n      text-align: start;\r\n    }\r\n  }\r\n\r\n  &__line {\r\n    position: relative;\r\n    margin-right: 20px;\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 2px;\r\n    vertical-align: middle;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      right: 0;\r\n      width: 69%;\r\n      height: 100%;\r\n      background-color: $color-3;\r\n    }\r\n  }\r\n\r\n  &__part-wrapper-title {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  &__descr {\r\n    margin-bottom: 0;\r\n    grid-row: 2;\r\n    grid-column: 2/3;\r\n  }\r\n\r\n  &__list {\r\n    position: relative;\r\n    grid-row: 3;\r\n    grid-column: 2/3;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n\r\n    &::after {\r\n      position: absolute;\r\n      left: -30px;\r\n      bottom: -50px;\r\n      width: 20px;\r\n      height: 60px;\r\n      content: '';\r\n      background-image: url('/assets/images/pages/main/arrow-curve.svg');\r\n      background-size: contain;\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    padding-left: 18px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    grid-row: 4;\r\n    grid-column: 2/3;\r\n    display: inline-block;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.special-img {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 20px;\r\n\r\n  &--1 {\r\n    grid-row: 2/4;\r\n    grid-column: 3/4;\r\n    background-image: url('/assets/images/pages/main/special-img-1.jpg');\r\n  }\r\n  &--2 {\r\n    grid-row: 2/4;\r\n    grid-column: 4/6;\r\n    background-image: url('/assets/images/pages/main/special-img-2.jpg');\r\n  }\r\n  &--3 {\r\n    grid-row: 2/4;\r\n    grid-column: 6/7;\r\n    background-image: url('/assets/images/pages/main/special-img-3.jpg');\r\n  }\r\n  &--4 {\r\n    grid-row: 1;\r\n    grid-column: 6/7;\r\n    background-image: url('/assets/images/pages/main/special-img-4.jpg');\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-sm) {\r\n  .special {\r\n    &__container {\r\n      grid-template-columns: 0.2fr 2fr 1fr 1fr;\r\n    }\r\n\r\n    &__section-title {\r\n      grid-column: 1/4;\r\n    }\r\n\r\n    &-img {\r\n      &--1 {\r\n        grid-row: 2/3;\r\n        grid-column: 3/5;\r\n      }\r\n      &--2 {\r\n        display: none;\r\n      }\r\n      &--3 {\r\n        grid-column: 3/5;\r\n        grid-row: 3/4;\r\n      }\r\n      &--4 {\r\n        grid-row: 1;\r\n        grid-column: 4/5;\r\n      }\r\n    }\r\n\r\n    &__list {\r\n      &::after {\r\n        bottom: -70px;\r\n        height: 100px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .special {\r\n    background-image: none;\r\n\r\n    &__container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: initial;\r\n      padding-bottom: 85px;\r\n    }\r\n\r\n    &__section-title {\r\n      max-width: 400px;\r\n      width: 100%;\r\n      align-self: center;\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    &-img {\r\n      &--1 {\r\n        display: none;\r\n      }\r\n      &--3 {\r\n        display: none;\r\n      }\r\n      &--4 {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    &__descr {\r\n      margin-bottom: 25px;\r\n    }\r\n\r\n    &__list {\r\n      margin-bottom: 25px;\r\n      padding-right: 60px;\r\n\r\n      &::after {\r\n        display: inline-block;\r\n        right: 30px;\r\n        bottom: -60px;\r\n        left: initial;\r\n        height: 70px;\r\n        transform: rotateY(180deg);\r\n      }\r\n    }\r\n\r\n    &__link {\r\n      margin-left: 60px;\r\n      margin-right: 60px;\r\n      text-align: center;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./special.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"special\">\n  <div class=\"container special__container\">\n    <h2 class=\"section-title special__section-title\">\n      <span class=\"special__section-title-part-1\">\n        {{ data.title | getWord : 0 | uppercase }}\n      </span>\n\n      <div class=\"special__part-wrapper-title\">\n        <span class=\"special__line\"></span>\n\n        <span class=\"special__section-title-part-2\">\n          {{ data.title | getWord : 1 | uppercase }}\n        </span>\n      </div>\n    </h2>\n\n    <div class=\"special-img special-img--1\"></div>\n    <div class=\"special-img special-img--2\"></div>\n    <div class=\"special-img special-img--3\"></div>\n    <div class=\"special-img special-img--4\"></div>\n\n    <p class=\"special__descr text-line-height-1-8\">\n      {{ data.descr | uppercase }}\n    </p>\n\n    <ul class=\"special__list text-line-height-1-8\">\n      <li class=\"special__item\" *ngFor=\"let item of data.list\">\n        {{ item | uppercase }}\n      </li>\n    </ul>\n\n    <a class=\"special__link\" routerLink=\"/\" appUiButton=\"1\">{{ data.link | uppercase }}</a>\n  </div>\n</section>\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-44e6506ec3426809b22c5a22e0eb703579199f4e0a75154a6f1fc00f1e404028bbb2ae14b5a5466cb9c48557c103199e292779469eb17e759183547c7c213549",
            "file": "src/app/components/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isCache",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "link",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "TabLink",
                    "decorators": []
                },
                {
                    "name": "tabTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "TabTitle",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabActive",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isFirstActivation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contentTemplateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "insertEmbeddedView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EmbeddedViewRef,\n  Input,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { TabActive, TabLink, TabTitle } from './types';\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabComponent {\n  @ContentChild(TemplateRef) contentTemplateRef: TemplateRef<unknown>;\n  private _isActive: TabActive = false;\n  private _isFirstActivation = true;\n  @Input() tabTitle: TabTitle;\n  @Input() link: TabLink = '';\n  @Input() isCache: boolean;\n  @Input() set isActive(isActive: boolean) {\n    if (isActive && this.contentTemplateRef && this._isFirstActivation) {\n      this.insertEmbeddedView();\n    }\n    this._isActive = isActive;\n    this.cdr.markForCheck();\n  }\n  get isActive(): TabActive {\n    return this._isActive;\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private vcr: ViewContainerRef) {}\n\n  private insertEmbeddedView(): void {\n    const empbeddedViewRef: EmbeddedViewRef<unknown> = this.vcr.createEmbeddedView(\n      this.contentTemplateRef\n    );\n    this.vcr.insert(empbeddedViewRef);\n    this._isFirstActivation = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isActive": {
                    "name": "isActive",
                    "setSignature": {
                        "name": "isActive",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isActive",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "isActive",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isActive",
                        "type": "",
                        "returnType": "TabActive",
                        "line": 33
                    }
                }
            },
            "templateData": "<div [hidden]=\"!isActive\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-5a5a88679069c6abc0a82bde00476ff7253193ea1261e953b2051f0aafc715d67f87dae95d297cf163d108b703e20b3fd509f057ff44276b8c36b572653bd854",
            "file": "src/app/components/tabs/tabs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabComponent>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  QueryList\n} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    const activeTabs = this.tabs.filter((tab) => tab.isActive);\n\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  public selectTab(tab: { isActive: boolean }): void {\n    this.tabs.toArray().forEach((tab) => (tab.isActive = false));\n    tab.isActive = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'media';\r\n\r\n.tabs-list-btns {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #555555;\r\n  }\r\n}\r\n\r\n.tabs-item-btn {\r\n  flex: 1 1 100%;\r\n\r\n  &__btn {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 30px 40px;\r\n    position: relative;\r\n    color: #555555;\r\n    text-align: center;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 3px;\r\n      border-radius: 3px;\r\n      background-color: #43ffd2;\r\n      opacity: 0;\r\n      transform: scaleX(0);\r\n      transition: transform 0.3s;\r\n    }\r\n\r\n    &[data-active='true'] {\r\n      color: #43ffd2;\r\n\r\n      &::before {\r\n        opacity: 1;\r\n        transform: scaleX(1);\r\n      }\r\n    }\r\n\r\n    &:focus {\r\n      outline: 1px solid #43ffd2;\r\n      outline-offset: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.tabs-wrapper {\r\n  margin: 0 auto 60px;\r\n  max-width: 720px;\r\n}\r\n\r\n@media (max-width: $ui-xs) {\r\n  .tabs-item-btn {\r\n    &__btn {\r\n      padding: 15px 10px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./tabs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<div class=\"tabs-wrapper\">\n  <ul class=\"tabs-list-btns list-reset\">\n    <li class=\"tabs-item-btn\" *ngFor=\"let tab of tabs\">\n      <button\n        class=\"tabs-item-btn__btn text-uppercase text-color--1 btn-reset\"\n        (click)=\"selectTab(tab)\"\n        [attr.data-active]=\"tab.isActive\"\n      >\n        {{ tab.tabTitle }}\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-content></ng-content>\n"
        },
        {
            "name": "TestHostComponent",
            "id": "component-TestHostComponent-12b5ae4d410d1088bec3ac894f361d7b5ddb021a3e54faf6068eb9c785cc352b2cc571c58bb66a1ca5f9e06be17a976883dc8a0fc4c43a972332066509e77c74",
            "file": "src/app/components/accordion/test-host/test-host.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<app-accordion data-test=\"accordion\" [isOpen]=\"isOpen\">   <button slot=\"button\" data-test=\"button-content\">{{ buttonValue }}</button>\n\n   <ng-template #bodyContent>\n     <p data-test=\"content\">{{ contentValue }}</p>\n   </ng-template>\n </app-accordion>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "contentValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  template: ` <app-accordion data-test=\"accordion\" [isOpen]=\"isOpen\">\r\n    <button slot=\"button\" data-test=\"button-content\">{{ buttonValue }}</button>\r\n\r\n    <ng-template #bodyContent>\r\n      <p data-test=\"content\">{{ contentValue }}</p>\r\n    </ng-template>\r\n  </app-accordion>`\r\n})\r\nexport class TestHostComponent {\r\n  public isOpen = true;\r\n  @Input() contentValue: string;\r\n  @Input() buttonValue: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TestHostComponent",
            "id": "component-TestHostComponent-0dfe7b325ab2896133bae69b89d0ff751ae35c3d33b0f2cd38dabadd4c0f495a9747ad084b8899e5a7b265af77f9ca1cfcd791aa745e60c5e69dc044349d7c7b-1",
            "file": "src/app/directives/button-scroll/test-host/test-host.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<button appButtonScroll data-test=\"host\"></button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ButtonScrollModule } from '../button-scroll.module';\r\n\r\n@Component({\r\n  template: '<button appButtonScroll data-test=\"host\"></button>',\r\n  standalone: true,\r\n  imports: [ButtonScrollModule]\r\n})\r\nexport class TestHostComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TestHostComponent-1"
        },
        {
            "name": "TestHostComponent",
            "id": "component-TestHostComponent-1045efbfcffbc22214360649a90ff01ef3086afba97eade5b03f42ea2ca2673e7f1730bcc66e7fcae372822a43e1278cc203435bee3358c5559416c17951af46-2",
            "file": "src/app/directives/change-route/test-host/test-host.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div appChangeRoute data-test=\"host\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ChangeRouteModule } from '../change-route.module';\r\n\r\n@Component({\r\n  template: '<div appChangeRoute data-test=\"host\"></div>',\r\n  standalone: true,\r\n  imports: [ChangeRouteModule]\r\n})\r\nexport class TestHostComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "TestHostComponent-2"
        },
        {
            "name": "TestHostComponent",
            "id": "component-TestHostComponent-80dc8442d42b53615260dc37cf991d8a4885ee8b6483620671a65df3e848634b71a91756e142453e3132b36926257458a4658dd0254768bf73a8c3e5e6db2017-3",
            "file": "src/app/directives/for-entries/test-host/test-host.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<ul>    <li *appForEntries=\"let entry of object\" data-test=\"item\" [attr.data-entry]=\"entry.name\">\n      {{ entry.value }}\n    </li>\n  </ul>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "object",
                    "defaultValue": "{\r\n    title: 'Some title',\r\n    price: 7000\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | number | string>",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ForEntriesModule } from '../for-entries.module';\r\n\r\n@Component({\r\n  template: `<ul>\r\n    <li *appForEntries=\"let entry of object\" data-test=\"item\" [attr.data-entry]=\"entry.name\">\r\n      {{ entry.value }}\r\n    </li>\r\n  </ul>`,\r\n  standalone: true,\r\n  imports: [ForEntriesModule]\r\n})\r\nexport class TestHostComponent {\r\n  object: Record<string, number | string> = {\r\n    title: 'Some title',\r\n    price: 7000\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "TestHostComponent-3"
        },
        {
            "name": "TestHostComponent",
            "id": "component-TestHostComponent-77cb3a28bd970ec8c8d656a8177f1fd4a858812bd9a9ca4b60ee99bad4fab8abf35891abb81ef7842a22ee3c4e62e4e64b018c5454379e8a1c746e137bb5fb71-4",
            "file": "src/app/directives/image-upload-status/test-host/test-host.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<img appImageUploadStatus data-test=\"host\" />",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ImageUploadStatusModule } from '../image-upload-status.module';\r\n\r\n@Component({\r\n  template: '<img appImageUploadStatus data-test=\"host\" />',\r\n  standalone: true,\r\n  imports: [ImageUploadStatusModule]\r\n})\r\nexport class TestHostComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "TestHostComponent-4"
        }
    ],
    "modules": [
        {
            "name": "AboutUsModule",
            "id": "module-AboutUsModule-2b2863aacb1e7fb5f75b360c7316a8ca1a0f11ad28364ab72eecf847d810e4e3ce993d357b4bc3b0e0c6c3a7700b2664bdb0314a335f6d266b374959431197f0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/about-us/about-us.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AboutUsRoutingModule } from './about-us.routing.module';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { AboutUsComponent } from './about-us.component';\n\n@NgModule({\n  declarations: [AboutUsComponent],\n  imports: [CommonModule, AboutUsRoutingModule, BreadcrumbsModule],\n  exports: [AboutUsComponent],\n})\nexport class AboutUsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutUsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AboutUsRoutingModule"
                        },
                        {
                            "name": "BreadcrumbsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AboutUsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AboutUsRoutingModule",
            "id": "module-AboutUsRoutingModule-311b6eb52802bd330541704324763eb8d44e39ec4ecad92985d42648dc2672988d7dc815549efcfb2785977d877a6e2af588abafcbb190282af8cca2431bd75a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/about-us/about-us.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutUsComponent } from './about-us.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AboutUsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AboutUsRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccordionModule",
            "id": "module-AccordionModule-05343c0168e3637c3f0d52426ad5d7e166d4f4a0072da5c4adc460353979296a51cd7cb30a56f392eb15af25a9d843fd3f248056c7856a0905bdbb54a2545714",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/accordion/accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccordionComponent } from './accordion.component';\n\n@NgModule({\n  declarations: [AccordionComponent],\n  imports: [CommonModule],\n  exports: [AccordionComponent],\n})\nexport class AccordionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccordionTestModule",
            "id": "module-AccordionTestModule-8dc6f928c3a4230ee96265ac19a9140dfeb50929f8ba2de121bd14400c3a38c0d8126f00cc1fcfac7504aee4d88a6fd697b4c9e9bf5ce9fee564ea13566eca67",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/accordion/test-host/test-host.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TestHostComponent } from './test-host.component';\r\nimport { AccordionModule } from '../accordion.module';\r\n\r\n@NgModule({\r\n  declarations: [TestHostComponent],\r\n  imports: [AccordionModule],\r\n  exports: [TestHostComponent]\r\n})\r\nexport class AccordionTestModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TestHostComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TestHostComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppContentModule",
            "id": "module-AppContentModule-b2cb166664218f2e5ec9b0c64018c3a5f04678efc5583d70cf66fa16b889a048c5a91d423133ff5ef07efe452060c21dee98ac39c56fd61f005d1fa92fbaa81d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/page-components/app-content.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppContentComponent } from './app-content.component';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { CounterModule } from '../components/counter/counter.module';\nimport { IconModule } from '../components/icon/icon.module';\nimport { ForEntriesModule } from '../directives/for-entries/for-entries.module';\nimport { HeaderModule } from './shared/header/header.module';\nimport { NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { ChangeRouteModule } from '../directives/change-route/change-route.module';\nimport { VisibilityByScrollModule } from '../directives/visibility-by-scroll/visibility-by-scroll.module';\nimport { CartMenuContainerModule } from '../containers/cart-menu-container/cart-menu-container.module';\nimport { NotificationsContainerModule } from '../containers/notifications-container/notifications-container.module';\nimport { UiButtonModule } from '../directives/ui/ui-button/ui-button.module';\nimport { BurgerMenuModule } from '~components/burger-menu/burger-menu.module';\nimport { SidebarModule } from '~components/sidebar/sidebar.module';\n\n@NgModule({\n  declarations: [AppContentComponent, FooterComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    HeaderModule,\n    IconModule,\n    CartMenuContainerModule,\n    ForEntriesModule,\n    SidebarModule,\n    BurgerMenuModule,\n    CounterModule,\n    UiButtonModule,\n    NgxMaskPipe,\n    ChangeRouteModule,\n    VisibilityByScrollModule,\n    NotificationsContainerModule\n  ],\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ],\n  exports: [AppContentComponent]\n})\nexport class AppContentModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppContentComponent"
                        },
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BurgerMenuModule"
                        },
                        {
                            "name": "CartMenuContainerModule"
                        },
                        {
                            "name": "ChangeRouteModule"
                        },
                        {
                            "name": "CounterModule"
                        },
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "NotificationsContainerModule"
                        },
                        {
                            "name": "SidebarModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "VisibilityByScrollModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppContentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-6660aa5524b3b4aab449ad5c834a708f50664b003a63bb72995f9a6e5dc970e1ce0d656d7302959b74a6a8957ed2f27687efc6fcda1c74b360e56d10aee9ea5c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LOCALE_ID } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeRu from '@angular/common/locales/ru';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from 'src/environments/environment';\nimport { AppContentModule } from './page-components/app-content.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProductsEffects } from './store/products/products.effects';\nimport { AppEffects } from './store/app/app.effects';\nimport { CartEffects } from './store/cart/cart.effects';\nimport { FeedbackEffects } from './store/feedback/feedback.effects';\nimport { OrderEffects } from './store/order/order.effects';\nimport { CorporateEffects } from './store/corporate/corporate.effects';\nimport { NotificationsEffects } from './store/notifications/notifications.effects';\nimport { WINDOW_TOKEN } from './tokens/window';\nimport { LOCAL_STORAGE_TOKEN } from './tokens/localStorage';\nimport { rootReducer } from './store/root.reducer';\n\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppContentModule,\n    StoreModule.forRoot(rootReducer),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() }),\n    StoreDevtoolsModule.instrument({\n      name: 'NGRX LOVER FLOWER STORE',\n      maxAge: 25,\n      logOnly: !environment.production,\n      autoPause: true,\n      trace: true\n    }),\n    EffectsModule.forRoot([\n      ProductsEffects,\n      CartEffects,\n      FeedbackEffects,\n      OrderEffects,\n      CorporateEffects,\n      NotificationsEffects,\n      AppEffects\n    ])\n  ],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useValue: 'ru'\n    },\n    {\n      provide: LOCAL_STORAGE_TOKEN,\n      useFactory: () => localStorage\n    },\n    {\n      provide: WINDOW_TOKEN,\n      useFactory: () => window\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppContentModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-af502d45ebfd5385bce8ce1351d2abf48418edfd4ef7152d27146dfc03cfd686e5bc3a096be0210f367eb3edd5aa1a271d5fb603cc5332f87f5cb92b6c9d8836",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ExtraOptions, RouterModule, Routes } from '@angular/router';\r\nimport { productResolver } from './guards/product.guard';\r\nimport { pages } from './CEO';\r\n\r\nconst routerConfig: ExtraOptions = {\r\n  anchorScrolling: 'enabled',\r\n  initialNavigation: 'enabledBlocking'\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    title: `Главная страница ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/main/main-container.module').then((m) => m.MainContainerModule)\"\r\n  },\r\n  {\r\n    path: 'catalog',\r\n    title: `Каталог ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/catalog/catalog-container.module').then((m) => m.CatalogContainerModule)\"\r\n  },\r\n  {\r\n    path: 'product/:id',\r\n    title: `Страница товара ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/product/product-container.module').then((m) => m.ProductContainerModule)\",\r\n    resolve: { product: productResolver }\r\n  },\r\n  {\r\n    path: 'order',\r\n    loadChildren: () =>\r\n      \"import('./pages/order/order-container.module').then((m) => m.OrderContainerModule)\"\r\n  },\r\n  {\r\n    path: 'searching-results',\r\n    title: `Поиск товаров ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/searching-results/searching-results-container.module').then(\\\n        (m) => m.SearchingResultsContainerModule\\\n      )\"\r\n  },\r\n  {\r\n    path: 'faq',\r\n    title: `FAQ ${TITLE}`,\r\n    loadChildren: () => \"import('./pages/faq/faq.module').then((m) => m.FaqModule)\"\r\n  },\r\n  {\r\n    path: 'delivery-payment',\r\n    title: `Доставка и оплата ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/delivery-payment/delivery-payment.module').then(\\\n        (m) => m.DeliveryPaymentModule\\\n      )\"\r\n  },\r\n  {\r\n    path: 'about-us',\r\n    title: `О нас ${TITLE}`,\r\n    loadChildren: () => \"import('./pages/about-us/about-us.module').then((m) => m.AboutUsModule)\"\r\n  },\r\n  {\r\n    path: 'corporate-clients',\r\n    title: `Корпоративным клиентам ${TITLE}`,\r\n    loadChildren: () =>\r\n      \"import('./pages/corporate-clients/corporate-clients-container.module').then(\\\n        (m) => m.CorporateClientsContainerModule\\\n      )\"\r\n  },\r\n  {\r\n    path: 'contacts',\r\n    title: `Каталог ${TITLE}`,\r\n    loadChildren: () => \"import('./pages/contacts/contacts.module').then((m) => m.ContactsModule)\"\r\n  },\r\n  {\r\n    path: '**',\r\n    title: `Страница не найдена ${TITLE}`,\r\n    loadChildren: () => \"import('./pages/not-found/not-found.module').then((m) => m.NotFoundModule)\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forRoot(routes, routerConfig)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppServerModule",
            "id": "module-AppServerModule-42dd0b6bd912176bb0f7df53b9b03d2017d2eb9ef6043ed0f5fbc1f0e762bd912a894d66ec0a03c9456fcf08dada6ec029a81879fae18ccf8ec5f782a42658f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.server.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, inject } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { LOCAL_STORAGE_TOKEN } from './tokens/localStorage';\nimport { WINDOW_TOKEN } from './tokens/window';\nimport { windowServer } from './server/browser-api/window';\n\n@NgModule({\n  imports: [AppModule, ServerModule],\n  providers: [\n    {\n      provide: LOCAL_STORAGE_TOKEN,\n      useFactory: () => {\n        return inject<Window>(WINDOW_TOKEN).localStorage;\n      }\n    },\n    {\n      provide: WINDOW_TOKEN,\n      useFactory: () => {\n        return windowServer;\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppServerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BadgeModule",
            "id": "module-BadgeModule-65ad1622030e703a42318f43dbcb9df514410d9da00d7ee67e88e50356a90a90f454fe1cbbb412c80548ffa5da6497d1601ee4fe2503422de233b171362f232e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/badge/badge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BadgeComponent } from './badge.component';\n\n@NgModule({\n  declarations: [BadgeComponent],\n  imports: [CommonModule],\n  exports: [BadgeComponent]\n})\nexport class BadgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BadgeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BadgeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BreadcrumbsModule",
            "id": "module-BreadcrumbsModule-8f06854775de87f428561fac74460db82a13de2cbbbb9d6d1f1d230446c11adde1542d756a55b8da5d54ac1fcc04dcf3d2de6eeaa87a7a93fa38684cc83b0899",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/breadcrumbs/breadcrumbs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [BreadcrumbsComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbsComponent],\n})\nexport class BreadcrumbsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BurgerMenuModule",
            "id": "module-BurgerMenuModule-2eab75aa9b5cde152a8069371b6718e9fca269f089c1d99942a863566ca469d0a072174487d3e1b051ae3131d8952ca0e936e647ea17eab2da2bf99c1651618b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/burger-menu/burger-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BurgerMenuComponent } from './burger-menu.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SearchFormContainerModule } from 'src/app/containers/search-form-container/search-form-container.module';\r\nimport { IconModule } from '~components/icon/icon.module';\r\nimport { ForEntriesModule } from 'src/app/directives/for-entries/for-entries.module';\r\n\r\n@NgModule({\r\n  declarations: [BurgerMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxMaskPipe,\r\n    RouterModule,\r\n    SearchFormContainerModule,\r\n    IconModule,\r\n    ForEntriesModule\r\n  ],\r\n  providers: [\r\n    provideNgxMask({\r\n      validation: false\r\n    })\r\n  ],\r\n  exports: [BurgerMenuComponent]\r\n})\r\nexport class BurgerMenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BurgerMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "SearchFormContainerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BurgerMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonScrollModule",
            "id": "module-ButtonScrollModule-caae7d6a81b88009776624ca9c4fc877cf328bbec7d62937f36afcd5599fd459dfd370bfa41572303104bf4a25040ea6c82802b3ada46af06063d90ad247141b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/button-scroll/button-scroll.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonScrollDirective } from './button-scroll.directive';\n\n@NgModule({\n  declarations: [ButtonScrollDirective],\n  imports: [CommonModule],\n  exports: [ButtonScrollDirective]\n})\nexport class ButtonScrollModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonScrollDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonScrollDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CartButtonModule",
            "id": "module-CartButtonModule-6786da3218058069a0d12bca0ae7d1705f9c81f9e0cca484851d848da39eeb507f03cc571ebaaac97d7d7cf159e8113ef3b948b356d53f5a168b0cc9234280e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/cart-button/cart-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartButtonComponent } from './cart-button.component';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxNumberModule } from 'src/app/pipes/max-number/max-number.module';\n\n@NgModule({\n  declarations: [CartButtonComponent],\n  imports: [CommonModule, IconModule, MaxNumberModule],\n  exports: [CartButtonComponent],\n})\nexport class CartButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CartButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "MaxNumberModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CartButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CartMenuContainerModule",
            "id": "module-CartMenuContainerModule-80eefa8687dff90830604e24369d84574b62453d4a03f99d0bf8b3561a39c82b505b4f0c7a4cb95040ccac751a12e329cd61a1718bc5e1f92a0671d3788db234",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/cart-menu-container/cart-menu-container.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CartMenuContainerComponent } from './cart-menu-container.component';\r\nimport { CartMenuModule } from '~components/cart-menu/cart-menu.module';\r\n\r\n@NgModule({\r\n  declarations: [CartMenuContainerComponent],\r\n  imports: [CommonModule, CartMenuModule],\r\n  exports: [CartMenuContainerComponent]\r\n})\r\nexport class CartMenuContainerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CartMenuContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CartMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CartMenuContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CartMenuModule",
            "id": "module-CartMenuModule-dc99ea430719a7af70196de5409e802f407a779e56bcce12151a7c0dd6c65d06a840d74a9fa3b1fa4e7397d5d2efb6d57c8c3f2afc8c5626063e568e852ab69f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/cart-menu/cart-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CartMenuComponent } from './cart-menu.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductItemModule } from '../product-item/product-item.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoaderModule } from '~components/loader/loader.module';\r\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\r\n\r\n@NgModule({\r\n  declarations: [CartMenuComponent],\r\n  imports: [CommonModule, ProductItemModule, RouterModule, UiButtonModule, LoaderModule],\r\n  exports: [CartMenuComponent]\r\n})\r\nexport class CartMenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CartMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "ProductItemModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CartMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CatalogContainerModule",
            "id": "module-CatalogContainerModule-35e59e351482cdfed021bc8b62b5258010cdaa37321dca426261b1f970445fdf0d8b67fb4d2c44596fe7fd384c292bd151dc9dfa60efcbe6b67090db16cdca9e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/catalog/catalog-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CatalogContainerComponent } from './catalog-container.component';\nimport { CatalogContainerRoutingModule } from './catalog-container.routing.module';\nimport { CatalogModule } from './component/catalog.module';\n\n@NgModule({\n  declarations: [CatalogContainerComponent],\n  imports: [CommonModule, CatalogContainerRoutingModule, CatalogModule],\n  exports: [CatalogContainerComponent]\n})\nexport class CatalogContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CatalogContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CatalogContainerRoutingModule"
                        },
                        {
                            "name": "CatalogModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CatalogContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CatalogContainerRoutingModule",
            "id": "module-CatalogContainerRoutingModule-d95bf11484e4e2cc465420bbde960569e9b553940f6f762e64dc4f59e0d26bc0aa8b08b363dec0f105bd893957d659b369079f709e62994297b669a182f90d76",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/catalog/catalog-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CatalogContainerComponent } from './catalog-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CatalogContainerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CatalogContainerRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CatalogModule",
            "id": "module-CatalogModule-25386424df6352855e30ef0f830c28cac7bec1f10def6920f1b3151c7c831759e26ef1a4735f9784b6f618c1a54dbbe980413c34150879a5dd8fa2abd347ad13",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/catalog/component/catalog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ProductCardModule } from 'src/app/components/product-card/product-card.module';\nimport { CatalogComponent } from './catalog.component';\nimport { CheckboxModule } from 'src/app/components/checkbox/checkbox.module';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { ButtonScrollModule } from 'src/app/directives/button-scroll/button-scroll.module';\nimport { IconModule } from 'src/app/components/icon/icon.module';\nimport { DropdownModule } from 'src/app/components/dropdown/dropdown.module';\nimport { ProductListCardModule } from 'src/app/components/product-list-card/product-list-card.module';\nimport { ForEntriesModule } from 'src/app/directives/for-entries/for-entries.module';\nimport { SortingContainerModule } from 'src/app/containers/sorting-container/sorting-container.module';\nimport { AccordionModule } from 'src/app/components/accordion/accordion.module';\nimport { CategoryFilterContainerModule } from 'src/app/containers/category-filter-container/category-filter-container.module';\nimport { FiltersFormContainerModule } from 'src/app/containers/filters-form-container/filters-form-container.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [CatalogComponent],\n  imports: [\n    CommonModule,\n    ProductListCardModule,\n    ProductCardModule,\n    UiButtonModule,\n    CheckboxModule,\n    FiltersFormContainerModule,\n    BreadcrumbsModule,\n    ButtonScrollModule,\n    IconModule,\n    ForEntriesModule,\n    DropdownModule,\n    RouterModule,\n    AccordionModule,\n    CategoryFilterContainerModule,\n    SortingContainerModule\n  ],\n  exports: [CatalogComponent]\n})\nexport class CatalogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CatalogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "ButtonScrollModule"
                        },
                        {
                            "name": "CategoryFilterContainerModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "DropdownModule"
                        },
                        {
                            "name": "FiltersFormContainerModule"
                        },
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "ProductListCardModule"
                        },
                        {
                            "name": "SortingContainerModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CategoryFilterContainerModule",
            "id": "module-CategoryFilterContainerModule-e1c3881189b9e92f2686b6bbc76204500191a07eebecfe713f3f601e8bf0c1e192b88fd4aefbe33ef2a5aeaaa24ad92cfe62b83c19a6e8d6934da56547c0288e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/category-filter-container/category-filter-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionModule } from '~components/accordion/accordion.module';\r\nimport { CategoryFilterModule } from '~components/category-filter/category-filter.module';\r\nimport { CategoryFilterContainerComponent } from './category-filter-container.component';\r\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\r\n\r\n@NgModule({\r\n  declarations: [CategoryFilterContainerComponent],\r\n  imports: [CommonModule, AccordionModule, UiButtonModule, CategoryFilterModule],\r\n  exports: [CategoryFilterContainerComponent]\r\n})\r\nexport class CategoryFilterContainerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CategoryFilterContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "CategoryFilterModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CategoryFilterContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CategoryFilterModule",
            "id": "module-CategoryFilterModule-26d829bf20626f2d0c724ca420e39f01b93f9d1c4fe27ba378af275ff5aad30e748db349f6dc4b3e3718d552da9067e51c9a5907ae4f0060b0e5cf4b739db89f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/category-filter/category-filter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryFilterComponent } from './category-filter.component';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [CategoryFilterComponent],\n  imports: [CommonModule, UiButtonModule],\n  exports: [CategoryFilterComponent]\n})\nexport class CategoryFilterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CategoryFilterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CategoryFilterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CategoryNameModule",
            "id": "module-CategoryNameModule-264282ed802a61888ce8d7d8e5741577234361311aa4765f45009f24d3ba6927c42e3fe6c63d93de513da1bad9386b8c3b2ec2103220317787a8a65bf606f74d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/category-name/category-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryNamePipe } from './category-name.pipe';\n\n@NgModule({\n  declarations: [CategoryNamePipe],\n  imports: [CommonModule],\n  exports: [CategoryNamePipe]\n})\nexport class CategoryNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CategoryNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CategoryNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChangeRouteModule",
            "id": "module-ChangeRouteModule-fb9439a491244df1077770b3db970587bc5785c13fd11ffef46dc8f060a24ceb6b5d380c0a38dfa9f08232338673bb6c1a19c4c38334baab0202f91272ca0583",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/change-route/change-route.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChangeRouteDirective } from './change-route.directive';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ChangeRouteDirective],\n  imports: [CommonModule, RouterModule],\n  exports: [ChangeRouteDirective]\n})\nexport class ChangeRouteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChangeRouteDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChangeRouteDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "id": "module-CheckboxModule-f04893b069bed5684ed67b9dde879b449739c2b065cbe06233be6eaf4f6af247db74c2c789318892cf25ccba24e2444acca95ab0289eabe16ba136754ff7dcd1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/checkbox/checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxComponent } from './checkbox.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [CheckboxComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ContactsModule",
            "id": "module-ContactsModule-e45a02ee21d663ea99c843b224358064afec8bcae545bc7735ea5d74888338c4e81b2c35155ab087f438698ccdcfea696feb05a2c606001a7410b084122f7df9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/contacts/contacts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContactsRoutingModule } from './contacts.routing.module';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { ContactsComponent } from './contacts.component';\nimport { FeedbackFormContainerModule } from 'src/app/containers/feedback-form-container/feedback-form-container.module';\nimport { NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { LoaderModule } from '~components/loader/loader.module';\n\n@NgModule({\n  declarations: [ContactsComponent],\n  imports: [\n    CommonModule,\n    ContactsRoutingModule,\n    BreadcrumbsModule,\n    NgxMaskPipe,\n    FeedbackFormContainerModule,\n    LoaderModule\n  ],\n  exports: [ContactsComponent],\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ]\n})\nexport class ContactsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContactsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "ContactsRoutingModule"
                        },
                        {
                            "name": "FeedbackFormContainerModule"
                        },
                        {
                            "name": "LoaderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContactsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ContactsRoutingModule",
            "id": "module-ContactsRoutingModule-caf993b77af3c7ef21b7a98924662f9271e53e4c67d4028d536fe0490aeb0814323feac405b912928664ab33c4e6c9b98aacef939cd60f91df579ce41a5ab0e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/contacts/contacts.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactsRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CorporateClientsContainerModule",
            "id": "module-CorporateClientsContainerModule-7bbda58ba8851f6cf4dbe932794e499febc5c198337b5f555776a4e011d068d5bf45ce2cf7c79c86c7b7f5808a2915434d773945b2879782e6234f06db24bf3a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/corporate-clients/corporate-clients-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CorporateClientsContainerComponent } from './corporate-clients-container.component';\nimport { CorporateClientsModule } from './component/corporate-clients.module';\nimport { CorporateContainerRoutingModule } from './corporate-clients-container.routing.module';\n\n@NgModule({\n  declarations: [CorporateClientsContainerComponent],\n  imports: [\n    CommonModule,\n    CorporateContainerRoutingModule,\n    CorporateClientsModule,\n  ],\n  exports: [CorporateClientsContainerComponent],\n})\nexport class CorporateClientsContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CorporateClientsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CorporateClientsModule"
                        },
                        {
                            "name": "CorporateContainerRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CorporateClientsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CorporateClientsModule",
            "id": "module-CorporateClientsModule-ded05236b38152d020f4ffb9974ab15a0cdeee4e41c7c571626e0dd665a668aed53580cc6419b21e37616d45016ac6f1550e4a13247777f1803f3030ef844351",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/corporate-clients/component/corporate-clients.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { CorporateClientsComponent } from './corporate-clients.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { RouterModule } from '@angular/router';\nimport { EmptyModule } from 'src/app/directives/validators/empty.module';\nimport { ErrorFieldModule } from '~components/error-field/error-field.module';\nimport { LoaderModule } from '~components/loader/loader.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [CorporateClientsComponent],\n  imports: [\n    CommonModule,\n    BreadcrumbsModule,\n    UiButtonModule,\n    ReactiveFormsModule,\n    NgxMaskDirective,\n    RouterModule,\n    EmptyModule,\n    ErrorFieldModule,\n    LoaderModule\n  ],\n  exports: [CorporateClientsComponent],\n  providers: [provideNgxMask()]\n})\nexport class CorporateClientsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CorporateClientsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "EmptyModule"
                        },
                        {
                            "name": "ErrorFieldModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CorporateClientsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CorporateContainerRoutingModule",
            "id": "module-CorporateContainerRoutingModule-a0b6fbf3cbb48c30bf03e26071b5e2511977c8140c927e43ecd77d16a309968fdd069b55de01eaaef7f54cbb40711f241ad15e2c6523fe32c99f0d5c6c3b9d7a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/corporate-clients/corporate-clients-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CorporateClientsContainerComponent } from './corporate-clients-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CorporateClientsContainerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CorporateContainerRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CounterModule",
            "id": "module-CounterModule-ea58c9047c7a78783fcae57622aa54e2c7ae996a18cccaa2db74330a5003083b1e7c0658f384cd2cd2b2e31400db93bbd8a256e960727f2403ac221b274ebff7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/counter/counter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CounterComponent } from './counter.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [CounterComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [CounterComponent]\n})\nexport class CounterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CounterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CounterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DeliveryPaymentModule",
            "id": "module-DeliveryPaymentModule-1af4f85e90b05d6161a8e5c83a9f4d6e44d199c25f49bead237f74e148e610bea711d3d1ae2daedd6001db1c647c9a26e28d674a666ce0abb5a46cedb8cde41e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/delivery-payment/delivery-payment.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeliveryPaymentRoutingModule } from './delivery-payment.routing.module';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { DeliveryPaymentComponent } from './delivery-payment.component';\nimport { NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [DeliveryPaymentComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    DeliveryPaymentRoutingModule,\n    BreadcrumbsModule,\n    NgxMaskPipe\n  ],\n  exports: [DeliveryPaymentComponent],\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ]\n})\nexport class DeliveryPaymentModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DeliveryPaymentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "DeliveryPaymentRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DeliveryPaymentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DeliveryPaymentRoutingModule",
            "id": "module-DeliveryPaymentRoutingModule-f2b42e642a4339a71b779dcef821ffe043a4444fc44c17b828f278a08e6d73ac3b80f3b15635c36e82c551bee42c804a813824f542c25346a7cbf07c3749df78",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/delivery-payment/delivery-payment.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DeliveryPaymentComponent } from './delivery-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DeliveryPaymentComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DeliveryPaymentRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DropdownModule",
            "id": "module-DropdownModule-c1b7d75b1f23ee13b831f65591bfcc7b7c77f73a164703aaf1c9012e4d9ebc76f9e219935b2f8344534bdf8750db61e867f34577408870258ebaadff72e66ce6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/dropdown/dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { DropdownComponent } from './dropdown.component';\nimport { NgModule } from '@angular/core';\nimport { OutsideFocusModule } from 'src/app/directives/outside-focus/outside-focus.module';\nimport { OutsideClickModule } from 'src/app/directives/outside-click/outside-click.module';\n\n@NgModule({\n  declarations: [DropdownComponent],\n  imports: [CommonModule, OutsideFocusModule, OutsideClickModule],\n  exports: [DropdownComponent],\n})\nexport class DropdownModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OutsideClickModule"
                        },
                        {
                            "name": "OutsideFocusModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EmptyModule",
            "id": "module-EmptyModule-d6911d5ede15032b0535a489330d731c46bf3643897bcef16db763bf61bd21f08ca9a867eeaa0178e3abb5adca00bcfc01cddb651c67afd7721cb2e256fac41f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/validators/empty.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { EmptyDirective } from './empty.directive';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [EmptyDirective],\r\n  imports: [CommonModule],\r\n  exports: [EmptyDirective],\r\n})\r\nexport class EmptyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EmptyDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EmptyDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorBlockModule",
            "id": "module-ErrorBlockModule-875a4619a6c88456ce48e9fd574babc2370cb204fcc1b27a8088eef87d65c71bf1aa6020fdff5af69faa658c94f56cb9bbc3fe09b0ff155e1072041fb76c2c74",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/error-block/error-block.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorBlockComponent } from './error-block.component';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [ErrorBlockComponent],\n  imports: [CommonModule, UiButtonModule],\n  exports: [ErrorBlockComponent]\n})\nexport class ErrorBlockModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorBlockComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ErrorBlockComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorFieldModule",
            "id": "module-ErrorFieldModule-05a3002c36eeabb7914f143ee0dacc0008e7b544f4736d1e191593204e71447badec6770e6896056a739191a20ebb2dc9fca1bae102e84e26c56e25a1f972cab",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/error-field/error-field.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorFieldComponent } from './error-field.component';\n\n@NgModule({\n  declarations: [ErrorFieldComponent],\n  imports: [CommonModule],\n  exports: [ErrorFieldComponent]\n})\nexport class ErrorFieldModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorFieldComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ErrorFieldComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FaqModule",
            "id": "module-FaqModule-b4e6d8c90cb8f74e7be6834765157a394c4b01013b0dd341343eb9d1dd4f28e6e908c692351d5b9ffa59615c102e8abd7203109de37ac459448c954fcd6a00bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/faq/faq.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FAQRoutingModule } from './faq.routing.module';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { FaqComponent } from './faq.component';\nimport { AccordionModule } from 'src/app/components/accordion/accordion.module';\n\n@NgModule({\n  declarations: [FaqComponent],\n  imports: [CommonModule, FAQRoutingModule, BreadcrumbsModule, AccordionModule],\n  exports: [FaqComponent],\n})\nexport class FaqModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FaqComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "FAQRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FaqComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FAQRoutingModule",
            "id": "module-FAQRoutingModule-ae5e7d1fbbea45b5d541c2f663a9c13e61ae62861517ad7936b48f828d3a24b669255b5ed72171455cc76566d494cc1616dd3228faa7834de6974a48eeddfa62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/faq/faq.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FaqComponent } from './faq.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FaqComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FAQRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedbackFormContainerModule",
            "id": "module-FeedbackFormContainerModule-2559d0474969d2f02ed7f6ccba1df9825dfb3427ba265348b7411eddd2b59adc8eccceaadd9bb541b72f4a5075f140789469590c2cff02d6c3bee57d41ac22ca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/feedback-form-container/feedback-form-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeedbackFormContainerComponent } from './feedback-form-container.component';\nimport { FeedbackFormModule } from '../../components/feedback-form/feedback-form.module';\n\n@NgModule({\n  declarations: [FeedbackFormContainerComponent],\n  imports: [CommonModule, FeedbackFormModule],\n  exports: [FeedbackFormContainerComponent]\n})\nexport class FeedbackFormContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FeedbackFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedbackFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FeedbackFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedbackFormModule",
            "id": "module-FeedbackFormModule-8fcf56ad9367edafd383572f6258774887ceef2f16b0cf10be11fc3f4d1b80a5ae8576a487b5e86f8d5da476d5f242226f1c726555c3c63c40876aa6ed64d2de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/feedback-form/feedback-form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeedbackFormComponent } from './feedback-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { LoaderModule } from '../loader/loader.module';\nimport { EmptyModule } from 'src/app/directives/validators/empty.module';\nimport { ErrorFieldModule } from '~components/error-field/error-field.module';\nimport { FieldWrapperModule } from '~components/field-wrapper/field-wrapper.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [FeedbackFormComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiButtonModule,\n    NgxMaskDirective,\n    LoaderModule,\n    EmptyModule,\n    ErrorFieldModule,\n    FieldWrapperModule\n  ],\n  exports: [FeedbackFormComponent],\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ]\n})\nexport class FeedbackFormModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FeedbackFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EmptyModule"
                        },
                        {
                            "name": "ErrorFieldModule"
                        },
                        {
                            "name": "FieldWrapperModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FeedbackFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FieldWrapperModule",
            "id": "module-FieldWrapperModule-105f7a39fd24e5068f6991de11909aa9203321e48c2e87b7a481a2bf467ad88c01df69b14c2912debb4a47e163365ac2c6af6ac0a452e526ea2493a1474caacd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/field-wrapper/field-wrapper.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FieldWrapperComponent } from './field-wrapper.component';\n\n@NgModule({\n  declarations: [FieldWrapperComponent],\n  imports: [CommonModule],\n  exports: [FieldWrapperComponent]\n})\nexport class FieldWrapperModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FieldWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FieldWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FiltersFormContainerModule",
            "id": "module-FiltersFormContainerModule-c0a40c4f8b4f6a32518067e0e10f8dcf55de97904fdc94140d76d40385d10b7c8c8668a9c54db0a0bf5a229c3cd6b7ecced7d2d5091e2cf9bfbcf4d15ce975f2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/filters-form-container/filters-form-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiltersFormContainerComponent } from './filters-form-container.component';\nimport { FiltersFormModule } from '~components/filters-form/filters-form.module';\n\n@NgModule({\n  declarations: [FiltersFormContainerComponent],\n  imports: [CommonModule, FiltersFormModule],\n  exports: [FiltersFormContainerComponent]\n})\nexport class FiltersFormContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FiltersFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FiltersFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FiltersFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FiltersFormModule",
            "id": "module-FiltersFormModule-9a03a1b1c9b9873b70f8e8908653c0cffd7012e9d362bd3869587c89b5c26ebf55fb15076e5b1961a9e979d190d10c2d82f205ca32e1f532cbdb9095ce58eea3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/filters-form/filters-form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiltersFormComponent } from './filters-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RangeModule } from '../range/range.module';\nimport { CheckboxModule } from '../checkbox/checkbox.module';\nimport { ForEntriesModule } from 'src/app/directives/for-entries/for-entries.module';\nimport { ProductFeaturesModule } from 'src/app/pipes/product-features/product-features.module';\nimport { ProductColorNameModule } from 'src/app/pipes/product-color-name/product-color-name.module';\nimport { ProductFormatNameModule } from 'src/app/pipes/product-format-name/product-format-name.module';\nimport { ProductLightNameModule } from 'src/app/pipes/product-light-name/product-light-name.module';\nimport { ProductFlowerNameModule } from 'src/app/pipes/product-flower-name/product-flower-name.module';\nimport { ProductPriceNameModule } from 'src/app/pipes/product-price-name/product-price-name.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [FiltersFormComponent],\n  imports: [\n    CommonModule,\n    UiButtonModule,\n    ReactiveFormsModule,\n    RangeModule,\n    CheckboxModule,\n    RangeModule,\n    ForEntriesModule,\n    ProductFeaturesModule,\n    ProductColorNameModule,\n    ProductFormatNameModule,\n    ProductLightNameModule,\n    ProductFlowerNameModule,\n    ProductPriceNameModule\n  ],\n  exports: [FiltersFormComponent]\n})\nexport class FiltersFormModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FiltersFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "ProductColorNameModule"
                        },
                        {
                            "name": "ProductFeaturesModule"
                        },
                        {
                            "name": "ProductFlowerNameModule"
                        },
                        {
                            "name": "ProductFormatNameModule"
                        },
                        {
                            "name": "ProductLightNameModule"
                        },
                        {
                            "name": "ProductPriceNameModule"
                        },
                        {
                            "name": "RangeModule"
                        },
                        {
                            "name": "RangeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FiltersFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ForEntriesModule",
            "id": "module-ForEntriesModule-f12fc66e04a8476c45426284105149a04e3bc430af31521bc49d18055a577ed64b78de15969c474f15657b871a7633f6b5123e0a22a0558ef10d6d7cf98b598a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/for-entries/for-entries.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ForEntriesDirective } from './for-entries.directive';\r\n\r\n@NgModule({\r\n  declarations: [ForEntriesDirective],\r\n  imports: [CommonModule],\r\n  exports: [ForEntriesDirective]\r\n})\r\nexport class ForEntriesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ForEntriesDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ForEntriesDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GetWordModule",
            "id": "module-GetWordModule-2814311e6ba73b4c5c15a26c1a00375597cd06b3f4493be118fef2484ea100bae00af533f1e5bd3d19420f50022d4cde441a97d5d8d6931208d640cbf65c4da8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/get-word/get-word.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { GetWordPipe } from './get-word.pipe';\r\n\r\n@NgModule({\r\n  declarations: [GetWordPipe],\r\n  imports: [CommonModule],\r\n  exports: [GetWordPipe],\r\n})\r\nexport class GetWordModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GetWordPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GetWordPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-060fd1cc81a94197ace8bd0eae71b372a76cbfb6dde2a1f24d438d542298ecbd10ef5657e3fe18b14db1854a45157d6803ec247755a80d18f39d1e9313417074",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/page-components/shared/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\n\nimport { RouterModule } from '@angular/router';\nimport { IconModule } from 'src/app/components/icon/icon.module';\nimport { CartButtonModule } from 'src/app/components/cart-button/cart-button.module';\nimport { DropdownModule } from 'src/app/components/dropdown/dropdown.module';\nimport { ForEntriesModule } from 'src/app/directives/for-entries/for-entries.module';\nimport { SearchFormContainerModule } from 'src/app/containers/search-form-container/search-form-container.module';\nimport { VisibilityByScrollModule } from 'src/app/directives/visibility-by-scroll/visibility-by-scroll.module';\nimport { NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    IconModule,\n    RouterModule,\n    ForEntriesModule,\n    DropdownModule,\n    CartButtonModule,\n    SearchFormContainerModule,\n    VisibilityByScrollModule,\n    NgxMaskPipe\n  ],\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CartButtonModule"
                        },
                        {
                            "name": "DropdownModule"
                        },
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "SearchFormContainerModule"
                        },
                        {
                            "name": "VisibilityByScrollModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconModule",
            "id": "module-IconModule-2fbd653a83daeb41657898e09eaca749dfeda893617ebce2242eec68abf577664d7c0a0b689952c2d8632261c4942f7fa1d07e6caa916bcd95204701577412dd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/icon/icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  exports: [IconComponent]\n})\nexport class IconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImageUploadStatusModule",
            "id": "module-ImageUploadStatusModule-e3ac7fa9450379446ad22707aef72073e4214191add094fbfb2b4d493a42e3b6067191342e51254265aac8d77e4baab439ebcb913718965192ef1042033969bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/image-upload-status/image-upload-status.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageUploadStatusDirective } from './image-upload-status.directive';\n\n@NgModule({\n  declarations: [ImageUploadStatusDirective],\n  imports: [CommonModule],\n  exports: [ImageUploadStatusDirective]\n})\nexport class ImageUploadStatusModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ImageUploadStatusDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ImageUploadStatusDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IntersectionModule",
            "id": "module-IntersectionModule-ad5ab71f8eceb7cc26e55993652d1e1850869680f0c9ca88c8f4db14ea27a07f42c721abe973c856ab17d02761b34fd7d8ed9fedc198da37499c38c91dc7be9a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/intersection/intersection.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IntersectionDirective } from './intersection.directive';\n\n@NgModule({\n  declarations: [IntersectionDirective],\n  imports: [CommonModule],\n  exports: [IntersectionDirective]\n})\nexport class IntersectionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IntersectionDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IntersectionDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoaderModule",
            "id": "module-LoaderModule-b140fda33a6af72781f92ed8ea8ba8c6b61eadcd845a64752092adeeb35861200677368a15b92f69be61425d865de72d363b1f4d2793962c7947642da3e244e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/loader/loader.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from './loader.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule, IconModule],\n  exports: [LoaderComponent]\n})\nexport class LoaderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainContainerModule",
            "id": "module-MainContainerModule-3cb4f8a1613bdd526807086d5834aa03784ff056f2361ad224a70f20434b9085274711b7397b808f85b04821d25b628073a9c5793737fe9373a344948b7c3d40",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/main/main-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainContainerComponent } from './main-container.component';\nimport { MainContainerRoutingModule } from './main-container.routing.module';\nimport { MainModule } from './component/main.module';\n\n@NgModule({\n  declarations: [MainContainerComponent],\n  imports: [CommonModule, MainContainerRoutingModule, MainModule],\n  exports: [MainContainerComponent],\n})\nexport class MainContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MainContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MainContainerRoutingModule"
                        },
                        {
                            "name": "MainModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MainContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainContainerRoutingModule",
            "id": "module-MainContainerRoutingModule-e6395ee6226c109f962a249b5ddf661abdc7a77f0568935a4d98216530277bd3f5444b596683c720364916eef869d004f43482eb0fedde5cdf2bac4efdce9d7a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/main/main-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainContainerComponent } from './main-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainContainerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MainContainerRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainModule",
            "id": "module-MainModule-f7df85401888e0dda842b53f314d6d76bd90d88269ca62a00012c4f7b1c6b2b7d17d789c1597339543ac8f28f72943a0754f724d1f8f93cdaea917807500c440",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/main/component/main.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main.component';\nimport { HeroComponent } from 'src/app/page-components/main/hero/hero.component';\nimport { HowToOrderComponent } from 'src/app/page-components/main/how-to-order/how-to-order.component';\nimport { PopularComponent } from 'src/app/page-components/main/popular/popular.component';\nimport { QuestionsSectionComponent } from 'src/app/page-components/main/questions-section/questions-section.component';\nimport { SocialSectionComponent } from 'src/app/page-components/main/social-section/social-section.component';\nimport { SpecialComponent } from 'src/app/page-components/main/special/special.component';\nimport { CatalogComponent } from 'src/app/page-components/main/catalog/catalog.component';\nimport { FormsModule } from '@angular/forms';\nimport { IconModule } from 'src/app/components/icon/icon.module';\nimport { ProductCardModule } from 'src/app/components/product-card/product-card.module';\nimport { SliderModule } from 'src/app/components/slider/slider.module';\nimport { GetWordModule } from 'src/app/pipes/get-word/get-word.module';\nimport { RouterModule } from '@angular/router';\nimport { ForEntriesModule } from 'src/app/directives/for-entries/for-entries.module';\nimport { FeedbackFormContainerModule } from 'src/app/containers/feedback-form-container/feedback-form-container.module';\nimport { ProductsOfferContainerModule } from 'src/app/containers/products-offer-container/products-offer-container.module';\nimport { ParallaxModule } from 'src/app/directives/parallax/parallax.module';\nimport { IntersectionModule } from 'src/app/directives/intersection/intersection.module';\nimport { ProductListCardModule } from 'src/app/components/product-list-card/product-list-card.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    HeroComponent,\n    CatalogComponent,\n    PopularComponent,\n    HowToOrderComponent,\n    SpecialComponent,\n    QuestionsSectionComponent,\n    SocialSectionComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    UiButtonModule,\n    ForEntriesModule,\n    GetWordModule,\n    IconModule,\n    ProductCardModule,\n    SliderModule,\n    FormsModule,\n    FeedbackFormContainerModule,\n    ProductsOfferContainerModule,\n    ParallaxModule,\n    IntersectionModule,\n    ProductListCardModule,\n    ProductCardModule\n  ],\n  exports: [MainComponent]\n})\nexport class MainModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CatalogComponent"
                        },
                        {
                            "name": "HeroComponent"
                        },
                        {
                            "name": "HowToOrderComponent"
                        },
                        {
                            "name": "MainComponent"
                        },
                        {
                            "name": "PopularComponent"
                        },
                        {
                            "name": "QuestionsSectionComponent"
                        },
                        {
                            "name": "SocialSectionComponent"
                        },
                        {
                            "name": "SpecialComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedbackFormContainerModule"
                        },
                        {
                            "name": "ForEntriesModule"
                        },
                        {
                            "name": "GetWordModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "IntersectionModule"
                        },
                        {
                            "name": "ParallaxModule"
                        },
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "ProductListCardModule"
                        },
                        {
                            "name": "ProductsOfferContainerModule"
                        },
                        {
                            "name": "SliderModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MainComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaxNumberModule",
            "id": "module-MaxNumberModule-e88cfabb0995cb8e36562cba9531e0395c20e88d592278daa87c2c4deb2ea79d653e09cd0a5f9d697877786caccaa053f7875bf19c36885729ba270b93cb0f87",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/max-number/max-number.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaxNumberPipe } from './max-number.pipe';\n\n@NgModule({\n  declarations: [MaxNumberPipe],\n  imports: [CommonModule],\n  exports: [MaxNumberPipe],\n})\nexport class MaxNumberModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MaxNumberPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MaxNumberPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NotFoundModule",
            "id": "module-NotFoundModule-38d2e4c4d7cd514584bb834f5b3ef1d0f7d0c3f0223b6b7d41b44593e0c0869c254841623267de48e56e8194be80f7fedb363fcdf9a1d1e2d2425819f1746197",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/not-found/not-found.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotFoundRoutingModule } from './not-found.routing.module';\nimport { NotFoundComponent } from './not-found.component';\n\n@NgModule({\n  declarations: [NotFoundComponent],\n  imports: [CommonModule, NotFoundRoutingModule],\n  exports: [NotFoundComponent],\n})\nexport class NotFoundModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NotFoundRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NotFoundRoutingModule",
            "id": "module-NotFoundRoutingModule-f3f54c428be67c9b2a258f0c43cc5c95dc371b6228eeddc4857aaffcb2539dd36dbd26798beb5c52c8a98fc5ec11e2528d5def4e99590aed56ffd37d48059f6b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/not-found/not-found.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotFoundComponent } from './not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotFoundRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NotificationsContainerModule",
            "id": "module-NotificationsContainerModule-80ca0857ad860f29968c2a44716483ea3849b000d7b5384e4080b5b1d636189ad1fb0d28b6bcafd886a7cfeb87e4d5dc2156d5133933860911cca4bd64d942fb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/notifications-container/notifications-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsContainerComponent } from './notifications-container.component';\nimport { NotificationsModule } from '~components/notifications/notifications.module';\n\n@NgModule({\n  declarations: [NotificationsContainerComponent],\n  imports: [CommonModule, NotificationsModule],\n  exports: [NotificationsContainerComponent]\n})\nexport class NotificationsContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotificationsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NotificationsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NotificationsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NotificationsModule",
            "id": "module-NotificationsModule-4fe014f1c88c381d0aa6e0013a780b313cbcc93043f0205af93de8eba6a1e7b1e072ad900fe52585fe36c3e47e37f3819c3ea6cfc4b02f33923034b6a40e17ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/notifications/notifications.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotifyModule } from '~components/notify/notify.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [NotificationsComponent],\n  imports: [CommonModule, NotifyModule, UiButtonModule],\n  exports: [NotificationsComponent]\n})\nexport class NotificationsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotificationsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NotifyModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NotificationsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NotifyModule",
            "id": "module-NotifyModule-c00dc2f35349aa5403a62e95f983cf8870376ad8e5e7878986e1ce376002ccff27c1f9c7ee29ad130487eedae70cb775774d3ffcf511d8afafe95ad269c0a30f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/notify/notify.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotifyComponent } from './notify.component';\n\n@NgModule({\n  declarations: [NotifyComponent],\n  imports: [CommonModule],\n  exports: [NotifyComponent]\n})\nexport class NotifyModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotifyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NotifyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrderContainerModule",
            "id": "module-OrderContainerModule-0a2b91fa5ea95b45841a7bb3c182e7b7c28c71342f7688af48f0b2ef6a59b273ce3e6906ab422c4a15a37c7cdc7190a93b3b96c459af35f967dcdaeb705de92e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/order/order-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrderContainerComponent } from './order-container.component';\nimport { OrderModule } from './component/order.module';\nimport { OrderContainerRoutingModule } from './order-container.routing.module';\n\n@NgModule({\n  declarations: [OrderContainerComponent],\n  imports: [CommonModule, OrderModule, OrderContainerRoutingModule],\n  exports: [OrderContainerComponent]\n})\nexport class OrderContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OrderContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OrderContainerRoutingModule"
                        },
                        {
                            "name": "OrderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OrderContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrderContainerRoutingModule",
            "id": "module-OrderContainerRoutingModule-2be8337137d981adb21db54b901064fe85fcc3d4dee2744ebf9e4bd617d005932071a32d224a125f49268e7635e9b77ca57712cafa7ee069705f555ae4986b69",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/order/order-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrderContainerComponent } from './order-container.component';\r\nimport { orderResolver } from 'src/app/guards/order-success.guard';\r\nimport { pages } from 'src/app/CEO';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        title: pages.order.title,\r\n        component: OrderContainerComponent\r\n      },\r\n      {\r\n        path: 'successful/:id',\r\n        title: pages.orderSuccess.title,\r\n        loadChildren: () =>\r\n          \"import('~pages/order-successful/order-successful.module').then(\\\n            (m) => m.PaymentSuccessfulModule\\\n          )\",\r\n        resolve: [orderResolver]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderContainerRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrderModule",
            "id": "module-OrderModule-e2c7fe39be0d9ce3332e4369de7bfeb117bc9d1b384475ee65262be3c5c574710fcf3f31b88a47854e0c9d82f87c30c1ec0c68c9c9abe52e0741dfd431ca6ae2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/order/component/order.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { OrderComponent } from './order.component';\nimport { ProductItemModule } from 'src/app/components/product-item/product-item.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RadioButtonModule } from 'src/app/components/radio-button/radio-button.module';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { RouterModule } from '@angular/router';\nimport { PromocodeFieldContainerModule } from 'src/app/containers/promocode-field-container/promocode-field-container.module';\nimport { LoaderModule } from 'src/app/components/loader/loader.module';\nimport { ErrorFieldModule } from '~components/error-field/error-field.module';\nimport { EmptyModule } from 'src/app/directives/validators/empty.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [OrderComponent],\n  imports: [\n    CommonModule,\n    BreadcrumbsModule,\n    UiButtonModule,\n    PromocodeFieldContainerModule,\n    ProductItemModule,\n    ReactiveFormsModule,\n    RadioButtonModule,\n    NgxMaskDirective,\n    RouterModule,\n    LoaderModule,\n    ErrorFieldModule,\n    EmptyModule\n  ],\n  exports: [OrderComponent],\n\n  providers: [\n    provideNgxMask({\n      validation: false\n    })\n  ]\n})\nexport class OrderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OrderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "EmptyModule"
                        },
                        {
                            "name": "ErrorFieldModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "ProductItemModule"
                        },
                        {
                            "name": "PromocodeFieldContainerModule"
                        },
                        {
                            "name": "RadioButtonModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OrderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OutsideClickModule",
            "id": "module-OutsideClickModule-8548fcb0c4589fef2a8991d365879669041f1e076ea7a97b4ee535151400ba51b4894aa4afd735717c3c19370054df12e3255babfde22661d9054c4499cde2cd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/outside-click/outside-click.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutsideClickDirective } from './outside-click.directive';\n\n@NgModule({\n  declarations: [OutsideClickDirective],\n  imports: [CommonModule],\n  exports: [OutsideClickDirective],\n})\nexport class OutsideClickModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OutsideClickDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OutsideClickDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OutsideFocusModule",
            "id": "module-OutsideFocusModule-2827eb34a6f1e16cda17f706493f81334d0dcc019045f2774c9ec03815392593ea8a180531647d674b0541f2e9b81b72c3a802607e110d0a7c4922d6024305de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/outside-focus/outside-focus.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutsideFocusDirective } from './outside-focus.directive';\n\n@NgModule({\n  declarations: [OutsideFocusDirective],\n  imports: [CommonModule],\n  exports: [OutsideFocusDirective],\n})\nexport class OutsideFocusModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OutsideFocusDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OutsideFocusDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ParallaxModule",
            "id": "module-ParallaxModule-8a0f019d0ceb75190093b1c3063a8bb96adf557440edc25bb7cde05c133a39574c37597cfbca34e8cb311ce0aa1874be154dda723ecf8afa9cd2010497be2dd9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/parallax/parallax.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParallaxDirective } from './parallax.directive';\n\n@NgModule({\n  declarations: [ParallaxDirective],\n  imports: [CommonModule],\n  exports: [ParallaxDirective]\n})\nexport class ParallaxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ParallaxDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ParallaxDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentSuccessfulModule",
            "id": "module-PaymentSuccessfulModule-19bb1d2065bc455f6b3ce2008f2804045bb6bcfd96883b6b390a0e91f84f9cc7752a0960833cf0eb5568d382eef1ab833dff6225aafa60af47198dda35123e68",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/order-successful/order-successful.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentSuccessfulRoutingModule } from './order-successful.routing.module';\nimport { OrderSuccessfulComponent } from './order-successful.component';\n\n@NgModule({\n  declarations: [OrderSuccessfulComponent],\n  imports: [CommonModule, PaymentSuccessfulRoutingModule],\n  exports: [OrderSuccessfulComponent]\n})\nexport class PaymentSuccessfulModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OrderSuccessfulComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PaymentSuccessfulRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OrderSuccessfulComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentSuccessfulRoutingModule",
            "id": "module-PaymentSuccessfulRoutingModule-7f8126bed958e9d00209ddc72a9a7dde3ba03c7eb6ebcfb1a9f2c4006eac2f31d38c7b830e1f251770b3c4e60ec0998735921571f429e5d97fc51430789ccd5d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/order-successful/order-successful.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrderSuccessfulComponent } from './order-successful.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderSuccessfulComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentSuccessfulRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PriceModule",
            "id": "module-PriceModule-edead8beaa637777906afe6c787aa9f047b92e24ec32acb4a16bdf8932afa67ee7f43b12dc9e82de6150339b31a9aa3383e6cb5a5ecbc282b37cf1c5a1cc8c91",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/price/price.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PriceComponent } from './price.component';\n\n@NgModule({\n  declarations: [PriceComponent],\n  imports: [CommonModule],\n  exports: [PriceComponent]\n})\nexport class PriceModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PriceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PriceComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductBadgeColorModule",
            "id": "module-ProductBadgeColorModule-9c80a4d0a6b8ba9743b1bc32c9bba29afb7ba1583eaf31a2bef3200608d8c4748c8cd6e21dad5eacc97f10d462b739478b9bbe08142e1c866d1e026ad6c40140",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-badge-color/product-badge-color.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductBadgeColorPipe } from './product-badge-color.pipe';\n\n@NgModule({\n  declarations: [ProductBadgeColorPipe],\n  imports: [CommonModule],\n  exports: [ProductBadgeColorPipe]\n})\nexport class ProductBadgeColorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductBadgeColorPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductBadgeColorPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductBadgeTextModule",
            "id": "module-ProductBadgeTextModule-005ffdd3ff5930b06949fd6a8a394974918b96856099e2e516440fba2d38d04fb24454a66b7c5dd18879a743b798276d07ba2e73d6f44cf272f4071287c14b70",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-badge-text/product-badge-text.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductBadgeTextPipe } from './product-badge-text.pipe';\n\n@NgModule({\n  declarations: [ProductBadgeTextPipe],\n  imports: [CommonModule],\n  exports: [ProductBadgeTextPipe]\n})\nexport class ProductBadgeTextModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductBadgeTextPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductBadgeTextPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductCardModule",
            "id": "module-ProductCardModule-f9d4de522f3315bb5fb1cea9fde1112ba401c87fae8613580a876cfaad4071ad710802c8d1f9ea403a0ae56e79bf344fcc6dde1543d01c6e6b05c56a0f199d32",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/product-card/product-card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductCardComponent } from './product-card.component';\nimport { PriceModule } from '../price/price.module';\nimport { RouterModule } from '@angular/router';\nimport { BadgeModule } from '~components/badge/badge.module';\nimport { ProductBadgeColorModule } from 'src/app/pipes/product-badge-color/product-badge-color.module';\nimport { ProductBadgeTextModule } from 'src/app/pipes/product-badge-text/product-badge-text.module';\nimport { ImageUploadStatusModule } from 'src/app/directives/image-upload-status/image-upload-status.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [ProductCardComponent],\n  imports: [\n    CommonModule,\n    UiButtonModule,\n    PriceModule,\n    RouterModule,\n    BadgeModule,\n    ProductBadgeColorModule,\n    ProductBadgeTextModule,\n    ImageUploadStatusModule,\n    NgOptimizedImage\n  ],\n  exports: [ProductCardComponent]\n})\nexport class ProductCardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BadgeModule"
                        },
                        {
                            "name": "ImageUploadStatusModule"
                        },
                        {
                            "name": "NgOptimizedImage"
                        },
                        {
                            "name": "PriceModule"
                        },
                        {
                            "name": "ProductBadgeColorModule"
                        },
                        {
                            "name": "ProductBadgeTextModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductColorNameModule",
            "id": "module-ProductColorNameModule-2e9e7f1f10697e45112b6201e879f859d99ec9bc305064007906ac02b4a8eae8209378f7184243171c75b2138b547aaca010dcc163df1c1e4201d77a443f5c49",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-color-name/product-color-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductColorNamePipe } from './product-color-name.pipe';\n\n@NgModule({\n  declarations: [ProductColorNamePipe],\n  imports: [CommonModule],\n  exports: [ProductColorNamePipe]\n})\nexport class ProductColorNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductColorNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductColorNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductContainerModule",
            "id": "module-ProductContainerModule-0d49f2d2af8880c4de94451194c2ab8212ceabe4e71a82197f23bcb3c303449df09a1c9110db77aee75d0617f40432efc63621c6431f224839684d80445e35b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/product/product-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductContainerComponent } from './product-container.component';\nimport { ProductModule } from './component/product.module';\nimport { ProductContainerRoutingModule } from './product-container.routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { productStore } from './store/product';\n\n@NgModule({\n  declarations: [ProductContainerComponent],\n  imports: [\n    CommonModule,\n    ProductContainerRoutingModule,\n    ProductModule,\n    StoreModule.forFeature(productStore.FEATURE_KEY, productStore.productReducer),\n    EffectsModule.forFeature([productStore.ProductEffects])\n  ],\n  exports: [ProductContainerComponent]\n})\nexport class ProductContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductContainerRoutingModule"
                        },
                        {
                            "name": "ProductModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductContainerRoutingModule",
            "id": "module-ProductContainerRoutingModule-b6604ae45d2750f42f679f7ce171c44a5c93468d4601933eab435b368cb98b5e7c2698bb34980e700a54977927c71d4da8d85a3bd0d3a47853fce118f92376b1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/product/product-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductContainerComponent } from './product-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductContainerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductContainerRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductFeaturesModule",
            "id": "module-ProductFeaturesModule-e74fe9f7a3c229dfd58e2cad64bcb9fd4c4985c686899e8220e6f67fb25af2a424434d178d3c6a6da2d72ea098ccbe2079203df04bd92c66514f8b6affcf9285",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-features/product-features.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductFeaturesPipe } from './product-features.pipe';\n\n@NgModule({\n  declarations: [ProductFeaturesPipe],\n  imports: [CommonModule],\n  exports: [ProductFeaturesPipe]\n})\nexport class ProductFeaturesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductFeaturesPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductFeaturesPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductFlowerNameModule",
            "id": "module-ProductFlowerNameModule-5f57a5e1aadd06bf26b72e6d33083e816c2b0174054b52cff8ec782333039fb8aa623ce12410f5915b277534b7ae14ac7e650789b6dccd1442d6ab4fd41d152e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-flower-name/product-flower-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductFlowerNamePipe } from './product-flower-name.pipe';\n\n@NgModule({\n  declarations: [ProductFlowerNamePipe],\n  imports: [CommonModule],\n  exports: [ProductFlowerNamePipe]\n})\nexport class ProductFlowerNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductFlowerNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductFlowerNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductFormatNameModule",
            "id": "module-ProductFormatNameModule-39b56095c821483aa3c308f4810462991808e2c9651ef294ef274d63b4c3599e39902000f2bc143e3241994adb43cbbff32ceb78c80ab5220c391b4099b96b2b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-format-name/product-format-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductFormatNamePipe } from './product-format-name.pipe';\n\n@NgModule({\n  declarations: [ProductFormatNamePipe],\n  imports: [CommonModule],\n  exports: [ProductFormatNamePipe]\n})\nexport class ProductFormatNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductFormatNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductFormatNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductItemModule",
            "id": "module-ProductItemModule-b0a8e9d51ce9a933752a1946af906840b5a1e3c0b94d4644a6294a9a2b6ea4dd6d53ecf49cc39cc66ed680965fe4f47a56f7c06ddbb9a61a42d4df6daf309e35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/product-item/product-item.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductItemComponent } from './product-item.component';\nimport { CounterModule } from '../counter/counter.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ProductItemComponent],\n  imports: [CommonModule, CounterModule, RouterModule, NgOptimizedImage],\n  exports: [ProductItemComponent]\n})\nexport class ProductItemModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CounterModule"
                        },
                        {
                            "name": "NgOptimizedImage"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductLightNameModule",
            "id": "module-ProductLightNameModule-9dbb20f8b23380a1e63772331d8ae47b77fb02830cd158744e4a485aa05b36b68b59b73131e1e54d6151757955808a7c8f9e3c77256587da62e410ffd49ed0d7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-light-name/product-light-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductLightNamePipe } from './product-light-name.pipe';\n\n@NgModule({\n  declarations: [ProductLightNamePipe],\n  imports: [CommonModule],\n  exports: [ProductLightNamePipe]\n})\nexport class ProductLightNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductLightNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductLightNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductListCardModule",
            "id": "module-ProductListCardModule-16a2bdf04e47016faa6464419e105e27874566d962a9d6a37770702f5d5b582d971d29c1e6e2479d1aceed5b44449f42bdfd03f272397d85e429d80fe65d9426",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/product-list-card/product-list-card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductListCardComponent } from './product-list-card.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { ErrorBlockModule } from '../error-block/error-block.module';\n\n@NgModule({\n  declarations: [ProductListCardComponent],\n  imports: [CommonModule, LoaderModule, ErrorBlockModule],\n  exports: [ProductListCardComponent]\n})\nexport class ProductListCardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductListCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorBlockModule"
                        },
                        {
                            "name": "LoaderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductListCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductModule",
            "id": "module-ProductModule-d3df4ffa29b9d557c8b5369d1bd881abcc75bb519cb4ba1cdd9f4670ad5c6d593725c6295c8c5d8bd329627a2effb2655d8051bbfda76ac5c49c846e539c3202",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/product/component/product.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { BreadcrumbsModule } from 'src/app/components/breadcrumbs/breadcrumbs.module';\nimport { ProductComponent } from './product.component';\nimport { PriceModule } from 'src/app/components/price/price.module';\nimport { CounterModule } from 'src/app/components/counter/counter.module';\nimport { DeliveryComponent } from 'src/app/page-components/product/delivery/delivery.component';\nimport { TabsModule } from 'src/app/components/tabs/tabs.module';\nimport { TabModule } from 'src/app/components/tab/tab.module';\nimport { SliderModule } from 'src/app/components/slider/slider.module';\nimport { IconModule } from 'src/app/components/icon/icon.module';\nimport { ReviewsModule } from 'src/app/page-components/product/reviews/reviews.module';\nimport { ErrorBlockModule } from 'src/app/components/error-block/error-block.module';\nimport { RouterModule } from '@angular/router';\nimport { CategoryNameModule } from 'src/app/pipes/category-name/category-name.module';\nimport { ProductsOfferContainerModule } from 'src/app/containers/products-offer-container/products-offer-container.module';\nimport { LoaderModule } from '~components/loader/loader.module';\nimport { SlideModule } from '~components/slide/slide.module';\nimport { ImageUploadStatusModule } from 'src/app/directives/image-upload-status/image-upload-status.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [ProductComponent, DeliveryComponent],\n  imports: [\n    CommonModule,\n    BreadcrumbsModule,\n    ProductsOfferContainerModule,\n    PriceModule,\n    CounterModule,\n    UiButtonModule,\n    TabsModule,\n    TabModule,\n    SliderModule,\n    IconModule,\n    ReviewsModule,\n    LoaderModule,\n    ErrorBlockModule,\n    RouterModule,\n    CategoryNameModule,\n    SlideModule,\n    ImageUploadStatusModule,\n    NgOptimizedImage\n  ],\n  exports: [ProductComponent]\n})\nexport class ProductModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DeliveryComponent"
                        },
                        {
                            "name": "ProductComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BreadcrumbsModule"
                        },
                        {
                            "name": "CategoryNameModule"
                        },
                        {
                            "name": "CounterModule"
                        },
                        {
                            "name": "ErrorBlockModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "ImageUploadStatusModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "NgOptimizedImage"
                        },
                        {
                            "name": "PriceModule"
                        },
                        {
                            "name": "ProductsOfferContainerModule"
                        },
                        {
                            "name": "ReviewsModule"
                        },
                        {
                            "name": "SlideModule"
                        },
                        {
                            "name": "SliderModule"
                        },
                        {
                            "name": "TabModule"
                        },
                        {
                            "name": "TabsModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductPriceNameModule",
            "id": "module-ProductPriceNameModule-cdae9735bc9b8a9d8fb9076bcd365a5a51d68def52d66b2612c1454fa04b8e1b65e82826e1deeba88028619b5af052956370f218c226b123b154368f78f22c35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/product-price-name/product-price-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductPriceNamePipe } from './product-price-name.pipe';\n\n@NgModule({\n  declarations: [ProductPriceNamePipe],\n  imports: [CommonModule],\n  exports: [ProductPriceNamePipe]\n})\nexport class ProductPriceNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductPriceNamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductPriceNamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsOfferContainerModule",
            "id": "module-ProductsOfferContainerModule-179add036738c8c24e0ea43fcfe3df589def1b479a99db71385671561db61a237fc0f18a5db92f03f17fb596d16f6b0f913cca35df6633d1817ffeef7c6fa705",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/products-offer-container/products-offer-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsOfferContainerComponent } from './products-offer-container.component';\nimport { ProductsSliderModule } from 'src/app/components/products-slider/products-slider.module';\nimport { ProductListCardModule } from 'src/app/components/product-list-card/product-list-card.module';\nimport { ProductCardModule } from 'src/app/components/product-card/product-card.module';\n\n@NgModule({\n  declarations: [ProductsOfferContainerComponent],\n  imports: [CommonModule, ProductsSliderModule, ProductListCardModule, ProductCardModule],\n  exports: [ProductsOfferContainerComponent]\n})\nexport class ProductsOfferContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductsOfferContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "ProductListCardModule"
                        },
                        {
                            "name": "ProductsSliderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductsOfferContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsSliderModule",
            "id": "module-ProductsSliderModule-dd24956853b16e24ad97fe634b192c40b8a8514f08b80450581b55b56c56051adf253170650c9730f1b3da0b4562afbc05c47a775e85766f6bc53d52f233574e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/products-slider/products-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsSliderComponent } from './products-slider.component';\nimport { ProductCardModule } from '../product-card/product-card.module';\nimport { SliderModule } from '../slider/slider.module';\nimport { IconModule } from '../icon/icon.module';\nimport { RouterModule } from '@angular/router';\nimport { LoaderModule } from '../loader/loader.module';\nimport { SlideModule } from '~components/slide/slide.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [ProductsSliderComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ProductCardModule,\n    SliderModule,\n    IconModule,\n    UiButtonModule,\n    LoaderModule,\n    SlideModule\n  ],\n  exports: [ProductsSliderComponent]\n})\nexport class ProductsSliderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductsSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "SlideModule"
                        },
                        {
                            "name": "SliderModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductsSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PromocodeFieldContainerModule",
            "id": "module-PromocodeFieldContainerModule-cee79d9079e555a2d8ccb28812ec613d48ebdf4f2dd32494877f095b33d01a0dddb43e72370a190926855beddbadd0869d90cdb2618f739f3923faf3c853896b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/promocode-field-container/promocode-field-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PromocodeFieldModule } from '../../components/promocode-field/promocode-field.module';\nimport { PromocodeFieldContainerComponent } from './promocode-field-container.component';\n\n@NgModule({\n  declarations: [PromocodeFieldContainerComponent],\n  imports: [CommonModule, PromocodeFieldModule],\n  exports: [PromocodeFieldContainerComponent]\n})\nexport class PromocodeFieldContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PromocodeFieldContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PromocodeFieldModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PromocodeFieldContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PromocodeFieldModule",
            "id": "module-PromocodeFieldModule-c736a19defab799a60785390b1bf6e9f79f888aca4ffbf951e55c9a0d6da3c241ca471c8e8e5d6f0e1c5bf6452a75bc6d3bcf03f91e6eeeeca868464ced55342",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/promocode-field/promocode-field.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PromocodeFieldComponent } from './promocode-field.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmptyModule } from 'src/app/directives/validators/empty.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [PromocodeFieldComponent],\n  imports: [CommonModule, UiButtonModule, FormsModule, ReactiveFormsModule, EmptyModule],\n  exports: [PromocodeFieldComponent]\n})\nexport class PromocodeFieldModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PromocodeFieldComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EmptyModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PromocodeFieldComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioButtonModule",
            "id": "module-RadioButtonModule-ce6fa798cfbec25d2c80b0f0a1f7e2d890025cf98035a2aa5627439f41a99ce91a487f020e8f9cf431f6814ba9e2c06a80b86ea788bb8793dadd385b2a58076e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/radio-button/radio-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RadioButtonComponent } from './radio-button.component';\n\n@NgModule({\n  declarations: [RadioButtonComponent],\n  imports: [CommonModule],\n  exports: [RadioButtonComponent],\n})\nexport class RadioButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RangeModule",
            "id": "module-RangeModule-c8f0489b8d203bc1e1fe5e05e11ab32b16743417da86b0c7a92a173738f3c7ed1192d5dfd0298ad6ae15fc8557df05595d7990a0e2b283705044272db1d0b5bb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/range/range.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeComponent } from './range.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RangeComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [RangeComponent],\n})\nexport class RangeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RangeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RangeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RatingModule",
            "id": "module-RatingModule-2f81a554ddce7f42ab578bd1ffca73a012ae2ffae69b0c353c74036642328d7807c1d835eb6850f93dbd1544d174f7e0862c4ca982b884edd255dbc4e813afbe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/rating/rating.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RatingComponent } from './rating.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [RatingComponent],\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  exports: [RatingComponent]\r\n})\r\nexport class RatingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RatingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewFormContainerModule",
            "id": "module-ReviewFormContainerModule-9ef120d52871bf4d15f5051decbabfe875e360e7ef3ad8b9e027003dca04169890cbed2eda564450ed2563ffbac392c113269c6c6fd446169212f9b1c73ca021",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/review-form-container/review-form-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewFormContainerComponent } from './review-form-container.component';\nimport { ReviewFormModule } from 'src/app/components/review-form/review-form.module';\n\n@NgModule({\n  declarations: [ReviewFormContainerComponent],\n  imports: [CommonModule, ReviewFormModule],\n  exports: [ReviewFormContainerComponent]\n})\nexport class ReviewFormContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ReviewFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewFormModule",
            "id": "module-ReviewFormModule-6cb7065dd7009e21b5124e6aa1f284b52a133a052e3fd30e2981fcf26988300e794f2a75eb4d9a74421583a93d9dbc34020018aa401158d947e69cd4bcdbb744",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/review-form/review-form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewFormComponent } from './review-form.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { RatingModule } from '../rating/rating.module';\nimport { ErrorBlockModule } from '../error-block/error-block.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorFieldModule } from '~components/error-field/error-field.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [ReviewFormComponent],\n  imports: [\n    CommonModule,\n    LoaderModule,\n    RatingModule,\n    ErrorBlockModule,\n    UiButtonModule,\n    ReactiveFormsModule,\n    ErrorFieldModule\n  ],\n  exports: [ReviewFormComponent]\n})\nexport class ReviewFormModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorBlockModule"
                        },
                        {
                            "name": "ErrorFieldModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "RatingModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewListContainerModule",
            "id": "module-ReviewListContainerModule-86784d1e9e0a01f0503944f954e9ceb57d819ff5451e392b5b38d525ed4905206b615d17a8433a0322923d22e897111c06a72d83a96d166ff351ec1ae440d1c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/review-list-container/review-list-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewListContainerComponent } from './review-list-container.component';\nimport { ReviewListModule } from 'src/app/components/review-list/review-list.module';\n\n@NgModule({\n  declarations: [ReviewListContainerComponent],\n  imports: [CommonModule, ReviewListModule],\n  exports: [ReviewListContainerComponent]\n})\nexport class ReviewListContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewListContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ReviewListModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewListContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewListModule",
            "id": "module-ReviewListModule-023d89ad3eb0da93127de775533d787fe15d60f64eed6e646f043cbfbdb80309ad2d71db84e79abfefc6522427714c9e5b8e6f92923f65f276549a5fa747dc3f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/review-list/review-list.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewListComponent } from './review-list.component';\nimport { ErrorBlockModule } from '../error-block/error-block.module';\nimport { ReviewModule } from '../review/review.module';\nimport { LoaderModule } from '../loader/loader.module';\n\n@NgModule({\n  declarations: [ReviewListComponent],\n  imports: [CommonModule, ErrorBlockModule, ReviewModule, LoaderModule],\n  exports: [ReviewListComponent]\n})\nexport class ReviewListModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorBlockModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "ReviewModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewModule",
            "id": "module-ReviewModule-0e08d999f0b48b4414a6e8bd93f2d20a7030f458f43530607ea63283b742fb9bd2ea080f5adb57b775126daae177d66fbdf70f9f2430460172f798e57bf3392c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/review/review.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewComponent } from './review.component';\nimport { RatingModule } from '../rating/rating.module';\n\n@NgModule({\n  declarations: [ReviewComponent],\n  imports: [CommonModule, RatingModule],\n  exports: [ReviewComponent],\n})\nexport class ReviewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RatingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReviewsModule",
            "id": "module-ReviewsModule-eb753f04fe4ab487d8722f3569a4e91a562c49a40e1828f9d4637ce8ee99ac6c6ceac7b4bea0e5f68e9294c70f1f2f61cb4827555d25f2c59120f4b0691aa276",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/page-components/product/reviews/reviews.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReviewsComponent } from './reviews.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RatingModule } from 'src/app/components/rating/rating.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { commentsStore } from 'src/app/pages/product/store/comments';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ErrorBlockModule } from 'src/app/components/error-block/error-block.module';\r\nimport { LoaderModule } from 'src/app/components/loader/loader.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReviewListContainerModule } from 'src/app/containers/review-list-container/review-list-container.module';\r\nimport { ReviewFormContainerModule } from 'src/app/containers/review-form-container/review-form-container.module';\r\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\r\n\r\n@NgModule({\r\n  declarations: [ReviewsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    UiButtonModule,\r\n    RatingModule,\r\n    ErrorBlockModule,\r\n    LoaderModule,\r\n    RouterModule,\r\n    ReviewListContainerModule,\r\n    ReviewFormContainerModule,\r\n    StoreModule.forFeature(commentsStore.FEATURE_KEY, commentsStore.commentsReducer),\r\n    EffectsModule.forFeature([commentsStore.CommentsEffects])\r\n  ],\r\n  exports: [ReviewsComponent]\r\n})\r\nexport class ReviewsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReviewsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorBlockModule"
                        },
                        {
                            "name": "LoaderModule"
                        },
                        {
                            "name": "RatingModule"
                        },
                        {
                            "name": "ReviewFormContainerModule"
                        },
                        {
                            "name": "ReviewListContainerModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReviewsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchFormContainerModule",
            "id": "module-SearchFormContainerModule-e1fd1679559d8b8889bc2b39eeb5d594579661a21279eed192cd04d2b07d3e9ac79fe628e91201fcea9cdcb155945d3552c53464ed75e1615e19876d9cbaeb2f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/search-form-container/search-form-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchFormContainerComponent } from './search-form-container.component';\nimport { SearchFormModule } from 'src/app/components/search-form/search-form.module';\n\n@NgModule({\n  declarations: [SearchFormContainerComponent],\n  imports: [CommonModule, SearchFormModule],\n  exports: [SearchFormContainerComponent],\n})\nexport class SearchFormContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SearchFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchFormContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchFormModule",
            "id": "module-SearchFormModule-e789ed52c89f615d982fa5bfe901cbc2147d53040995e0f618f652279ecfa20f8eb79e9671842f3a057cc9378bfba333c4d77626fe93c49c69fbe3258f573362",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/search-form/search-form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchFormComponent } from './search-form.component';\nimport { IconModule } from '../icon/icon.module';\nimport { FormsModule } from '@angular/forms';\nimport { EmptyModule } from 'src/app/directives/validators/empty.module';\n\n@NgModule({\n  declarations: [SearchFormComponent],\n  imports: [CommonModule, IconModule, FormsModule, EmptyModule],\n  exports: [SearchFormComponent],\n})\nexport class SearchFormModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EmptyModule"
                        },
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchingResultRoutingModule",
            "id": "module-SearchingResultRoutingModule-d6b2da4ebbc7880cec6231de97df45f41eed5325341682deab918ad72161fe559946a64f4c3427d3e6dd765a49cde158ded48c9624daa2a764baddf3388b0745",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/searching-results/searching-results-container.routing.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchingResultsContainerComponent } from './searching-results-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SearchingResultsContainerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SearchingResultRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchingResultsContainerModule",
            "id": "module-SearchingResultsContainerModule-68cfa92e8bedee27f8dd5a9cdf0862bf03350ca57c54adb04779bb05f987cccf1590833062b4f7e1595dfd9921dd298c9e5abc224bb14fed18026753dcf74246",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/searching-results/searching-results-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchingResultRoutingModule } from './searching-results-container.routing.module';\nimport { SearchingResultsContainerComponent } from './searching-results-container.component';\nimport { SearchingResultsModule } from './component/searching-results.module';\n\n@NgModule({\n  declarations: [SearchingResultsContainerComponent],\n  imports: [CommonModule, SearchingResultRoutingModule, SearchingResultsModule],\n  exports: [SearchingResultsContainerComponent],\n})\nexport class SearchingResultsContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchingResultsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SearchingResultRoutingModule"
                        },
                        {
                            "name": "SearchingResultsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchingResultsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchingResultsModule",
            "id": "module-SearchingResultsModule-2a8bd1eb66aed9507d9d17db0f33f9189cf48b0ec1cc564c796cd3b3a8a168d09318df892fb9ae2698353278979cc65784aa797dd4acb4c45bd37e24412e27c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/searching-results/component/searching-results.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchingResultsComponent } from './searching-results.component';\nimport { ProductListCardModule } from 'src/app/components/product-list-card/product-list-card.module';\nimport { ProductCardModule } from 'src/app/components/product-card/product-card.module';\nimport { RouterModule } from '@angular/router';\nimport { IconModule } from '~components/icon/icon.module';\nimport { ButtonScrollModule } from 'src/app/directives/button-scroll/button-scroll.module';\nimport { UiButtonModule } from 'src/app/directives/ui/ui-button/ui-button.module';\n\n@NgModule({\n  declarations: [SearchingResultsComponent],\n  imports: [\n    CommonModule,\n    ProductListCardModule,\n    ProductCardModule,\n    UiButtonModule,\n    RouterModule,\n    IconModule,\n    ButtonScrollModule\n  ],\n  exports: [SearchingResultsComponent]\n})\nexport class SearchingResultsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchingResultsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonScrollModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "ProductCardModule"
                        },
                        {
                            "name": "ProductListCardModule"
                        },
                        {
                            "name": "UiButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchingResultsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SidebarModule",
            "id": "module-SidebarModule-dd117c4cc883d33c7e9944b6f71f500ad99bccbdda9a2e892fe83b666b8bf1e40fb6b3a7e48d0bbe7f5b4eb02b90c24a01912837048b231d36e9de8e35940b30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/sidebar/sidebar.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { IconModule } from '../icon/icon.module';\r\nimport { SidebarComponent } from './sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [SidebarComponent],\r\n  imports: [CommonModule, IconModule],\r\n  exports: [SidebarComponent]\r\n})\r\nexport class SidebarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SlideModule",
            "id": "module-SlideModule-444adeda8a9cd4e8cbf60aa558b75d5de0f8a7495597f2339ed8c180633d5f81bbf6b359c40fb8eaf4f3984ea9df64783e01f43661b8c4ad211a7bd29c18faad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/slide/slide.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideComponent } from './slide.component';\n\n@NgModule({\n  declarations: [SlideComponent],\n  imports: [CommonModule],\n  exports: [SlideComponent]\n})\nexport class SlideModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SlideComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SlideComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SliderModule",
            "id": "module-SliderModule-52cd02caf50d6619562d33a4622b4cf52bfc12424ac8c39f4c58c0a7e9b69fa3654ded1daa6a3668af3d77d87c7df146c9c8b31bdcd6cdddb78b18ddaff4ba52",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/slider/slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderComponent } from './slider.component';\n\n@NgModule({\n  declarations: [SliderComponent],\n  imports: [CommonModule],\n  exports: [SliderComponent],\n})\nexport class SliderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SortingContainerModule",
            "id": "module-SortingContainerModule-83bf953f2c48656dbcbfeb938de1403c26ce914a3f070270d3f0e4b3c3fbc21f25a214ca4064cbfb8a8d172f00e03c848f8faa0bf27b06e011f3b5d3e8410920",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/containers/sorting-container/sorting-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SortingContainerComponent } from './sorting-container.component';\nimport { SortingModule } from 'src/app/components/sorting/sorting.module';\n\n@NgModule({\n  declarations: [SortingContainerComponent],\n  imports: [CommonModule, SortingModule],\n  exports: [SortingContainerComponent],\n})\nexport class SortingContainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SortingContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SortingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SortingContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SortingModule",
            "id": "module-SortingModule-7f2a82bb66e5017bb9da3f489255161ce7aabf781681720a00956830f0f7a0634e1b5c09747725ffffb26435e7c2913f5c2398061212893d2838eb8c867fbdbf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/sorting/sorting.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SortingComponent } from './sorting.component';\nimport { DropdownModule } from '../dropdown/dropdown.module';\n\n@NgModule({\n  declarations: [SortingComponent],\n  imports: [CommonModule, DropdownModule],\n  exports: [SortingComponent],\n})\nexport class SortingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SortingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DropdownModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SortingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "id": "module-TabModule-10c6d721e7a03ccb274227ee3a712bf8add50652130812672d4881ccd08a1ff1a820191b82e49634205d52563941425b57e3427dc40f96e28e2ce71b17c16da0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/tab/tab.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabComponent } from './tab.component';\n\n@NgModule({\n  declarations: [TabComponent],\n  imports: [CommonModule],\n  exports: [TabComponent],\n})\nexport class TabModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsModule",
            "id": "module-TabsModule-bda12d7c2a4ccb63f63dbea5330d6ab38105cec239fe6e07c6f7180f6b27d887c39a237cb89ead1ab6b3940963cb1c87958575224cdb140f894fe1cd4c0514f8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/tabs/tabs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabsComponent } from './tabs.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TabsComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [TabsComponent],\n})\nexport class TabsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiButtonModule",
            "id": "module-UiButtonModule-20e677541a8967ac509525923435579e7f7853ab6f2b72459bb214b53766ecc6fefcc63069fd1725f4c49cf92a14282e36c55f21d234fdc979bd15107920627b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/ui/ui-button/ui-button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiButtonDirective } from './ui-button.directive';\r\n\r\n@NgModule({\r\n  declarations: [UiButtonDirective],\r\n  imports: [CommonModule],\r\n  exports: [UiButtonDirective]\r\n})\r\nexport class UiButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "VisibilityByScrollModule",
            "id": "module-VisibilityByScrollModule-fe5ae7013d31dfdfd58dc5d0f9a0dc79955c4c7a1c09f3987873562691d6ee62e21fe9c222fa1296717cf7420c1e8ad6a4d95cca484ed089ed73421dd6192126",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/directives/visibility-by-scroll/visibility-by-scroll.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityByScrollDirective } from './visibility-by-scroll.directive';\n\n@NgModule({\n  declarations: [VisibilityByScrollDirective],\n  imports: [CommonModule],\n  exports: [VisibilityByScrollDirective]\n})\nexport class VisibilityByScrollModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "VisibilityByScrollDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "VisibilityByScrollDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Accordion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: { ...args },\r\n    template: `<app-accordion style=\"width: 300px\">\r\n      <button slot=\"button\" style=\"width: 100%\">Button</button>\r\n      <ng-template #bodyContent>\r\n        <div style=\"padding: 10px; background-color: #444444;\">Text content.</div>\r\n      </ng-template>\r\n    </app-accordion>`\r\n  }),\r\n  args: {}\r\n}"
            },
            {
                "name": "addAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Add`, props<{ notify: INotifyWithId }>())"
            },
            {
                "name": "address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  street: 'Тимирязева 67',\r\n  workTime: '10:00 до 21:00',\r\n  weekends: 'Без выходных',\r\n}"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    text: 'sale',\n    bgColor: 'green'\n  },\n  argTypes: {\n    text: {\n      control: {\n        type: 'text'\n      }\n    },\n    bgColor: {\n      control: {\n        type: 'radio',\n        options: ['green', 'pink', null]\n      }\n    }\n  }\n}"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/about-us/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: title,\r\n  },\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/catalog/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: 'Контакты',\r\n  },\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/contacts/data/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Контакты'\r\n  }\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/corporate-clients/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Корпоративным клиентам'\r\n  }\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/delivery-payment/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Доставка и оплата'\r\n  }\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/faq/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: 'FAQ',\r\n  },\r\n]"
            },
            {
                "name": "breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: title\r\n  }\r\n]"
            },
            {
                "name": "Breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumbs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    links: [\r\n      { title: 'Главная', url: '/main' },\r\n      { title: 'Каталог', url: '/catalog' },\r\n      { title: 'Страница товара' }\r\n    ]\r\n  },\r\n  argTypes: {\r\n    links: {\r\n      description: '{title: string, url?: string}[]'\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "BurgerMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BurgerMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {}\r\n}"
            },
            {
                "name": "buttonVariantClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\n  '1': 'button-1',\n  '2': 'button-2',\n  '3': 'button-3',\n  '4': 'button-4'\n}"
            },
            {
                "name": "CartButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    count: 1\n  },\n  argTypes: {\n    count: {\n      control: {\n        type: 'number',\n        min: 0\n      }\n    }\n  }\n}"
            },
            {
                "name": "cartDiscountSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) => {\r\n    return inCart\r\n      ? inCart.reduce(\r\n          (accum, productInCart) =>\r\n            productInCart.count * productInCart.product.price.discount + accum,\r\n          0\r\n        )\r\n      : 0;\r\n  }\r\n)"
            },
            {
                "name": "cartErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  cartSelector,\r\n  (state: IState) => state.error\r\n)"
            },
            {
                "name": "cartLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  cartSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "CartMenuEmpty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "CartMenuOffersLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOfferProductsLoading: true\n  }\n}"
            },
            {
                "name": "CartMenuWithOffers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    offerProducts: [getMockProduct({ id: 1 }), getMockProduct({ id: 2 }), getMockProduct({ id: 3 })]\n  }\n}"
            },
            {
                "name": "CartMenuWithProducts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    inCartProducts: [\n      { count: 3, product: getMockProduct({ id: 1 }) },\n      { count: 2, product: getMockProduct({ id: 2 }) },\n      { count: 1, product: getMockProduct({ id: 3 }) },\n      { count: 4, product: getMockProduct({ id: 4 }) },\n      { count: 2, product: getMockProduct({ id: 5 }) },\n      { count: 1, product: getMockProduct({ id: 6 }) },\n      { count: 5, product: getMockProduct({ id: 7 }) }\n    ],\n    cartPrice: 10000\n  }\n}"
            },
            {
                "name": "CartMenuWithProductsAndOffers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    inCartProducts: [\n      { count: 3, product: getMockProduct({ id: 1 }) },\n      { count: 2, product: getMockProduct({ id: 2 }) },\n      { count: 1, product: getMockProduct({ id: 3 }) },\n      { count: 4, product: getMockProduct({ id: 4 }) },\n      { count: 2, product: getMockProduct({ id: 5 }) },\n      { count: 1, product: getMockProduct({ id: 6 }) },\n      { count: 5, product: getMockProduct({ id: 7 }) }\n    ],\n    cartPrice: 5000,\n    offerProducts: [getMockProduct({ id: 1 }), getMockProduct({ id: 2 }), getMockProduct({ id: 3 })]\n  }\n}"
            },
            {
                "name": "cartPostingErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['postError']>(\r\n  cartSelector,\r\n  (state: IState) => state.error\r\n)"
            },
            {
                "name": "cartPostLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['isPostLoading']>(\r\n  cartSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "cartPriceSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) => {\r\n    return inCart\r\n      ? inCart.reduce(\r\n          (accum, productInCart) =>\r\n            productInCart.count *\r\n              (productInCart.product.price.value - productInCart.product.price.discount) +\r\n            accum,\r\n          0\r\n        )\r\n      : 0;\r\n  }\r\n)"
            },
            {
                "name": "cartReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(postProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    postError: payload.error\r\n  })),\r\n  on(postChangeCountAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postChangeCountSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postChangeCountErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(deleteProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(deleteProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(deleteProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
            },
            {
                "name": "cartSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('cart')"
            },
            {
                "name": "catalog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/page-components/shared/footer/data/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'Каталог',\r\n  categories: categories.slice(0, 11)\r\n}"
            },
            {
                "name": "categories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.gypsophila],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.gypsophila]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.chamomile],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.chamomile]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.chrysanthemum],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.chrysanthemum]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.indoor],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.indoor]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.mono],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.mono]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.compositions],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.compositions]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.holiday],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.holiday]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.envelope],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.envelope]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.postcards],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.postcards]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.gifts],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.gifts]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.driedFlowers],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.driedFlowers]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.balloon],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.balloon]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.popular],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.popular]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.roses],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.roses]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.funeral],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.funeral]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.packaging],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.packaging]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.wedding],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.wedding]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.interior],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.interior]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.autumn],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.autumn]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.individual],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.individual]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.prefabricated],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.prefabricated]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.additionally],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.additionally]\r\n  }\r\n]"
            },
            {
                "name": "categoriesIndex",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, number>",
                "defaultValue": "{}"
            },
            {
                "name": "CATEGORY_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumCategories.gypsophila]: 'Букеты из гипсофил',\r\n  [EnumCategories.chamomile]: 'Букеты из ромашек',\r\n  [EnumCategories.chrysanthemum]: 'Букеты из хризантем',\r\n  [EnumCategories.indoor]: 'Комнатные цветы в горшках',\r\n  [EnumCategories.mono]: 'Монобукеты',\r\n  [EnumCategories.holiday]: 'Букеты на праздник',\r\n  [EnumCategories.compositions]: 'Композиции из букетов',\r\n  [EnumCategories.envelope]: 'Конверты',\r\n  [EnumCategories.postcards]: 'Откытки',\r\n  [EnumCategories.gifts]: 'Подарки',\r\n  [EnumCategories.driedFlowers]: 'Букеты из сухоцветов',\r\n  [EnumCategories.balloon]: 'Шары',\r\n  [EnumCategories.popular]: 'Популярное',\r\n  [EnumCategories.roses]: 'Букеты роз',\r\n  [EnumCategories.funeral]: 'Цветы на похороны',\r\n  [EnumCategories.packaging]: 'Упаковка подарков',\r\n  [EnumCategories.wedding]: 'Свдебные',\r\n  [EnumCategories.interior]: 'Интерьерные композиции',\r\n  [EnumCategories.individual]: 'Индивидуальный букет',\r\n  [EnumCategories.additionally]: 'Дополнительно',\r\n  [EnumCategories.autumn]: 'Осенние',\r\n  [EnumCategories.prefabricated]: 'Сборные'\r\n}"
            },
            {
                "name": "CATEGORY_PARAMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumCategories.gypsophila]: 'gypsophila',\r\n  [EnumCategories.chamomile]: 'chamomile',\r\n  [EnumCategories.chrysanthemum]: 'chrysanthemum',\r\n  [EnumCategories.indoor]: 'indoor',\r\n  [EnumCategories.mono]: 'mono',\r\n  [EnumCategories.holiday]: 'holiday',\r\n  [EnumCategories.compositions]: 'compositions',\r\n  [EnumCategories.envelope]: 'envelope',\r\n  [EnumCategories.postcards]: 'postcards',\r\n  [EnumCategories.gifts]: 'gifts',\r\n  [EnumCategories.driedFlowers]: 'driedFlowers',\r\n  [EnumCategories.balloon]: 'balloon',\r\n  [EnumCategories.popular]: 'popular',\r\n  [EnumCategories.roses]: 'roses',\r\n  [EnumCategories.funeral]: 'funeral',\r\n  [EnumCategories.packaging]: 'packaging',\r\n  [EnumCategories.wedding]: 'wedding',\r\n  [EnumCategories.interior]: 'interior',\r\n  [EnumCategories.individual]: 'individual',\r\n  [EnumCategories.additionally]: 'additionally',\r\n  [EnumCategories.autumn]: 'autumn',\r\n  [EnumCategories.prefabricated]: 'prefabricated'\r\n}"
            },
            {
                "name": "CategoryFilter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CategoryFilter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    categories: [\n      {\n        title: 'Шары',\n        paramValue: 'balloon'\n      },\n      {\n        title: 'Дополнительно',\n        paramValue: 'additionally'\n      },\n      {\n        title: 'Индивидуальный',\n        paramValue: 'individual'\n      },\n      {\n        title: 'Популряное',\n        paramValue: 'popular'\n      },\n      {\n        title: 'Подарки',\n        paramValue: 'gifts'\n      }\n    ]\n  }\n}"
            },
            {
                "name": "CategoryFilterWithActiveCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CategoryFilter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    categories: [\n      {\n        title: 'Шары',\n        paramValue: 'balloon'\n      },\n      {\n        title: 'Дополнительно',\n        paramValue: 'additionally'\n      },\n      {\n        title: 'Индивидуальный',\n        paramValue: 'individual'\n      },\n      {\n        title: 'Популряное',\n        paramValue: 'popular'\n      },\n      {\n        title: 'Подарки',\n        paramValue: 'gifts'\n      }\n    ],\n    activeCategories: new Set(['balloon', 'popular'])\n  }\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelValue: 'Розы',\n    attrValue: 'roses',\n    attrName: 'flower'\n  }\n}"
            },
            {
                "name": "clearAllAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Clear All`)"
            },
            {
                "name": "clearAllErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  Clear All Error`,\r\n  props<ErrorPayload>()\r\n)"
            },
            {
                "name": "clearAllSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  Clear All Success`,\r\n  props<ClearCartResponsePayload>()\r\n)"
            },
            {
                "name": "COLOR_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumColor.white]: 'Белый',\r\n  [EnumColor.yellow]: 'Желтый',\r\n  [EnumColor.green]: 'Зеленый',\r\n  [EnumColor.red]: 'Красный',\r\n  [EnumColor.orange]: 'Оранжевый',\r\n  [EnumColor.pink]: 'Розовый'\r\n}"
            },
            {
                "name": "COLOR_PARAMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumColor.white]: 'white',\r\n  [EnumColor.yellow]: 'yellow',\r\n  [EnumColor.green]: 'green',\r\n  [EnumColor.red]: 'red',\r\n  [EnumColor.orange]: 'orange',\r\n  [EnumColor.pink]: 'pink'\r\n}"
            },
            {
                "name": "commentErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['postError']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.postError\r\n)"
            },
            {
                "name": "commentLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['postIsLoading']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.postIsLoading\r\n)"
            },
            {
                "name": "commentsErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.error\r\n)"
            },
            {
                "name": "commentsLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.isLoading\r\n)"
            },
            {
                "name": "commentsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    comments: payload.comments\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postSuccessAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: false\r\n  })),\r\n  on(postErrorAction, (state, payload) => ({\r\n    ...state,\r\n    postIsLoading: false,\r\n    postError: payload.error\r\n  }))\r\n)"
            },
            {
                "name": "commentsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['comments']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.comments\r\n)"
            },
            {
                "name": "commentsStoreSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('comments')"
            },
            {
                "name": "contacts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/contacts.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  email: 'zakaz@loverflower.by',\r\n  social: {\r\n    instagram: '#',\r\n    whatsapp: '#'\r\n  },\r\n  phone: '+375291136969'\r\n}"
            },
            {
                "name": "contactsBlock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/contactsBlock.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  email: {\r\n    contact: contacts.email,\r\n    descr: 'Доставка 24/7 по договоренности с оператором'\r\n  },\r\n  address,\r\n  social: contacts.social,\r\n  phone: {\r\n    phone: contacts.phone,\r\n    descr: 'заказать звонок'\r\n  }\r\n}"
            },
            {
                "name": "corporateReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
            },
            {
                "name": "Counter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    min: 0,\n    max: 5,\n    labelValueA11y: 'Счетчик'\n  }\n}"
            },
            {
                "name": "countInCartSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) =>\r\n    inCart ? inCart.reduce((accum, productInCart) => productInCart.count + accum, 0) : 0\r\n)"
            },
            {
                "name": "covidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/COVIDMessage.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  part: `Во время пандемии (COVID-19) компания Lover Flower призывает всех меньше\r\n  контактировать с другими людьми для защиты себя и своих близких. Именно\r\n  поэтому мы организовали`,\r\n  part2: 'БЕСКОНТАКТНУЮ ДОСТАВКУ',\r\n}"
            },
            {
                "name": "deleteProductAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product`,\r\n  props<DeleteFromCartRequestPayload>()\r\n)"
            },
            {
                "name": "deleteProductErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product Error`,\r\n  props<ErrorPayload>()\r\n)"
            },
            {
                "name": "deleteProductSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product Success`,\r\n  props<DeleteFromCartResponsePayload>()\r\n)"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/about-us/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/catalog/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/contacts/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/corporate-clients/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/delivery-payment/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/faq/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/main/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/not-found/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order-successful/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/searching-results/data/meta.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
            },
            {
                "name": "enterLeaveAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/animations/enter-leave-animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('enterLeaveAnimation', [\r\n  transition(':enter', [style({ opacity: '0' }), animate('0.3s', style({ opacity: '1' }))]),\r\n  transition(':leave', [\r\n    style({ transform: 'translateX(0)' }),\r\n    animate('0.3s', style({ transform: 'translateX(200%)' }))\r\n  ])\r\n])"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[App]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Cart]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Corporate]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Feedback]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Notifications]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Order]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Products]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Comments]'"
            },
            {
                "name": "ENTITY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Product]'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  api: 'https://prod.example-lover-flowers.com'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.staging.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  api: 'https://staging.example-lover-flowers.com'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  api: 'https://dev.example-lover-flowers.com'\n}"
            },
            {
                "name": "ErrorBlock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorBlock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "expandAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/animations/expand-animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('expandAnimation', [\r\n  transition(':enter', [\r\n    style({ height: 0 }),\r\n    animate('0.3s', style({ height: '*' })),\r\n  ]),\r\n  transition(':leave', [\r\n    style({ height: '*' }),\r\n    animate('0.3s', style({ height: 0 })),\r\n  ]),\r\n])"
            },
            {
                "name": "fadeAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/animations/fade-animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('fadeAnimation', [\r\n  transition(':enter', [\r\n    style({ opacity: '0' }),\r\n    animate('0.3s', style({ opacity: '1' })),\r\n  ]),\r\n  transition(':leave', [\r\n    style({ opacity: '1' }),\r\n    animate('0.3s', style({ opacity: '0' })),\r\n  ]),\r\n])"
            },
            {
                "name": "faq",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/faq/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    question: `БУДЕТ ЛИ ЗАКАЗАННЫЙ БУКЕТ В ТОЧНОСТИ СООТВЕТСТВОВАТЬ ЕГО\r\n    ИЗОБРАЖЕНИЮ НА САЙТЕ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные. Либо если\r\n    флорист считает, что данные изменения не повлекут сильного\r\n    изменения в образе букета, то самостоятельно может заменить\r\n    некоторые цветы. И перед отправкой направляется фото заказчику,\r\n    который утверждает получившийся букет. Каждый цветок отличается\r\n    от другого, как и каждый букет будет индивидуальным, но в этом и\r\n    есть его прелесть… в индивидуальности.`,\r\n  },\r\n  {\r\n    question: `КАК ДОЛГО СТОЯТ БУКЕТЫ ИЗ СУХОЦВЕТОВ?`,\r\n    answer: `Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `ДЕЛАЕТЕ ЛИ ВЫ ФОТО ГОТОВОГО БУКЕТА ПЕРЕД ОТПРАВКОЙ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако возможны\r\n    случаи, когда нет необходимых цветов либо имеющиеся цветы\r\n    отличаются от представленных на фото, и с согласования заказчика\r\n    они могут быть заменены на аналогичные. Либо если флорист считает,\r\n    что данные изменения не повлекут сильного изменения в образе\r\n    букета, то самостоятельно может заменить некоторые цветы. И перед\r\n    отправкой направляется фото заказчику, который утверждает\r\n    получившийся букет. Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `ЕСТЬ ЛИ ДОСТАВКА ЗА ПРЕДЕЛЫ МКАД?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако возможны\r\n    случаи, когда нет необходимых цветов либо имеющиеся цветы\r\n    отличаются от представленных на фото, и с согласования заказчика\r\n    они могут быть заменены на аналогичные. Либо если флорист считает,\r\n    что данные изменения не повлекут сильного изменения в образе\r\n    букета, то самостоятельно может заменить некоторые цветы. И перед\r\n    отправкой направляется фото заказчику, который утверждает\r\n    получившийся букет. Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `КАК ОПРЕДЕЛИТЬ СВЕЖИЕ ЛИ ЦВЕТЫ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные.`,\r\n  },\r\n  {\r\n    question: `А СКОЛЬКО ДОЛЖНЫ ПРОСТОЯТЬ ЦВЕТЫ В БУКЕТЕ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные.`,\r\n  },\r\n  {\r\n    question: `ЧЕМ ОТЛИЧАЕТСЯ БЕЛОРУССКАЯ РОЗА ОТ ИМПОРТНОЙ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные. Либо если\r\n    флорист считает, что данные изменения не повлекут сильного\r\n    изменения в образе букета, то самостоятельно может заменить\r\n    некоторые цветы. И перед отправкой направляется фото заказчику,\r\n    который утверждает получившийся букет. Каждый цветок отличается\r\n    от другого, как и каждый букет будет индивидуальным, но в этом и\r\n    есть его прелесть… в индивидуальности.`,\r\n  },\r\n]"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'cart'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'corporate'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'feedback'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'notifications'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'order'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'products'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'comments'"
            },
            {
                "name": "FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'product'"
            },
            {
                "name": "FeedbackForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FeedbackForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "FeedbackFormSending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FeedbackForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoading: true\n  }\n}"
            },
            {
                "name": "feedbackLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  feedbackSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "feedbackReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
            },
            {
                "name": "feedbackSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('feedback')"
            },
            {
                "name": "FLOWER_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumFlower.alstroemeria]: 'Альстромерия',\r\n  [EnumFlower.anthurium]: 'Антуриум',\r\n  [EnumFlower.asparagus]: 'Аспарагус',\r\n  [EnumFlower.astilba]: 'Астильба',\r\n  [EnumFlower.astrance]: 'Астранция'\r\n}"
            },
            {
                "name": "FLOWER_PARAMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumFlower.alstroemeria]: 'alstroemeria',\r\n  [EnumFlower.anthurium]: 'anthurium',\r\n  [EnumFlower.asparagus]: 'asparagus',\r\n  [EnumFlower.astilba]: 'astilba',\r\n  [EnumFlower.astrance]: 'astrance'\r\n}"
            },
            {
                "name": "footer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/page-components/shared/footer/data/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  requisites,\r\n  catalog,\r\n  nav: {\r\n    delivery: routes.delivery,\r\n    about: routes.about,\r\n    faq: routes.faq,\r\n    contacts: routes.contacts,\r\n    corporateClients: {\r\n      title: 'Для корпоративных клиентов',\r\n      url: 'corporate-clients'\r\n    }\r\n  },\r\n  contactsBlock\r\n}"
            },
            {
                "name": "FORMAT_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumFormat.bouquet]: 'Букет',\r\n  [EnumFormat.vase]: 'В вазе',\r\n  [EnumFormat.envelope]: 'В конверте',\r\n  [EnumFormat.basket]: 'В корзине',\r\n  [EnumFormat.hatbox]: 'В шляпной коробке',\r\n  [EnumFormat.box]: 'В ящике'\r\n}"
            },
            {
                "name": "FORMAT_PARAMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumFormat.bouquet]: 'bouquet',\r\n  [EnumFormat.vase]: 'vase',\r\n  [EnumFormat.envelope]: 'envelope',\r\n  [EnumFormat.basket]: 'basket',\r\n  [EnumFormat.hatbox]: 'hatbox',\r\n  [EnumFormat.box]: 'box'\r\n}"
            },
            {
                "name": "generateRandomString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/utils/randomString.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): string =>\r\n  Math.random().toString(36).substring(2, 15)"
            },
            {
                "name": "hydrateAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} hydrate`)"
            },
            {
                "name": "hydrateAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} hydrate`)"
            },
            {
                "name": "hydrateErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY}  hydrate Error`)"
            },
            {
                "name": "hydrateErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY}  hydrate Error`)"
            },
            {
                "name": "hydrateSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  hydrate Success`,\r\n  props<{ payload: typeof initialState }>()\r\n)"
            },
            {
                "name": "hydrateSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  hydrate Success`,\r\n  props<{ payload: typeof initialState }>()\r\n)"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    width: 'full',\n    height: 'full',\n    icon: 'phone'\n  },\n  argTypes: {\n    icon: {\n      description: `arrow-curve\n      | arrow-right\n      | cart\n      | handset\n      | instagram\n      | logo\n      | phone\n      | search\n      | whatsapp\n      | flower`\n    },\n    width: {\n      description: 'full',\n      control: {\n        type: 'text'\n      }\n    },\n    height: {\n      description: 'full',\n      control: {\n        type: 'text'\n      }\n    },\n    pathFill: {\n      control: {\n        type: 'color'\n      }\n    },\n    viewBox: {\n      description: 'Example: \"0 0 40 40\"'\n    }\n  }\n}"
            },
            {
                "name": "inCartSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['inCart']>(\r\n  cartSelector,\r\n  (state: IState) => state.inCart\r\n)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  inCart: [],\r\n  isLoading: false,\r\n  isPostLoading: false,\r\n  error: null,\r\n  postError: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  isLoading: false,\r\n  error: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  isLoading: false,\r\n  error: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  list: []\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  isLoading: false,\r\n  error: null,\r\n  id: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  products: [],\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  comments: null,\r\n  isLoading: false,\r\n  error: null,\r\n  postIsLoading: false,\r\n  postError: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IState",
                "defaultValue": "{\r\n  product: null,\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n}"
            },
            {
                "name": "IS_PLATFORM_BROWSER_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tokens/isPlatformBrowser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('isPlatformBrowser', {\r\n  factory: () => isPlatformBrowser\r\n})"
            },
            {
                "name": "IS_PLATFORM_SERVER_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tokens/isPlatformServer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('isPlatformServer', {\r\n  factory: () => isPlatformServer\r\n})"
            },
            {
                "name": "LIGHT_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumLight.gentle]: 'Нежный',\r\n  [EnumLight.bright]: 'Яркий'\r\n}"
            },
            {
                "name": "LIGHT_PARAMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumLight.gentle]: 'gentle',\r\n  [EnumLight.bright]: 'bright'\r\n}"
            },
            {
                "name": "links",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/main/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  catalog: 'Смотреть каталог'\r\n}"
            },
            {
                "name": "Loader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "LOCAL_STORAGE_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tokens/localStorage.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('localStorage')"
            },
            {
                "name": "mainRoute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'Главная',\r\n  url: '/'\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AccordionComponent>",
                "defaultValue": "{\r\n  component: AccordionComponent,\r\n  title: 'Components/Accordion',\r\n  parameters: {\r\n    layout: 'centered'\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, AccordionModule, BrowserAnimationsModule]\r\n    })\r\n  ]\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, BadgeModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumbs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BreadcrumbsComponent>",
                "defaultValue": "{\r\n  title: 'Components/Breadcrumbs',\r\n  component: BreadcrumbsComponent,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'padded',\r\n    controls: { expanded: true }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        RouterTestingModule.withRoutes([{ path: '**', component: BreadcrumbsComponent }])\r\n      ]\r\n    })\r\n  ]\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BurgerMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BurgerMenuComponent>",
                "defaultValue": "{\r\n  title: 'Components/BurgerMenu',\r\n  component: BurgerMenuComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 2rem)\">${story}</div>`),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        NgxMaskPipe,\r\n        SearchFormContainerModule,\r\n        IconModule,\r\n        ForEntriesModule,\r\n        RouterTestingModule.withRoutes([{ path: '**', component: BurgerMenuComponent }])\r\n      ],\r\n      providers: [provideNgxMask()]\r\n    })\r\n  ]\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CartButtonComponent>",
                "defaultValue": "{\n  title: 'Components/CartButton',\n  component: CartButtonComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, CartButtonModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CartMenuComponent>",
                "defaultValue": "{\n  title: 'Components/CartMenu',\n  component: CartMenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 3rem)\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ProductItemModule,\n        UiButtonModule,\n        LoaderModule,\n        BrowserAnimationsModule,\n        RouterTestingModule.withRoutes([{ path: '**', component: CartMenuComponent }])\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CategoryFilter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategoryFilterComponent>",
                "defaultValue": "{\n  title: 'Components/CategoryFilter',\n  component: CategoryFilterComponent,\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 3rem)\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CategoryFilterModule, UiButtonModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n  title: 'Components/Checkbox',\n  component: CheckboxComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CheckboxModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CounterComponent>",
                "defaultValue": "{\n  title: 'Components/Counter',\n  component: CounterComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CounterModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorBlock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ErrorBlockComponent>",
                "defaultValue": "{\n  title: 'Components/ErrorBlock',\n  component: ErrorBlockComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ErrorBlockModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FeedbackForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FeedbackFormComponent>",
                "defaultValue": "{\n  title: 'Components/FeedbackForm',\n  component: FeedbackFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, FeedbackFormModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\n  title: 'Components/Icon',\n  component: IconComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"max-width: 40px;\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, IconModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoaderComponent>",
                "defaultValue": "{\n  title: 'Components/Loader',\n  component: LoaderComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, LoaderModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notifications.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationsComponent>",
                "defaultValue": "{\n  title: 'Components/Notifications',\n  component: NotificationsComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div>${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, NotificationsModule, BrowserAnimationsModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notify.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotifyComponent>",
                "defaultValue": "{\n  title: 'Components/Notify',\n  component: NotifyComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, NotifyModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Price.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PriceComponent>",
                "defaultValue": "{\n  title: 'Components/Price',\n  component: PriceComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, PriceModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductCardComponent>",
                "defaultValue": "{\n  title: 'Components/ProductCard',\n  component: ProductCardComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        UiButtonModule,\n        PriceModule,\n        BadgeModule,\n        ProductBadgeColorModule,\n        ProductBadgeTextModule,\n        ImageUploadStatusModule,\n        NgOptimizedImage,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductCardComponent }])\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductItemComponent>",
                "defaultValue": "{\n  title: 'Components/ProductItem',\n  component: ProductItemComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        CounterModule,\n        RouterModule,\n        NgOptimizedImage,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductItemComponent }])\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductsSlider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductsSliderComponent>",
                "defaultValue": "{\n  title: 'Components/ProductsSlider',\n  component: ProductsSliderComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ProductCardModule,\n        SliderModule,\n        IconModule,\n        UiButtonModule,\n        LoaderModule,\n        SlideModule,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductsSliderComponent }])\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PromocodeField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PromocodeFieldComponent>",
                "defaultValue": "{\n  title: 'Components/PromocodeField',\n  component: PromocodeFieldComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, PromocodeFieldModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadioButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonComponent>",
                "defaultValue": "{\n  title: 'Components/RadioButton',\n  component: RadioButtonComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, RadioButtonModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RangeComponent>",
                "defaultValue": "{\n  title: 'Components/Range',\n  component: RangeComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"width: 300px\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, RangeModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RatingComponent>",
                "defaultValue": "{\n  title: 'Components/Rating',\n  component: RatingComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, RatingModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Review.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ReviewComponent>",
                "defaultValue": "{\n  title: 'Components/Review',\n  component: ReviewComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ReviewForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ReviewFormComponent>",
                "defaultValue": "{\n  title: 'Components/ReviewForm',\n  component: ReviewFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewFormModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ReviewList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ReviewListComponent>",
                "defaultValue": "{\n  title: 'Components/ReviewList',\n  component: ReviewListComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewListModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchFormComponent>",
                "defaultValue": "{\n  title: 'Components/SearchForm',\n  component: SearchFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, SearchFormModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Sorting.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SortingComponent>",
                "defaultValue": "{\n  title: 'Components/Sorting',\n  component: SortingComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"width: 300px;\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, SortingModule]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UiButtonDirective>",
                "defaultValue": "{\r\n  title: 'Directives/UiButton',\r\n  component: UiButtonDirective,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'centered'\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [UiButtonModule]\r\n    })\r\n  ]\r\n}"
            },
            {
                "name": "noHydrateAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} no hydrate`)"
            },
            {
                "name": "Notifications",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notifications.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    notifications: [\n      {\n        id: '1',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      }\n    ]\n  }\n}"
            },
            {
                "name": "notificationsListSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['list']>(\r\n  notificationsSelector,\r\n  (state: IState) => state.list\r\n)"
            },
            {
                "name": "NotificationsMoreThanTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notifications.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    notifications: [\n      {\n        id: '1',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      },\n      {\n        id: '2',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      },\n      {\n        id: '3',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      }\n    ]\n  }\n}"
            },
            {
                "name": "notificationsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(addAction, (state, payload) => ({\r\n    ...state,\r\n    list: [...state.list, payload.notify]\r\n  })),\r\n  on(removeAction, (state, payload) => ({\r\n    ...state,\r\n    list: state.list.filter((notify: INotifyWithId) => notify.id !== payload.id)\r\n  })),\r\n  on(removeAllAction, (state) => ({\r\n    ...state,\r\n    list: []\r\n  }))\r\n)"
            },
            {
                "name": "notificationsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>(FEATURE_KEY)"
            },
            {
                "name": "Notify",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notify.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    notify: {\n      title: 'Заголовок',\n      type: 'warn',\n      text: 'Дополнительное описание оповещения'\n    }\n  }\n}"
            },
            {
                "name": "OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/containers/sorting-container/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IOption[]",
                "defaultValue": "[\r\n  {\r\n    categoryTitle: 'По популярности',\r\n    title: 'Сначала популярные',\r\n    sort: 'desc',\r\n    targetSort: 'rating'\r\n  },\r\n  {\r\n    categoryTitle: 'По популярности',\r\n    title: 'Сначала не популярные',\r\n    sort: 'asc',\r\n    targetSort: 'rating'\r\n  },\r\n  {\r\n    categoryTitle: 'По цене',\r\n    title: 'Сначала дорогие',\r\n    sort: 'desc',\r\n    targetSort: 'price'\r\n  },\r\n  {\r\n    categoryTitle: 'По цене',\r\n    title: 'Сначала дешевые',\r\n    sort: 'asc',\r\n    targetSort: 'price'\r\n  }\r\n]"
            },
            {
                "name": "orderLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  orderSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "orderReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null,\r\n    id: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    id: payload.id\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
            },
            {
                "name": "orderResolver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/order-success.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResolveFn<number>",
                "defaultValue": "(route: ActivatedRouteSnapshot) => {\r\n  const orderId = Number(route.paramMap.get('id'));\r\n  return of(orderId);\r\n}"
            },
            {
                "name": "orderSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>(FEATURE_KEY)"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cart-menu/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'Ваша корзина',\r\n  item: {\r\n    btn: 'Удалить',\r\n  },\r\n  other: {\r\n    title: 'Добавьте к заказу',\r\n    total: {\r\n      title: 'Предварительный итог:',\r\n      descr: 'Чтобы узнать стоимость доставки, перейдите к оформлению заказа.',\r\n    },\r\n    item: {\r\n      btn: 'Добавить',\r\n    },\r\n    link: 'Оформить заказ',\r\n  },\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/about-us/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: title,\r\n  breadcrumbs,\r\n  section: {\r\n    loverFlower: {\r\n      title: 'Lover flower',\r\n      text: 'молодая команда разных людей с одинаковыми ценностями.',\r\n      text2: `Мы считаем, что удовольствие от качества длится дольше, чем\r\n      удовольствие от низкой цены. И поэтому в создание нашей букетерии мы\r\n      вложили все, чем располагаем: душу, сердце, время и мечты! Мы готовы\r\n      обещать вам только то, что можем сделать. А делаем мы только самое\r\n      качественное, самое интересное и обязательно уникальное. Мы всегда\r\n      честны со своими клиентами во всем – в нашем каталоге только те\r\n      букеты, которые вы действительно сможете купить.`,\r\n    },\r\n    guarantees: {\r\n      title: 'Гарантии',\r\n      text: `Каждый цветок уникален и чтобы вы были уверены в качестве, мы пришлем\r\n      вам фотографию именно вашего букета до его отправки получателю. Вся\r\n      предоставленная Вами информация конфиденциальна и будет известна\r\n      только нам и курьеру для осуществления доставки.`,\r\n    },\r\n    services: {\r\n      title: 'Заказ букетов на сайте компании Lower Flower – это:',\r\n      list: [\r\n        'выбор оттенков и сортов цветков в любое время года;',\r\n        'отправка фото готовой композиции перед отправкой;',\r\n        'возможность заказать цветы с доставкой в течение часа;',\r\n        'выгодные цены – на сайте только те варианты, что Вы сможете купить;',\r\n        'полная конфиденциальность по заказу;',\r\n        'мы подбираем открытку, воздушные шар, подарок по Вашему желанию;',\r\n        'в нашем уютном цветочном магазине цветы, которые приятно дарить.',\r\n      ],\r\n    },\r\n    aboutUs: {\r\n      text: `Природная гармония цвета, неповторимость бутонов и Ваши чувства в нежных\r\n      лепестках не оставят никого равнодушным.`,\r\n      text2: `Вы выбираете и заказываете цветочный сюрприз, а мы вкладываем в него\r\n      душу!`,\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/catalog/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: title,\r\n  breadcrumbs,\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/contacts/data/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'контакты',\r\n  breadcrumbs,\r\n  contactsSection: {\r\n    time: {\r\n      title: 'Время работы',\r\n      descr: `${address.workTime} ${address.weekends}`\r\n    },\r\n    address: {\r\n      title: 'Адрес',\r\n      descr: address.street\r\n    },\r\n    phone: {\r\n      title: 'Телефон',\r\n      descr: contacts.phone\r\n    },\r\n    email: {\r\n      title: 'E-mail',\r\n      descr: contacts.email\r\n    }\r\n  },\r\n  feedback: {\r\n    title: {\r\n      part1: 'Напишите',\r\n      part2: 'Нам'\r\n    }\r\n  },\r\n  map: {\r\n    title: 'Мы на карте'\r\n  }\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/delivery-payment/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: {\r\n    part: 'доставка',\r\n    part2: 'и оплата'\r\n  },\r\n  breadcrumbs,\r\n  warning: {\r\n    title: 'Дорогие клиенты!',\r\n    text: covidMessage\r\n  },\r\n  section: {\r\n    payment: {\r\n      title: 'Способы оплаты:',\r\n      list: [\r\n        'БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ или по ссылке',\r\n        `НАЛИЧНЫМИ, БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ или с расчетного счета\r\n        орагнизации`,\r\n        `НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ`,\r\n        'КРИПТОВАЛЮТОЙ'\r\n      ]\r\n    },\r\n    deliveryCost: {\r\n      title: 'стоимость доставки:',\r\n      text: {\r\n        part: 'Бесплатно ',\r\n        part2: ' – при заказе на сумму',\r\n        part3: ' от 90 рублей'\r\n      },\r\n      text2: {\r\n        part: '10 рублей  ',\r\n        part2: ' – при заказе на сумму ',\r\n        part3: 'менее 90 рублей'\r\n      },\r\n      text3: {\r\n        part: 'Так же вы можете забрать ваш заказ самостоятельно по адресу:',\r\n        part2: 'г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до 21.00'\r\n      }\r\n    },\r\n    deliveryCondition: {\r\n      title: 'Условия доставки:',\r\n      text: {\r\n        part: 'Доставка осуществляется по городу Минску в пределах МКАД в',\r\n        part2: 'любой день'\r\n      },\r\n      text2: {\r\n        part: ` Возможность, сроки и стоимость доставки за пределы МКАД, доставки в\r\n        ночное время, праздники`,\r\n        part2: 'оговариваются с менеджером'\r\n      }\r\n    },\r\n    additionally: {\r\n      title: 'Дополнительно:',\r\n      text: `Доставка иному лицу возможна только в случае оплаты заказа заказчиком.\r\n      Доставка осуществляется не ранее чем через 2 часа после оплаты заказа,\r\n      но может быть ранее, если букет есть в наличии либо по договорённости\r\n      с менеджером. Время ожидания курьера составляет 15 минут. В случае\r\n      если на момент доставки цветов получателя нет либо нет возможности по\r\n      иным причинам произвести доставку (указан неточный адрес, закрытая\r\n      входная дверь, контрольно-пропускная система и др.), мы оставляем за\r\n      собой право по собственному выбору:`,\r\n      list: [\r\n        'оставить цветы тому, кто открыл дверь;',\r\n        `с заказчиком согласовать повторную доставку, которая дополнительно\r\n        оплачивается;`,\r\n        'отказаться от передачи цветов без возврата денежных средств.'\r\n      ],\r\n      text2: {\r\n        part: `Если вы либо иной получатель не получили заказ, вам необходимо\r\n        сообщить об этом менеджеру по телефону`,\r\n        part2: contacts.phone\r\n      }\r\n    },\r\n    repayment: {\r\n      title: 'Возврат срадств:',\r\n      text: `При отказе заказчика от заказа в течение двух часов, если заказ ещё не\r\n      начал готовиться, средства возвращаются в полном объёме. Если же\r\n      флорист начал подготовку, то заказчик имеет право на возврат 50%\r\n      стоимости, либо, если ещё не был оплачен, то обязан оплатить 50%.`,\r\n      text2: `Цветы надлежащего качества возврату и обмену не подлежат, а если\r\n      имеются какие-либо недостатки в цветах – возврат производится лишь\r\n      если эти недостатки не являются природными и естественными изъянами\r\n      растения. Возврат денежных средств производится незамедлительно на тот\r\n      счёт, с которого произошла оплата, их же поступление на счёт зависит\r\n      от платёжной системы.`\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/faq/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'FAQ',\r\n  breadcrumbs,\r\n  faq,\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/main/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  hero: {\r\n    title: title,\r\n    slogan: 'Создаём для тех, кто ценит свежесть и изящество цветка',\r\n    link: {\r\n      title: 'Смотреть каталог',\r\n      url: routes.catalog.url\r\n    }\r\n  },\r\n  catalog: {\r\n    title: 'Каталог',\r\n    descr: {\r\n      paragraph1: `У нас самый большой выбор цветов, букетов, открыток и подарков.\r\n      Мы всегда поможем вам подобрать букет для вашего события, наш менеджер вас проконсультирует и поможет определиться с выбором`,\r\n      paragraph2: `Ознакомьтесь с нашими разделами каталога`\r\n    },\r\n    cards: {\r\n      flowers: {\r\n        title: 'Цветы',\r\n        categories: ['Сборные букеты', 'Монобукеты', 'Композиции из цветов', 'розы', 'свадебные'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.mono],\r\n            CATEGORY_PARAMS[EnumCategories.roses],\r\n            CATEGORY_PARAMS[EnumCategories.wedding],\r\n            CATEGORY_PARAMS[EnumCategories.prefabricated]\r\n          ]\r\n        }\r\n      },\r\n      readyBouquets: {\r\n        title: 'готовые букеты из сухоцветов',\r\n        categories: ['букеты', 'для интерьера', 'композиции'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.roses],\r\n            CATEGORY_PARAMS[EnumCategories.driedFlowers],\r\n            CATEGORY_PARAMS[EnumCategories.chrysanthemum],\r\n            CATEGORY_PARAMS[EnumCategories.holiday],\r\n            CATEGORY_PARAMS[EnumCategories.interior],\r\n            CATEGORY_PARAMS[EnumCategories.gypsophila],\r\n            CATEGORY_PARAMS[EnumCategories.chamomile],\r\n            CATEGORY_PARAMS[EnumCategories.compositions]\r\n          ]\r\n        }\r\n      },\r\n      additionally: {\r\n        title: 'Дополнительно',\r\n        categories: ['Шары', 'игрушки', 'открытки', 'упаковка'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.additionally],\r\n            CATEGORY_PARAMS[EnumCategories.balloon],\r\n            CATEGORY_PARAMS[EnumCategories.packaging],\r\n            CATEGORY_PARAMS[EnumCategories.postcards]\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  popularBouquets: {\r\n    title: 'Популярные букеты',\r\n    descr: 'Самые любимые композиции наших клиентов',\r\n    link: {\r\n      title: 'Смотреть весь каталог',\r\n      url: routes.catalog.url\r\n    }\r\n  },\r\n  howToOrder: {\r\n    title: 'Как сделать заказ',\r\n    list: [\r\n      {\r\n        title: '1 шаг',\r\n        descr: 'Выберите какие цветы или подарки вы хотите купить'\r\n      },\r\n      {\r\n        title: '2 шаг',\r\n        descr:\r\n          'Оформите заказ, и мы отправим вам подтверждение на электронную почту, а так же менеджер свяжется с вами по телефону или в WhatsApp'\r\n      },\r\n      {\r\n        title: '3 шаг',\r\n        descr:\r\n          'Наши флористы бережно подойдут к созданию букета цветов в самом начале дня или накануне'\r\n      },\r\n      {\r\n        title: '4 шаг',\r\n        descr:\r\n          'Один из наших курьеров или партнёров доставит ваш заказ по указанному адресу. Мы отправим вам сообщение в Whats App как только заказ будет доставлен'\r\n      },\r\n      {\r\n        title: '5 шаг',\r\n        descr:\r\n          'Наслаждайтесь цветами , если вы заказали их для дома или любовью, которой поделились, если вы заказали для друга'\r\n      }\r\n    ]\r\n  },\r\n  specialOccasion: {\r\n    title: 'особенный повод?',\r\n    descr:\r\n      'Мы готовы прийти на помощь и собрать уникальный букет, на любой вкус, бюджет и для любого события по вашему индивидуальному заказу.',\r\n    list: [\r\n      'учтем даже самые изысканные пожелания',\r\n      'подберем свежайшие цветы и сделаем уникальный букет или композицию',\r\n      'оплатить можно при получении или онлайн на сайте'\r\n    ],\r\n    link: 'собрать индивидуальный букет'\r\n  },\r\n  questions: {\r\n    title: 'остались вопросы?',\r\n    descr:\r\n      'Отправьте ваш вопрос, заказ, предложение или жалобу через форму обратной связи, и наш специалист свяжется с вами в течение 15 минут.',\r\n    fields: {\r\n      name: 'Ваше имя',\r\n      phone: '+7(977)777-77-77',\r\n      comment: 'Ваш комментарий'\r\n    },\r\n    btn: 'отправить',\r\n    confidentiality: {\r\n      text: 'Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии с',\r\n      link: 'Политикой конфиденциальности'\r\n    },\r\n    social: contacts.social\r\n  },\r\n  social: {\r\n    title: 'Наши социальные сети',\r\n    contacts\r\n  }\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/not-found/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: {\r\n    part: '4',\r\n    part2: '0',\r\n    part3: '4',\r\n  },\r\n  text: 'ошибка 404',\r\n  text2: 'Упс...такой страницы нет',\r\n  link: 'на главную',\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  breadcrumbs,\r\n  title,\r\n  subtitle: 'Оформление заказа',\r\n  formTitle: 'Контактные данные',\r\n  fields: {\r\n    name: {\r\n      title: 'Ваше имя',\r\n      descr: 'Введите ваше имя'\r\n    },\r\n    phone: {\r\n      title: 'Ваш телефон',\r\n      descr: '+7 (977) 777-77-77'\r\n    },\r\n    email: {\r\n      title: 'Ваш e-mail',\r\n      descr: 'Введите вашу почту'\r\n    },\r\n    recipientPhone: {\r\n      title: 'Телефон получателя (необязательно)',\r\n      descr: '+7 (977) 777-77-77'\r\n    },\r\n    recipientName: {\r\n      title: 'Имя получателя (необязательно)',\r\n      descr: 'Введите имя получателя'\r\n    },\r\n    comment: {\r\n      title: 'Комментарий к заказу',\r\n      descr: 'Примечания к вашеу заказу,  особые пожелания отделу доставки'\r\n    },\r\n    delivery: {\r\n      title: 'Доставка',\r\n      courier: 'Доставка курьером',\r\n      self: 'Самовывоз'\r\n    },\r\n    street: {\r\n      title: 'Улица',\r\n      descr: 'Введите улицу'\r\n    },\r\n    building: {\r\n      title: 'Корп/стр (необязательно)',\r\n      descr: 'Корп/стр'\r\n    },\r\n    house: {\r\n      title: 'Дом',\r\n      descr: 'Дом'\r\n    },\r\n    apartment: {\r\n      title: 'Кв/офис (необязательно)',\r\n      descr: 'Кв/офис'\r\n    },\r\n    deliveryTime: {\r\n      title: 'Время доставки',\r\n      descr: 'Время доставки',\r\n      shippingCost: 'Стоимость доставки'\r\n    },\r\n    payment: {\r\n      title: 'Оплата',\r\n      list: [\r\n        'банковская карта',\r\n        'Наличными',\r\n        'Apple pay',\r\n        'google pay',\r\n        'Криптовалюта',\r\n        'С расчетного счета'\r\n      ]\r\n    },\r\n    promo: {\r\n      title: 'Промокод',\r\n      descr: 'Промокод',\r\n      btn: 'Применить'\r\n    },\r\n    totalAmount: {\r\n      title: 'Общая сумма заказа',\r\n      discount: 'Скидка',\r\n      delivery: 'Доставка'\r\n    },\r\n    btn: 'К оплате',\r\n    text: {\r\n      part1:\r\n        'Нажимая  на кнопку «К Оплате», я даю свое согласие на обработку персональных данных, в соответствии с',\r\n      part2: 'Политикой конфиденциальности',\r\n      part3: ', а так же ознакомлен с условиями оплаты и доставки'\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order-successful/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: {\r\n    part: 'Заказ',\r\n    part2: 'успешно',\r\n    part3: 'оформлен!'\r\n  },\r\n  textOrderNumber: 'Ваш номер заказа –',\r\n  text: 'Спасибо за заказ!',\r\n  text2: 'Скоро с вами свяжется наш специалист.',\r\n  link: 'На главную'\r\n}"
            },
            {
                "name": "pageData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  composition: 'Состав:',\r\n  categories: 'Категории:',\r\n  tags: 'Метки:',\r\n  toCartBtn: 'В корзину',\r\n  section: {\r\n    additionally: {\r\n      title: 'Дополнительно к заказу:',\r\n      list: [\r\n        {\r\n          title: 'Удобрения для срезанных цветов',\r\n          text: `При указании об этом в пожеланиях к букету, мы приложим пакетик\r\n          удобрения для вас`\r\n        },\r\n        {\r\n          title: 'подпишем открытку',\r\n          text: `В пожеланиях к букету укажите текст, какой хотите разместить и\r\n          выберите на сайте саму открытку`\r\n        },\r\n        {\r\n          title: 'Фото букета перед отправкой',\r\n          text: `В примечании к заказу укажите об этом и мы отправим фото готового\r\n          букета перед доставкой. В праздничные дни в связи с большой\r\n          загруженностью такой возможности нет`\r\n        },\r\n        {\r\n          title: 'Букет-сюрприз',\r\n          text: `Если хотите, чтобы получатель не знал, что ему вручат а также от\r\n          кого, то укажите об этом в примечании к заказу`\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "pages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/CEO.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  main: {\r\n    title: `Главная страница ${TITLE}`\r\n  },\r\n  catalog: {\r\n    title: `Каталог ${TITLE}`\r\n  },\r\n  product: {\r\n    title: `Страница товара ${TITLE}`\r\n  },\r\n  searching: {\r\n    title: `Поиск товаров ${TITLE}`\r\n  },\r\n  faq: {\r\n    title: `FAQ ${TITLE}`\r\n  },\r\n  deliveryPayment: {\r\n    title: `Доставка и оплата ${TITLE}`\r\n  },\r\n  aboutUs: {\r\n    title: `О нас ${TITLE}`\r\n  },\r\n  corporateClients: {\r\n    title: `Корпоративным клиентам ${TITLE}`\r\n  },\r\n  contacts: {\r\n    title: `Контакты ${TITLE}`\r\n  },\r\n  notFound: {\r\n    title: `Страница не найдена ${TITLE}`\r\n  },\r\n  order: {\r\n    title: `Оформление заказа ${TITLE}`\r\n  },\r\n  orderSuccess: {\r\n    title: `Заказ оформлен ${TITLE}`\r\n  }\r\n}"
            },
            {
                "name": "postAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Post`, props<{ data: INewReview }>())"
            },
            {
                "name": "postChangeCountAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Change Count`,\r\n  props<ChangeCountRequestPayload>()\r\n)"
            },
            {
                "name": "postChangeCountErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  Change Count Error`,\r\n  props<ErrorPayload>()\r\n)"
            },
            {
                "name": "postChangeCountSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY}  Change Count Success`,\r\n  props<ChangeCountResponsePayload>()\r\n)"
            },
            {
                "name": "postErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Post Error`,\r\n  props<{ error: ErrorPayload['error'] }>()\r\n)"
            },
            {
                "name": "postProductAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Post Product`,\r\n  props<PostToCartRequestPayload>()\r\n)"
            },
            {
                "name": "postProductErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Post Product Error`,\r\n  props<ErrorPayload>()\r\n)"
            },
            {
                "name": "postProductSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Post Product Success`,\r\n  props<PostToCartResponsePayload>()\r\n)"
            },
            {
                "name": "postSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Post Success`)"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    },\n    backgrounds: {\n      default: 'main',\n      values: [\n        {\n          name: 'main',\n          value: '#222222'\n        }\n      ]\n    },\n    docs: {\n      page: DocumentationTemplate\n    }\n  },\n  decorators: [\n    moduleMetadata({\n      providers: [\n        {\n          provide: LOCALE_ID,\n          useValue: 'ru'\n        }\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "Price",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Price.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    price: {\n      value: 1500,\n      discount: 0\n    }\n  }\n}"
            },
            {
                "name": "PRICE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumPrice.price]: 'цена'\r\n}"
            },
            {
                "name": "PriceWithDiscount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Price.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    price: {\n      value: 1500,\n      discount: 500\n    }\n  }\n}"
            },
            {
                "name": "PRODUCT_FEATURE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<const>{\r\n  [EnumProductFeature.price]: 'стоимость',\r\n  [EnumProductFeature.light]: 'по свету',\r\n  [EnumProductFeature.color]: 'по цвету',\r\n  [EnumProductFeature.format]: 'по формату',\r\n  [EnumProductFeature.flower]: 'по цветку'\r\n}"
            },
            {
                "name": "PRODUCT_STORE_TRANSFER_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "makeStateKey<IState>('productStoreTransferKey')"
            },
            {
                "name": "productCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/product-card/data/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  btn: 'В корзину'\r\n}"
            },
            {
                "name": "ProductCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: false, price: { discount: 0, value: 1000 } })\n  }\n}"
            },
            {
                "name": "ProductCardNew",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: true, price: { discount: 0, value: 1000 } })\n  }\n}"
            },
            {
                "name": "ProductCardWithDiscount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: false, price: { discount: 100, value: 1000 } })\n  }\n}"
            },
            {
                "name": "productErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.error\r\n)"
            },
            {
                "name": "productIsHydrateSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<\r\n  IRootState,\r\n  IState,\r\n  IState['isHydrateSuccess']\r\n>(productStoreSelector, (store: IState) => store.isHydrateSuccess)"
            },
            {
                "name": "ProductItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1 }),\n    count: 3\n  },\n  argTypes: {\n    count: {\n      control: { type: 'number', min: 1 }\n    }\n  }\n}"
            },
            {
                "name": "productLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.isLoading\r\n)"
            },
            {
                "name": "productReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (store, action) => ({\r\n    ...store,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(hydrateErrorAction, (store) => ({\r\n    ...store\r\n  })),\r\n  on(requestAction, (store) => ({\r\n    ...store,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    product: payload.product\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n)"
            },
            {
                "name": "productResolver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/product.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResolveFn<>",
                "defaultValue": "(route: ActivatedRouteSnapshot) => {\r\n  const productContainerService = inject(ProductContainerService);\r\n  const productId = Number(route.paramMap.get('id'));\r\n\r\n  productContainerService.requestProduct(productId);\r\n\r\n  return of(productId);\r\n}"
            },
            {
                "name": "products",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/fakeBackendData/products.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IProduct[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 995,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Соблазн',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'pink',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 750,\r\n      discount: 80\r\n    },\r\n    categories: ['chamomile', 'envelope', 'popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Розовая симфония',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance'],\r\n    light: 'bright',\r\n    format: 'vase',\r\n    price: {\r\n      value: 870,\r\n      discount: 50\r\n    },\r\n    categories: ['funeral'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Бал цветов',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'white',\r\n    flowers: ['asparagus'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 504,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Улыбка Фортуны',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'green',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'basket',\r\n    price: {\r\n      value: 420,\r\n      discount: 0\r\n    },\r\n    categories: ['gifts'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Цветочный вальс',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'red',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 654,\r\n      discount: 321\r\n    },\r\n    categories: ['chamomile'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Альпийское сияние',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'box',\r\n    price: {\r\n      value: 756,\r\n      discount: 77\r\n    },\r\n    categories: ['holiday'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Вопреки канонам',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'yellow',\r\n    flowers: ['anthurium', 'asparagus'],\r\n    light: 'bright',\r\n    format: 'vase',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['compositions'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Цветочный микрокосмос',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['indoor'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Огненная радуга',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'basket',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Парижский шик',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['packaging'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'pink',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['interior'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'vase',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 16,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'green',\r\n    flowers: ['asparagus'],\r\n    light: 'bright',\r\n    format: 'hatbox',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 17,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 18,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 19,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 750,\r\n      discount: 40\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 20,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 500,\r\n      discount: 0\r\n    },\r\n    categories: ['balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 21,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 22,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 700,\r\n      discount: 45\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 23,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 24,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 25,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'white',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 810,\r\n      discount: 30\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 26,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'yellow',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 340,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally', 'balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 27,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'anthurium'],\r\n    light: 'bright',\r\n    format: 'basket',\r\n    price: {\r\n      value: 470,\r\n      discount: 30\r\n    },\r\n    categories: ['additionally', 'envelope'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  }\r\n]"
            },
            {
                "name": "PRODUCTS_STORE_TRANSFER_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "makeStateKey<IState>('productsStoreTransferKey')"
            },
            {
                "name": "productsAllSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['products']>(\r\n  productsSelector,\r\n  (state: IState) => state.products\r\n)"
            },
            {
                "name": "productSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['product']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.product\r\n)"
            },
            {
                "name": "productsErrorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  productsSelector,\r\n  (state: IState) => state.error\r\n)"
            },
            {
                "name": "productsIsHydrateSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<\r\n  IRootState,\r\n  IState,\r\n  IState['isHydrateSuccess']\r\n>(productsSelector, (state: IState) => state.isHydrateSuccess)"
            },
            {
                "name": "productsLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  productsSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "productsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (state, action) => ({\r\n    ...state,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    products: payload.products\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n)"
            },
            {
                "name": "productsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('products')"
            },
            {
                "name": "ProductsSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductsSlider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    products: [\n      getMockProduct({ id: 1 }),\n      getMockProduct({ id: 2 }),\n      getMockProduct({ id: 3 }),\n      getMockProduct({ id: 4 }),\n      getMockProduct({ id: 5 })\n    ]\n  }\n}"
            },
            {
                "name": "ProductsSliderLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductsSlider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    products: [],\n    isLoading: true\n  }\n}"
            },
            {
                "name": "productStoreSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('product')"
            },
            {
                "name": "PROMOCODE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/promocode/promocode.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  'SALE-10': 100,\n  'SALE-20': 200,\n  SALE: 50\n}"
            },
            {
                "name": "PromocodeField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PromocodeField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadioButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelValue: 'Самовывоз',\n    attrName: 'delivery',\n    attrValue: 'pickup'\n  }\n}"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    min: 0,\n    max: 1000,\n    value: { from: 0, to: 1000 },\n    gap: 50\n  }\n}"
            },
            {
                "name": "Rating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "removeAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Remove`, props<{ id: INotifyWithId['id'] }>())"
            },
            {
                "name": "removeAllAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/notifications/notifications.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Remove All`)"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`)"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`, props<ICorporateUser>())"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`, props<FeedbackRequestPayload>())"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`, props<IOrderData>())"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`)"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`, props<{ id: IProduct['id'] }>())"
            },
            {
                "name": "requestAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request`, props<{ id: IProduct['id'] }>())"
            },
            {
                "name": "requestCancelAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Cancel`)"
            },
            {
                "name": "requestCancelAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Cancel`)"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request error`,\r\n  props<{ error: ErrorPayload['error'] }>()\r\n)"
            },
            {
                "name": "requestErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
            },
            {
                "name": "requestLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  requestSelector,\r\n  (state: IState) => state.isLoading\r\n)"
            },
            {
                "name": "requestSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IState>('corporate')"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/cart/cart.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<CartResponsePayload>()\r\n)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/corporate/corporate.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Success`)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/feedback/feedback.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} Request Success`)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/order/order.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<OrderResponsePayload>()\r\n)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/products/products.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<{ products: Array<IProduct> }>()\r\n)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/comments/comments.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request success`,\r\n  props<{ comments: IReview[] }>()\r\n)"
            },
            {
                "name": "requestSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/product/store/product/product.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<{ product: IProduct }>()\r\n)"
            },
            {
                "name": "requisites",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/page-components/shared/footer/data/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'реквизиты',\r\n  descr:\r\n    'ООО «Ловефлове» 220035, Республика Беларусь, г. Минск, ул. Тимирязева д. 67, комн. 112 (пом.11) УНП 193263781, р/с BY55MTBK30120001093300096372 ЗАО «МТБанк», БИК MTBKBY22 220007, г. Минск, улица Толстого'\r\n}"
            },
            {
                "name": "Review",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Review.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    author: 'John Doe',\n    comment: 'Cool!',\n    rating: 5,\n    createdAt: new Date()\n  }\n}"
            },
            {
                "name": "ReviewForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ReviewForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "ReviewList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ReviewList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    reviews: [\n      {\n        author: `John Doe`,\n        comment: 'Cool!',\n        rating: 5,\n        createdAt: new Date()\n      },\n      {\n        author: `john's friend`,\n        comment: 'John is right',\n        rating: 4,\n        createdAt: new Date()\n      },\n      {\n        author: `Alexander N.`,\n        comment: 'Absolutly!',\n        rating: 3,\n        createdAt: new Date()\n      }\n    ]\n  }\n}"
            },
            {
                "name": "rootReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/root.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<IRootState>",
                "defaultValue": "{\r\n  [productsStore.FEATURE_KEY]: productsStore.productsReducer,\r\n  [cartStore.FEATURE_KEY]: cartStore.cartReducer,\r\n  [productStore.FEATURE_KEY]: productStore.productReducer,\r\n  [commentsStore.FEATURE_KEY]: commentsStore.commentsReducer,\r\n  [feedbackStore.FEATURE_KEY]: feedbackStore.feedbackReducer,\r\n  [orderStore.FEATURE_KEY]: orderStore.orderReducer,\r\n  [corporateStore.FEATURE_KEY]: corporateStore.corporateReducer,\r\n  [notificationsStore.FEATURE_KEY]: notificationsStore.notificationsReducer\r\n}"
            },
            {
                "name": "routerConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ExtraOptions",
                "defaultValue": "{\r\n  anchorScrolling: 'enabled',\r\n  initialNavigation: 'enabledBlocking'\r\n}"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/data/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  catalog: {\r\n    title: 'Каталог',\r\n    url: '/catalog'\r\n  },\r\n  delivery: {\r\n    title: 'Доставка и оплата',\r\n    url: '/delivery-payment'\r\n  },\r\n  about: {\r\n    title: 'О нас',\r\n    url: '/about-us'\r\n  },\r\n  contacts: {\r\n    title: 'Контакты',\r\n    url: '/contacts'\r\n  },\r\n  faq: {\r\n    title: 'FAQ',\r\n    url: '/faq'\r\n  }\r\n}"
            },
            {
                "name": "SearchForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "SortingDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Sorting.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: OPTIONS\n  },\n  argTypes: {\n    options: {\n      description: `{\n        categoryTitle: string;\n        title: string;\n        sort: 'sort' | 'desc';\n        targetSort: string;\n      }`\n    },\n    defaultTitle: {\n      control: {\n        type: 'text'\n      }\n    },\n    activeOptionIndex: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: OPTIONS.length - 1\n      }\n    }\n  }\n}"
            },
            {
                "name": "SortingWithActiveOption",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Sorting.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: OPTIONS,\n    activeOptionIndex: 0\n  },\n  argTypes: {\n    options: {\n      description: `{\n        categoryTitle: string;\n        title: string;\n        sort: 'sort' | 'desc';\n        targetSort: string;\n      }`\n    },\n    defaultTitle: {\n      control: {\n        type: 'text'\n      }\n    },\n    activeOptionIndex: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: OPTIONS.length - 1\n      }\n    }\n  }\n}"
            },
            {
                "name": "startedAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ENTITY} started`)"
            },
            {
                "name": "title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/about-us/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'О нас'"
            },
            {
                "name": "title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/catalog/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Каталог букетов'"
            },
            {
                "name": "title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/delivery-payment/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Доставка и оплата'"
            },
            {
                "name": "title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/main/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'lover flower'"
            },
            {
                "name": "title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/order/data/pageData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'оформление заказа'"
            },
            {
                "name": "TITLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/CEO.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "' - букеты с доставкой - Lover Flower'"
            },
            {
                "name": "UiButtonDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: ''\r\n  }\r\n}"
            },
            {
                "name": "UiButtonVariant1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '1'\r\n  }\r\n}"
            },
            {
                "name": "UiButtonVariant2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '2'\r\n  }\r\n}"
            },
            {
                "name": "UiButtonVariant3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '3'\r\n  }\r\n}"
            },
            {
                "name": "UiButtonVariant4",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '4'\r\n  }\r\n}"
            },
            {
                "name": "WINDOW_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tokens/window.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('Window')"
            },
            {
                "name": "windowServer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/server/browser-api/window.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  scrollTo: () => null,\r\n  target: {\r\n    innerWidth: 0,\r\n    innerHeight: 0\r\n  },\r\n  localStorage: {\r\n    getItem: () => null,\r\n    setItem: () => null\r\n  },\r\n  innerWidth: 0,\r\n  innerHeight: 0,\r\n  resize: null,\r\n  addEventListener: (currentTarget: HTMLElement, event: keyof GlobalEventHandlersEventMap) => ({\r\n    type: event,\r\n    currentTarget\r\n  })\r\n}"
            }
        ],
        "functions": [
            {
                "name": "deepClone",
                "file": "src/utils/deepClone.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "target",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T",
                "jsdoctags": [
                    {
                        "name": "target",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "empty",
                "file": "src/app/validators/empty.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isArray",
                "file": "src/types/guards.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Array<>",
                "jsdoctags": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isFormGroup",
                "file": "src/types/guards.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "FormGroup",
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isNonNull",
                "file": "src/types/guards.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "NonNullable<T>",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isObject",
                "file": "src/types/guards.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Record<string | >",
                "jsdoctags": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isObject",
                "file": "src/utils/deepClone.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type",
                "jsdoctags": [
                    {
                        "name": "arg",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "PassQueryParams",
                "file": "src/app/decorators/pass-query-params.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "getRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "getRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "time",
                "file": "src/app/validators/time.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Action",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"hidden\" | \"visible\"",
                "file": "src/app/directives/visibility-by-scroll/visibility-by-scroll.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AtLeastOne",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "AttributeName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/checkbox/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "AttributeValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/checkbox/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Cart",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ICartItem[]",
                "file": "src/app/services/cart-storage/cart-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 182
            },
            {
                "name": "CartResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Categories",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "CategoriesName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "CategoriesParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "CategoryTitle",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/sorting/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "ChangeCountRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChangeCountResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "CheckboxControlData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean | null",
                "file": "src/app/components/filters-form/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "CheckboxState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/components/checkbox/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "ClearCartResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ColorName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ColorParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "CommentRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "INewReview",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ContentPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"center\"",
                "file": "src/app/components/dropdown/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "CorporateClientsRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ICorporateUser",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Count",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number",
                "file": "src/app/components/cart-button/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 146
            },
            {
                "name": "CountVisibleSlides",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"4\" | \"3\"",
                "file": "src/app/components/products-slider/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "DataIndex",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/category-filter/category-filter.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "DeleteFromCartRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "DeleteFromCartResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "EmitRating",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "NonNullable<Rating | RatingNotSet>",
                "file": "src/app/components/rating/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ErrorPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "FeedbackRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IFeedbackData",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Flower",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FlowerName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "FlowerParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "Format",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FormatName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "FormatParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "Height",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/icon/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 195
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"arrow-curve\" | \"arrow-right\" | \"cart\" | \"handset\" | \"instagram\" | \"logo\" | \"phone\" | \"search\" | \"whatsapp\" | \"flower\"",
                "file": "src/app/components/icon/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IsCloseBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"mouseleave\" | null",
                "file": "src/app/components/dropdown/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IsNew",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean | null",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IsOpen",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/components/accordion/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "KeydownKey",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/services/events/keydown/keydown-event.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "LabelValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/checkbox/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "LightName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "LightParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "NotifyType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"error\" | \"warn\" | \"success\"",
                "file": "src/app/components/notify/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ObjectExceptRange",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Omit<ICheckboxesGroupData | RangeTarget>",
                "file": "src/app/services/params/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "OnChangeCallback",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/types/controlValueAccessor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OnTouchedCallback",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/types/controlValueAccessor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OrderRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IOrderData",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "OrderResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Payment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"card\" | \"cash\" | \"applePay\" | \"googlePay\" | \"cryptoCurrency\" | \"checkingAccount\"",
                "file": "src/app/pages/order/component/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "PositionMenu",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "src/app/components/sidebar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "PostToCartRequestPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ICartItem",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "PostToCartResponsePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Price",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "PriceName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ProductCardData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Pick<IProduct | \"id\" | \"title\" | \"images\" | \"price\" | \"isNew\">",
                "file": "src/app/components/product-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ProductFeature",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ProductFeatureName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ProductImage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "ProductImages",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ProductImage[]",
                "file": "src/app/pages/product/component/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 182
            },
            {
                "name": "ProductRating",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Rating | RatingNotSet",
                "file": "src/types/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "RadioOnChangeCallback",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "OnChangeCallback<string>",
                "file": "src/app/components/radio-button/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "RangeCallbackOnChange",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "OnChangeCallback<IRangeValue>",
                "file": "src/app/components/range/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "RangeTarget",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"from\" | \"to\"",
                "file": "src/app/components/range/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Rating",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number",
                "file": "src/app/components/rating/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 146
            },
            {
                "name": "RatingNotSet",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/rating/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 195
            },
            {
                "name": "SearchValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/search-form/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "Sort",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"asc\" | \"desc\"",
                "file": "src/app/components/sorting/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AccordionComponent>",
                "file": "src/stories/Accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "src/stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BreadcrumbsComponent>",
                "file": "src/stories/Breadcrumbs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BurgerMenuComponent>",
                "file": "src/stories/BurgerMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CartButtonComponent>",
                "file": "src/stories/CartButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CartMenuComponent>",
                "file": "src/stories/CartMenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategoryFilterComponent>",
                "file": "src/stories/CategoryFilter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "src/stories/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CounterComponent>",
                "file": "src/stories/Counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ErrorBlockComponent>",
                "file": "src/stories/ErrorBlock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FeedbackFormComponent>",
                "file": "src/stories/FeedbackForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "src/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoaderComponent>",
                "file": "src/stories/Loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationsComponent>",
                "file": "src/stories/Notifications.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotifyComponent>",
                "file": "src/stories/Notify.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PriceComponent>",
                "file": "src/stories/Price.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductCardComponent>",
                "file": "src/stories/ProductCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductItemComponent>",
                "file": "src/stories/ProductItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductsSliderComponent>",
                "file": "src/stories/ProductsSlider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PromocodeFieldComponent>",
                "file": "src/stories/PromocodeField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonComponent>",
                "file": "src/stories/RadioButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RangeComponent>",
                "file": "src/stories/Range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RatingComponent>",
                "file": "src/stories/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ReviewComponent>",
                "file": "src/stories/Review.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ReviewFormComponent>",
                "file": "src/stories/ReviewForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ReviewListComponent>",
                "file": "src/stories/ReviewList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchFormComponent>",
                "file": "src/stories/SearchForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SortingComponent<TargetSort>>",
                "file": "src/stories/Sorting.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UiButtonDirective>",
                "file": "src/stories/directives/UiButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "SuccessPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/types/apiPayloads.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "TabActive",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/components/tab/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TabLink",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/tab/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "TabTitle",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/tab/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "TargetSort",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"price\" | \"rating\"",
                "file": "src/app/containers/sorting-container/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TargetVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"background\" | \"img\"",
                "file": "src/app/directives/parallax/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TCheckboxesData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Light[] | Color[] | Format[] | Flower[]",
                "file": "src/app/components/filters-form/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TCount",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number",
                "file": "src/app/store/cart/cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 146
            },
            {
                "name": "TIsCartLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/cart/cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TIsLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/corporate/corporate.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TIsLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/feedback/feedback.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TIsLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/notifications/notifications.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TIsLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/order/order.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "TIsLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "boolean",
                "file": "src/app/store/products/products.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 133
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/components/sorting/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "TOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"vertical\" | \"horizontal\"",
                "file": "src/app/components/slider/slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Trigger",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"click\" | \"hover\"",
                "file": "src/app/components/dropdown/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UiEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "MouseEvent | PointerEvent",
                "file": "src/app/components/dropdown/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Width",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/icon/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 195
            }
        ],
        "enumerations": [
            {
                "name": "EnumCategories",
                "childs": [
                    {
                        "name": "gypsophila",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chamomile",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chrysanthemum",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "indoor",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mono",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "prefabricated",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "holiday",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "compositions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "envelope",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "postcards",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gifts",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "driedFlowers",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "balloon",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "popular",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "roses",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "funeral",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "packaging",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wedding",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "interior",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "autumn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "individual",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "additionally",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumColor",
                "childs": [
                    {
                        "name": "white",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "yellow",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "green",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "red",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orange",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pink",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumFlower",
                "childs": [
                    {
                        "name": "alstroemeria",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "anthurium",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "asparagus",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "astilba",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "astrance",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumFormat",
                "childs": [
                    {
                        "name": "bouquet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "envelope",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "basket",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "hatbox",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "box",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumLight",
                "childs": [
                    {
                        "name": "gentle",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "bright",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumPrice",
                "childs": [
                    {
                        "name": "price",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            },
            {
                "name": "EnumProductFeature",
                "childs": [
                    {
                        "name": "price",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "light",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "color",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "format",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flower",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/product.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/Accordion.stories.ts": [
                {
                    "name": "Accordion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: { ...args },\r\n    template: `<app-accordion style=\"width: 300px\">\r\n      <button slot=\"button\" style=\"width: 100%\">Button</button>\r\n      <ng-template #bodyContent>\r\n        <div style=\"padding: 10px; background-color: #444444;\">Text content.</div>\r\n      </ng-template>\r\n    </app-accordion>`\r\n  }),\r\n  args: {}\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AccordionComponent>",
                    "defaultValue": "{\r\n  component: AccordionComponent,\r\n  title: 'Components/Accordion',\r\n  parameters: {\r\n    layout: 'centered'\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, AccordionModule, BrowserAnimationsModule]\r\n    })\r\n  ]\r\n}"
                }
            ],
            "src/app/store/notifications/notifications.actions.ts": [
                {
                    "name": "addAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Add`, props<{ notify: INotifyWithId }>())"
                },
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Notifications]'"
                },
                {
                    "name": "removeAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Remove`, props<{ id: INotifyWithId['id'] }>())"
                },
                {
                    "name": "removeAllAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Remove All`)"
                }
            ],
            "src/data/address.ts": [
                {
                    "name": "address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  street: 'Тимирязева 67',\r\n  workTime: '10:00 до 21:00',\r\n  weekends: 'Без выходных',\r\n}"
                }
            ],
            "src/stories/Badge.stories.ts": [
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    text: 'sale',\n    bgColor: 'green'\n  },\n  argTypes: {\n    text: {\n      control: {\n        type: 'text'\n      }\n    },\n    bgColor: {\n      control: {\n        type: 'radio',\n        options: ['green', 'pink', null]\n      }\n    }\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, BadgeModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/pages/about-us/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/about-us/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: title,\r\n  },\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/about-us/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: title,\r\n  breadcrumbs,\r\n  section: {\r\n    loverFlower: {\r\n      title: 'Lover flower',\r\n      text: 'молодая команда разных людей с одинаковыми ценностями.',\r\n      text2: `Мы считаем, что удовольствие от качества длится дольше, чем\r\n      удовольствие от низкой цены. И поэтому в создание нашей букетерии мы\r\n      вложили все, чем располагаем: душу, сердце, время и мечты! Мы готовы\r\n      обещать вам только то, что можем сделать. А делаем мы только самое\r\n      качественное, самое интересное и обязательно уникальное. Мы всегда\r\n      честны со своими клиентами во всем – в нашем каталоге только те\r\n      букеты, которые вы действительно сможете купить.`,\r\n    },\r\n    guarantees: {\r\n      title: 'Гарантии',\r\n      text: `Каждый цветок уникален и чтобы вы были уверены в качестве, мы пришлем\r\n      вам фотографию именно вашего букета до его отправки получателю. Вся\r\n      предоставленная Вами информация конфиденциальна и будет известна\r\n      только нам и курьеру для осуществления доставки.`,\r\n    },\r\n    services: {\r\n      title: 'Заказ букетов на сайте компании Lower Flower – это:',\r\n      list: [\r\n        'выбор оттенков и сортов цветков в любое время года;',\r\n        'отправка фото готовой композиции перед отправкой;',\r\n        'возможность заказать цветы с доставкой в течение часа;',\r\n        'выгодные цены – на сайте только те варианты, что Вы сможете купить;',\r\n        'полная конфиденциальность по заказу;',\r\n        'мы подбираем открытку, воздушные шар, подарок по Вашему желанию;',\r\n        'в нашем уютном цветочном магазине цветы, которые приятно дарить.',\r\n      ],\r\n    },\r\n    aboutUs: {\r\n      text: `Природная гармония цвета, неповторимость бутонов и Ваши чувства в нежных\r\n      лепестках не оставят никого равнодушным.`,\r\n      text2: `Вы выбираете и заказываете цветочный сюрприз, а мы вкладываем в него\r\n      душу!`,\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/about-us/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'О нас'"
                }
            ],
            "src/app/pages/catalog/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/catalog/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: 'Контакты',\r\n  },\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/catalog/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: title,\r\n  breadcrumbs,\r\n}"
                },
                {
                    "name": "title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/catalog/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Каталог букетов'"
                }
            ],
            "src/app/pages/contacts/data/data.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/contacts/data/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Контакты'\r\n  }\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/contacts/data/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'контакты',\r\n  breadcrumbs,\r\n  contactsSection: {\r\n    time: {\r\n      title: 'Время работы',\r\n      descr: `${address.workTime} ${address.weekends}`\r\n    },\r\n    address: {\r\n      title: 'Адрес',\r\n      descr: address.street\r\n    },\r\n    phone: {\r\n      title: 'Телефон',\r\n      descr: contacts.phone\r\n    },\r\n    email: {\r\n      title: 'E-mail',\r\n      descr: contacts.email\r\n    }\r\n  },\r\n  feedback: {\r\n    title: {\r\n      part1: 'Напишите',\r\n      part2: 'Нам'\r\n    }\r\n  },\r\n  map: {\r\n    title: 'Мы на карте'\r\n  }\r\n}"
                }
            ],
            "src/app/pages/corporate-clients/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/corporate-clients/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Корпоративным клиентам'\r\n  }\r\n]"
                }
            ],
            "src/app/pages/delivery-payment/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/delivery-payment/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: 'Доставка и оплата'\r\n  }\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/delivery-payment/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: {\r\n    part: 'доставка',\r\n    part2: 'и оплата'\r\n  },\r\n  breadcrumbs,\r\n  warning: {\r\n    title: 'Дорогие клиенты!',\r\n    text: covidMessage\r\n  },\r\n  section: {\r\n    payment: {\r\n      title: 'Способы оплаты:',\r\n      list: [\r\n        'БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ или по ссылке',\r\n        `НАЛИЧНЫМИ, БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ или с расчетного счета\r\n        орагнизации`,\r\n        `НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ`,\r\n        'КРИПТОВАЛЮТОЙ'\r\n      ]\r\n    },\r\n    deliveryCost: {\r\n      title: 'стоимость доставки:',\r\n      text: {\r\n        part: 'Бесплатно ',\r\n        part2: ' – при заказе на сумму',\r\n        part3: ' от 90 рублей'\r\n      },\r\n      text2: {\r\n        part: '10 рублей  ',\r\n        part2: ' – при заказе на сумму ',\r\n        part3: 'менее 90 рублей'\r\n      },\r\n      text3: {\r\n        part: 'Так же вы можете забрать ваш заказ самостоятельно по адресу:',\r\n        part2: 'г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до 21.00'\r\n      }\r\n    },\r\n    deliveryCondition: {\r\n      title: 'Условия доставки:',\r\n      text: {\r\n        part: 'Доставка осуществляется по городу Минску в пределах МКАД в',\r\n        part2: 'любой день'\r\n      },\r\n      text2: {\r\n        part: ` Возможность, сроки и стоимость доставки за пределы МКАД, доставки в\r\n        ночное время, праздники`,\r\n        part2: 'оговариваются с менеджером'\r\n      }\r\n    },\r\n    additionally: {\r\n      title: 'Дополнительно:',\r\n      text: `Доставка иному лицу возможна только в случае оплаты заказа заказчиком.\r\n      Доставка осуществляется не ранее чем через 2 часа после оплаты заказа,\r\n      но может быть ранее, если букет есть в наличии либо по договорённости\r\n      с менеджером. Время ожидания курьера составляет 15 минут. В случае\r\n      если на момент доставки цветов получателя нет либо нет возможности по\r\n      иным причинам произвести доставку (указан неточный адрес, закрытая\r\n      входная дверь, контрольно-пропускная система и др.), мы оставляем за\r\n      собой право по собственному выбору:`,\r\n      list: [\r\n        'оставить цветы тому, кто открыл дверь;',\r\n        `с заказчиком согласовать повторную доставку, которая дополнительно\r\n        оплачивается;`,\r\n        'отказаться от передачи цветов без возврата денежных средств.'\r\n      ],\r\n      text2: {\r\n        part: `Если вы либо иной получатель не получили заказ, вам необходимо\r\n        сообщить об этом менеджеру по телефону`,\r\n        part2: contacts.phone\r\n      }\r\n    },\r\n    repayment: {\r\n      title: 'Возврат срадств:',\r\n      text: `При отказе заказчика от заказа в течение двух часов, если заказ ещё не\r\n      начал готовиться, средства возвращаются в полном объёме. Если же\r\n      флорист начал подготовку, то заказчик имеет право на возврат 50%\r\n      стоимости, либо, если ещё не был оплачен, то обязан оплатить 50%.`,\r\n      text2: `Цветы надлежащего качества возврату и обмену не подлежат, а если\r\n      имеются какие-либо недостатки в цветах – возврат производится лишь\r\n      если эти недостатки не являются природными и естественными изъянами\r\n      растения. Возврат денежных средств производится незамедлительно на тот\r\n      счёт, с которого произошла оплата, их же поступление на счёт зависит\r\n      от платёжной системы.`\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/delivery-payment/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Доставка и оплата'"
                }
            ],
            "src/app/pages/faq/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/faq/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/',\r\n  },\r\n  {\r\n    title: 'FAQ',\r\n  },\r\n]"
                },
                {
                    "name": "faq",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/faq/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    question: `БУДЕТ ЛИ ЗАКАЗАННЫЙ БУКЕТ В ТОЧНОСТИ СООТВЕТСТВОВАТЬ ЕГО\r\n    ИЗОБРАЖЕНИЮ НА САЙТЕ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные. Либо если\r\n    флорист считает, что данные изменения не повлекут сильного\r\n    изменения в образе букета, то самостоятельно может заменить\r\n    некоторые цветы. И перед отправкой направляется фото заказчику,\r\n    который утверждает получившийся букет. Каждый цветок отличается\r\n    от другого, как и каждый букет будет индивидуальным, но в этом и\r\n    есть его прелесть… в индивидуальности.`,\r\n  },\r\n  {\r\n    question: `КАК ДОЛГО СТОЯТ БУКЕТЫ ИЗ СУХОЦВЕТОВ?`,\r\n    answer: `Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `ДЕЛАЕТЕ ЛИ ВЫ ФОТО ГОТОВОГО БУКЕТА ПЕРЕД ОТПРАВКОЙ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако возможны\r\n    случаи, когда нет необходимых цветов либо имеющиеся цветы\r\n    отличаются от представленных на фото, и с согласования заказчика\r\n    они могут быть заменены на аналогичные. Либо если флорист считает,\r\n    что данные изменения не повлекут сильного изменения в образе\r\n    букета, то самостоятельно может заменить некоторые цветы. И перед\r\n    отправкой направляется фото заказчику, который утверждает\r\n    получившийся букет. Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `ЕСТЬ ЛИ ДОСТАВКА ЗА ПРЕДЕЛЫ МКАД?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако возможны\r\n    случаи, когда нет необходимых цветов либо имеющиеся цветы\r\n    отличаются от представленных на фото, и с согласования заказчика\r\n    они могут быть заменены на аналогичные. Либо если флорист считает,\r\n    что данные изменения не повлекут сильного изменения в образе\r\n    букета, то самостоятельно может заменить некоторые цветы. И перед\r\n    отправкой направляется фото заказчику, который утверждает\r\n    получившийся букет. Каждый цветок отличается от другого, как и\r\n    каждый букет будет индивидуальным, но в этом и есть его прелесть…\r\n    в индивидуальности..`,\r\n  },\r\n  {\r\n    question: `КАК ОПРЕДЕЛИТЬ СВЕЖИЕ ЛИ ЦВЕТЫ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные.`,\r\n  },\r\n  {\r\n    question: `А СКОЛЬКО ДОЛЖНЫ ПРОСТОЯТЬ ЦВЕТЫ В БУКЕТЕ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные.`,\r\n  },\r\n  {\r\n    question: `ЧЕМ ОТЛИЧАЕТСЯ БЕЛОРУССКАЯ РОЗА ОТ ИМПОРТНОЙ?`,\r\n    answer: `Букет собирается по индивидуальной матрице букета. Однако\r\n    возможны случаи, когда нет необходимых цветов либо имеющиеся\r\n    цветы отличаются от представленных на фото, и с согласования\r\n    заказчика они могут быть заменены на аналогичные. Либо если\r\n    флорист считает, что данные изменения не повлекут сильного\r\n    изменения в образе букета, то самостоятельно может заменить\r\n    некоторые цветы. И перед отправкой направляется фото заказчику,\r\n    который утверждает получившийся букет. Каждый цветок отличается\r\n    от другого, как и каждый букет будет индивидуальным, но в этом и\r\n    есть его прелесть… в индивидуальности.`,\r\n  },\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/faq/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'FAQ',\r\n  breadcrumbs,\r\n  faq,\r\n}"
                }
            ],
            "src/app/pages/order/data/pageData.ts": [
                {
                    "name": "breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Главная',\r\n    url: '/'\r\n  },\r\n  {\r\n    title: title\r\n  }\r\n]"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  breadcrumbs,\r\n  title,\r\n  subtitle: 'Оформление заказа',\r\n  formTitle: 'Контактные данные',\r\n  fields: {\r\n    name: {\r\n      title: 'Ваше имя',\r\n      descr: 'Введите ваше имя'\r\n    },\r\n    phone: {\r\n      title: 'Ваш телефон',\r\n      descr: '+7 (977) 777-77-77'\r\n    },\r\n    email: {\r\n      title: 'Ваш e-mail',\r\n      descr: 'Введите вашу почту'\r\n    },\r\n    recipientPhone: {\r\n      title: 'Телефон получателя (необязательно)',\r\n      descr: '+7 (977) 777-77-77'\r\n    },\r\n    recipientName: {\r\n      title: 'Имя получателя (необязательно)',\r\n      descr: 'Введите имя получателя'\r\n    },\r\n    comment: {\r\n      title: 'Комментарий к заказу',\r\n      descr: 'Примечания к вашеу заказу,  особые пожелания отделу доставки'\r\n    },\r\n    delivery: {\r\n      title: 'Доставка',\r\n      courier: 'Доставка курьером',\r\n      self: 'Самовывоз'\r\n    },\r\n    street: {\r\n      title: 'Улица',\r\n      descr: 'Введите улицу'\r\n    },\r\n    building: {\r\n      title: 'Корп/стр (необязательно)',\r\n      descr: 'Корп/стр'\r\n    },\r\n    house: {\r\n      title: 'Дом',\r\n      descr: 'Дом'\r\n    },\r\n    apartment: {\r\n      title: 'Кв/офис (необязательно)',\r\n      descr: 'Кв/офис'\r\n    },\r\n    deliveryTime: {\r\n      title: 'Время доставки',\r\n      descr: 'Время доставки',\r\n      shippingCost: 'Стоимость доставки'\r\n    },\r\n    payment: {\r\n      title: 'Оплата',\r\n      list: [\r\n        'банковская карта',\r\n        'Наличными',\r\n        'Apple pay',\r\n        'google pay',\r\n        'Криптовалюта',\r\n        'С расчетного счета'\r\n      ]\r\n    },\r\n    promo: {\r\n      title: 'Промокод',\r\n      descr: 'Промокод',\r\n      btn: 'Применить'\r\n    },\r\n    totalAmount: {\r\n      title: 'Общая сумма заказа',\r\n      discount: 'Скидка',\r\n      delivery: 'Доставка'\r\n    },\r\n    btn: 'К оплате',\r\n    text: {\r\n      part1:\r\n        'Нажимая  на кнопку «К Оплате», я даю свое согласие на обработку персональных данных, в соответствии с',\r\n      part2: 'Политикой конфиденциальности',\r\n      part3: ', а так же ознакомлен с условиями оплаты и доставки'\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'оформление заказа'"
                }
            ],
            "src/stories/Breadcrumbs.stories.ts": [
                {
                    "name": "Breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumbs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    links: [\r\n      { title: 'Главная', url: '/main' },\r\n      { title: 'Каталог', url: '/catalog' },\r\n      { title: 'Страница товара' }\r\n    ]\r\n  },\r\n  argTypes: {\r\n    links: {\r\n      description: '{title: string, url?: string}[]'\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumbs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BreadcrumbsComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Breadcrumbs',\r\n  component: BreadcrumbsComponent,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'padded',\r\n    controls: { expanded: true }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        RouterTestingModule.withRoutes([{ path: '**', component: BreadcrumbsComponent }])\r\n      ]\r\n    })\r\n  ]\r\n}"
                }
            ],
            "src/stories/BurgerMenu.stories.ts": [
                {
                    "name": "BurgerMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BurgerMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {}\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BurgerMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BurgerMenuComponent>",
                    "defaultValue": "{\r\n  title: 'Components/BurgerMenu',\r\n  component: BurgerMenuComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 2rem)\">${story}</div>`),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        NgxMaskPipe,\r\n        SearchFormContainerModule,\r\n        IconModule,\r\n        ForEntriesModule,\r\n        RouterTestingModule.withRoutes([{ path: '**', component: BurgerMenuComponent }])\r\n      ],\r\n      providers: [provideNgxMask()]\r\n    })\r\n  ]\r\n}"
                }
            ],
            "src/app/directives/ui/ui-button/ui-button.directive.ts": [
                {
                    "name": "buttonVariantClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\n  '1': 'button-1',\n  '2': 'button-2',\n  '3': 'button-3',\n  '4': 'button-4'\n}"
                }
            ],
            "src/stories/CartButton.stories.ts": [
                {
                    "name": "CartButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    count: 1\n  },\n  argTypes: {\n    count: {\n      control: {\n        type: 'number',\n        min: 0\n      }\n    }\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CartButtonComponent>",
                    "defaultValue": "{\n  title: 'Components/CartButton',\n  component: CartButtonComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, CartButtonModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/store/cart/cart.selectors.ts": [
                {
                    "name": "cartDiscountSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) => {\r\n    return inCart\r\n      ? inCart.reduce(\r\n          (accum, productInCart) =>\r\n            productInCart.count * productInCart.product.price.discount + accum,\r\n          0\r\n        )\r\n      : 0;\r\n  }\r\n)"
                },
                {
                    "name": "cartErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  cartSelector,\r\n  (state: IState) => state.error\r\n)"
                },
                {
                    "name": "cartLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  cartSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "cartPostingErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['postError']>(\r\n  cartSelector,\r\n  (state: IState) => state.error\r\n)"
                },
                {
                    "name": "cartPostLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['isPostLoading']>(\r\n  cartSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "cartPriceSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) => {\r\n    return inCart\r\n      ? inCart.reduce(\r\n          (accum, productInCart) =>\r\n            productInCart.count *\r\n              (productInCart.product.price.value - productInCart.product.price.discount) +\r\n            accum,\r\n          0\r\n        )\r\n      : 0;\r\n  }\r\n)"
                },
                {
                    "name": "cartSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('cart')"
                },
                {
                    "name": "countInCartSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['inCart'], number>(\r\n  cartSelector,\r\n  inCartSelector,\r\n  (_, inCart: IState['inCart']) =>\r\n    inCart ? inCart.reduce((accum, productInCart) => productInCart.count + accum, 0) : 0\r\n)"
                },
                {
                    "name": "inCartSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['inCart']>(\r\n  cartSelector,\r\n  (state: IState) => state.inCart\r\n)"
                }
            ],
            "src/stories/CartMenu.stories.ts": [
                {
                    "name": "CartMenuEmpty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                },
                {
                    "name": "CartMenuOffersLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOfferProductsLoading: true\n  }\n}"
                },
                {
                    "name": "CartMenuWithOffers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    offerProducts: [getMockProduct({ id: 1 }), getMockProduct({ id: 2 }), getMockProduct({ id: 3 })]\n  }\n}"
                },
                {
                    "name": "CartMenuWithProducts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    inCartProducts: [\n      { count: 3, product: getMockProduct({ id: 1 }) },\n      { count: 2, product: getMockProduct({ id: 2 }) },\n      { count: 1, product: getMockProduct({ id: 3 }) },\n      { count: 4, product: getMockProduct({ id: 4 }) },\n      { count: 2, product: getMockProduct({ id: 5 }) },\n      { count: 1, product: getMockProduct({ id: 6 }) },\n      { count: 5, product: getMockProduct({ id: 7 }) }\n    ],\n    cartPrice: 10000\n  }\n}"
                },
                {
                    "name": "CartMenuWithProductsAndOffers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    inCartProducts: [\n      { count: 3, product: getMockProduct({ id: 1 }) },\n      { count: 2, product: getMockProduct({ id: 2 }) },\n      { count: 1, product: getMockProduct({ id: 3 }) },\n      { count: 4, product: getMockProduct({ id: 4 }) },\n      { count: 2, product: getMockProduct({ id: 5 }) },\n      { count: 1, product: getMockProduct({ id: 6 }) },\n      { count: 5, product: getMockProduct({ id: 7 }) }\n    ],\n    cartPrice: 5000,\n    offerProducts: [getMockProduct({ id: 1 }), getMockProduct({ id: 2 }), getMockProduct({ id: 3 })]\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CartMenuComponent>",
                    "defaultValue": "{\n  title: 'Components/CartMenu',\n  component: CartMenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 3rem)\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ProductItemModule,\n        UiButtonModule,\n        LoaderModule,\n        BrowserAnimationsModule,\n        RouterTestingModule.withRoutes([{ path: '**', component: CartMenuComponent }])\n      ]\n    })\n  ]\n}"
                }
            ],
            "src/app/store/cart/cart.reducer.ts": [
                {
                    "name": "cartReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(postProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    postError: payload.error\r\n  })),\r\n  on(postChangeCountAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postChangeCountSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(postChangeCountErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(deleteProductAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(deleteProductSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    inCart: payload.inCart,\r\n    isLoading: false\r\n  })),\r\n  on(deleteProductErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
                },
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'cart'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  inCart: [],\r\n  isLoading: false,\r\n  isPostLoading: false,\r\n  error: null,\r\n  postError: null\r\n}"
                }
            ],
            "src/app/page-components/shared/footer/data/index.ts": [
                {
                    "name": "catalog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/page-components/shared/footer/data/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'Каталог',\r\n  categories: categories.slice(0, 11)\r\n}"
                },
                {
                    "name": "footer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/page-components/shared/footer/data/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  requisites,\r\n  catalog,\r\n  nav: {\r\n    delivery: routes.delivery,\r\n    about: routes.about,\r\n    faq: routes.faq,\r\n    contacts: routes.contacts,\r\n    corporateClients: {\r\n      title: 'Для корпоративных клиентов',\r\n      url: 'corporate-clients'\r\n    }\r\n  },\r\n  contactsBlock\r\n}"
                },
                {
                    "name": "requisites",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/page-components/shared/footer/data/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'реквизиты',\r\n  descr:\r\n    'ООО «Ловефлове» 220035, Республика Беларусь, г. Минск, ул. Тимирязева д. 67, комн. 112 (пом.11) УНП 193263781, р/с BY55MTBK30120001093300096372 ЗАО «МТБанк», БИК MTBKBY22 220007, г. Минск, улица Толстого'\r\n}"
                }
            ],
            "src/data/product.ts": [
                {
                    "name": "categories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.gypsophila],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.gypsophila]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.chamomile],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.chamomile]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.chrysanthemum],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.chrysanthemum]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.indoor],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.indoor]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.mono],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.mono]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.compositions],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.compositions]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.holiday],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.holiday]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.envelope],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.envelope]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.postcards],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.postcards]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.gifts],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.gifts]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.driedFlowers],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.driedFlowers]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.balloon],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.balloon]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.popular],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.popular]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.roses],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.roses]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.funeral],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.funeral]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.packaging],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.packaging]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.wedding],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.wedding]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.interior],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.interior]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.autumn],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.autumn]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.individual],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.individual]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.prefabricated],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.prefabricated]\r\n  },\r\n  {\r\n    title: CATEGORY_NAME[EnumCategories.additionally],\r\n    paramValue: CATEGORY_PARAMS[EnumCategories.additionally]\r\n  }\r\n]"
                },
                {
                    "name": "categoriesIndex",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, number>",
                    "defaultValue": "{}"
                }
            ],
            "src/types/product.ts": [
                {
                    "name": "CATEGORY_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumCategories.gypsophila]: 'Букеты из гипсофил',\r\n  [EnumCategories.chamomile]: 'Букеты из ромашек',\r\n  [EnumCategories.chrysanthemum]: 'Букеты из хризантем',\r\n  [EnumCategories.indoor]: 'Комнатные цветы в горшках',\r\n  [EnumCategories.mono]: 'Монобукеты',\r\n  [EnumCategories.holiday]: 'Букеты на праздник',\r\n  [EnumCategories.compositions]: 'Композиции из букетов',\r\n  [EnumCategories.envelope]: 'Конверты',\r\n  [EnumCategories.postcards]: 'Откытки',\r\n  [EnumCategories.gifts]: 'Подарки',\r\n  [EnumCategories.driedFlowers]: 'Букеты из сухоцветов',\r\n  [EnumCategories.balloon]: 'Шары',\r\n  [EnumCategories.popular]: 'Популярное',\r\n  [EnumCategories.roses]: 'Букеты роз',\r\n  [EnumCategories.funeral]: 'Цветы на похороны',\r\n  [EnumCategories.packaging]: 'Упаковка подарков',\r\n  [EnumCategories.wedding]: 'Свдебные',\r\n  [EnumCategories.interior]: 'Интерьерные композиции',\r\n  [EnumCategories.individual]: 'Индивидуальный букет',\r\n  [EnumCategories.additionally]: 'Дополнительно',\r\n  [EnumCategories.autumn]: 'Осенние',\r\n  [EnumCategories.prefabricated]: 'Сборные'\r\n}"
                },
                {
                    "name": "CATEGORY_PARAMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumCategories.gypsophila]: 'gypsophila',\r\n  [EnumCategories.chamomile]: 'chamomile',\r\n  [EnumCategories.chrysanthemum]: 'chrysanthemum',\r\n  [EnumCategories.indoor]: 'indoor',\r\n  [EnumCategories.mono]: 'mono',\r\n  [EnumCategories.holiday]: 'holiday',\r\n  [EnumCategories.compositions]: 'compositions',\r\n  [EnumCategories.envelope]: 'envelope',\r\n  [EnumCategories.postcards]: 'postcards',\r\n  [EnumCategories.gifts]: 'gifts',\r\n  [EnumCategories.driedFlowers]: 'driedFlowers',\r\n  [EnumCategories.balloon]: 'balloon',\r\n  [EnumCategories.popular]: 'popular',\r\n  [EnumCategories.roses]: 'roses',\r\n  [EnumCategories.funeral]: 'funeral',\r\n  [EnumCategories.packaging]: 'packaging',\r\n  [EnumCategories.wedding]: 'wedding',\r\n  [EnumCategories.interior]: 'interior',\r\n  [EnumCategories.individual]: 'individual',\r\n  [EnumCategories.additionally]: 'additionally',\r\n  [EnumCategories.autumn]: 'autumn',\r\n  [EnumCategories.prefabricated]: 'prefabricated'\r\n}"
                },
                {
                    "name": "COLOR_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumColor.white]: 'Белый',\r\n  [EnumColor.yellow]: 'Желтый',\r\n  [EnumColor.green]: 'Зеленый',\r\n  [EnumColor.red]: 'Красный',\r\n  [EnumColor.orange]: 'Оранжевый',\r\n  [EnumColor.pink]: 'Розовый'\r\n}"
                },
                {
                    "name": "COLOR_PARAMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumColor.white]: 'white',\r\n  [EnumColor.yellow]: 'yellow',\r\n  [EnumColor.green]: 'green',\r\n  [EnumColor.red]: 'red',\r\n  [EnumColor.orange]: 'orange',\r\n  [EnumColor.pink]: 'pink'\r\n}"
                },
                {
                    "name": "FLOWER_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumFlower.alstroemeria]: 'Альстромерия',\r\n  [EnumFlower.anthurium]: 'Антуриум',\r\n  [EnumFlower.asparagus]: 'Аспарагус',\r\n  [EnumFlower.astilba]: 'Астильба',\r\n  [EnumFlower.astrance]: 'Астранция'\r\n}"
                },
                {
                    "name": "FLOWER_PARAMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumFlower.alstroemeria]: 'alstroemeria',\r\n  [EnumFlower.anthurium]: 'anthurium',\r\n  [EnumFlower.asparagus]: 'asparagus',\r\n  [EnumFlower.astilba]: 'astilba',\r\n  [EnumFlower.astrance]: 'astrance'\r\n}"
                },
                {
                    "name": "FORMAT_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumFormat.bouquet]: 'Букет',\r\n  [EnumFormat.vase]: 'В вазе',\r\n  [EnumFormat.envelope]: 'В конверте',\r\n  [EnumFormat.basket]: 'В корзине',\r\n  [EnumFormat.hatbox]: 'В шляпной коробке',\r\n  [EnumFormat.box]: 'В ящике'\r\n}"
                },
                {
                    "name": "FORMAT_PARAMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumFormat.bouquet]: 'bouquet',\r\n  [EnumFormat.vase]: 'vase',\r\n  [EnumFormat.envelope]: 'envelope',\r\n  [EnumFormat.basket]: 'basket',\r\n  [EnumFormat.hatbox]: 'hatbox',\r\n  [EnumFormat.box]: 'box'\r\n}"
                },
                {
                    "name": "LIGHT_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumLight.gentle]: 'Нежный',\r\n  [EnumLight.bright]: 'Яркий'\r\n}"
                },
                {
                    "name": "LIGHT_PARAMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumLight.gentle]: 'gentle',\r\n  [EnumLight.bright]: 'bright'\r\n}"
                },
                {
                    "name": "PRICE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumPrice.price]: 'цена'\r\n}"
                },
                {
                    "name": "PRODUCT_FEATURE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<const>{\r\n  [EnumProductFeature.price]: 'стоимость',\r\n  [EnumProductFeature.light]: 'по свету',\r\n  [EnumProductFeature.color]: 'по цвету',\r\n  [EnumProductFeature.format]: 'по формату',\r\n  [EnumProductFeature.flower]: 'по цветку'\r\n}"
                }
            ],
            "src/stories/CategoryFilter.stories.ts": [
                {
                    "name": "CategoryFilter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CategoryFilter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    categories: [\n      {\n        title: 'Шары',\n        paramValue: 'balloon'\n      },\n      {\n        title: 'Дополнительно',\n        paramValue: 'additionally'\n      },\n      {\n        title: 'Индивидуальный',\n        paramValue: 'individual'\n      },\n      {\n        title: 'Популряное',\n        paramValue: 'popular'\n      },\n      {\n        title: 'Подарки',\n        paramValue: 'gifts'\n      }\n    ]\n  }\n}"
                },
                {
                    "name": "CategoryFilterWithActiveCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CategoryFilter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    categories: [\n      {\n        title: 'Шары',\n        paramValue: 'balloon'\n      },\n      {\n        title: 'Дополнительно',\n        paramValue: 'additionally'\n      },\n      {\n        title: 'Индивидуальный',\n        paramValue: 'individual'\n      },\n      {\n        title: 'Популряное',\n        paramValue: 'popular'\n      },\n      {\n        title: 'Подарки',\n        paramValue: 'gifts'\n      }\n    ],\n    activeCategories: new Set(['balloon', 'popular'])\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CategoryFilter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategoryFilterComponent>",
                    "defaultValue": "{\n  title: 'Components/CategoryFilter',\n  component: CategoryFilterComponent,\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"height: calc(100vh - 3rem)\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CategoryFilterModule, UiButtonModule]\n    })\n  ]\n}"
                }
            ],
            "src/stories/Checkbox.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelValue: 'Розы',\n    attrValue: 'roses',\n    attrName: 'flower'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n  title: 'Components/Checkbox',\n  component: CheckboxComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CheckboxModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/store/cart/cart.actions.ts": [
                {
                    "name": "clearAllAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Clear All`)"
                },
                {
                    "name": "clearAllErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  Clear All Error`,\r\n  props<ErrorPayload>()\r\n)"
                },
                {
                    "name": "clearAllSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  Clear All Success`,\r\n  props<ClearCartResponsePayload>()\r\n)"
                },
                {
                    "name": "deleteProductAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product`,\r\n  props<DeleteFromCartRequestPayload>()\r\n)"
                },
                {
                    "name": "deleteProductErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product Error`,\r\n  props<ErrorPayload>()\r\n)"
                },
                {
                    "name": "deleteProductSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Delete Product Success`,\r\n  props<DeleteFromCartResponsePayload>()\r\n)"
                },
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Cart]'"
                },
                {
                    "name": "postChangeCountAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Change Count`,\r\n  props<ChangeCountRequestPayload>()\r\n)"
                },
                {
                    "name": "postChangeCountErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  Change Count Error`,\r\n  props<ErrorPayload>()\r\n)"
                },
                {
                    "name": "postChangeCountSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  Change Count Success`,\r\n  props<ChangeCountResponsePayload>()\r\n)"
                },
                {
                    "name": "postProductAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Post Product`,\r\n  props<PostToCartRequestPayload>()\r\n)"
                },
                {
                    "name": "postProductErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Post Product Error`,\r\n  props<ErrorPayload>()\r\n)"
                },
                {
                    "name": "postProductSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Post Product Success`,\r\n  props<PostToCartResponsePayload>()\r\n)"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`)"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/cart/cart.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<CartResponsePayload>()\r\n)"
                }
            ],
            "src/app/pages/product/store/comments/comments.selectors.ts": [
                {
                    "name": "commentErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['postError']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.postError\r\n)"
                },
                {
                    "name": "commentLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['postIsLoading']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.postIsLoading\r\n)"
                },
                {
                    "name": "commentsErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.error\r\n)"
                },
                {
                    "name": "commentsLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.isLoading\r\n)"
                },
                {
                    "name": "commentsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['comments']>(\r\n  commentsStoreSelector,\r\n  (store: IState) => store.comments\r\n)"
                },
                {
                    "name": "commentsStoreSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('comments')"
                }
            ],
            "src/app/pages/product/store/comments/comments.reducer.ts": [
                {
                    "name": "commentsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    comments: payload.comments\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(postAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: true,\r\n    postError: null\r\n  })),\r\n  on(postSuccessAction, (state) => ({\r\n    ...state,\r\n    postIsLoading: false\r\n  })),\r\n  on(postErrorAction, (state, payload) => ({\r\n    ...state,\r\n    postIsLoading: false,\r\n    postError: payload.error\r\n  }))\r\n)"
                },
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'comments'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  comments: null,\r\n  isLoading: false,\r\n  error: null,\r\n  postIsLoading: false,\r\n  postError: null\r\n}"
                }
            ],
            "src/data/contacts.ts": [
                {
                    "name": "contacts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/contacts.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  email: 'zakaz@loverflower.by',\r\n  social: {\r\n    instagram: '#',\r\n    whatsapp: '#'\r\n  },\r\n  phone: '+375291136969'\r\n}"
                }
            ],
            "src/data/contactsBlock.ts": [
                {
                    "name": "contactsBlock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/contactsBlock.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  email: {\r\n    contact: contacts.email,\r\n    descr: 'Доставка 24/7 по договоренности с оператором'\r\n  },\r\n  address,\r\n  social: contacts.social,\r\n  phone: {\r\n    phone: contacts.phone,\r\n    descr: 'заказать звонок'\r\n  }\r\n}"
                }
            ],
            "src/app/store/corporate/corporate.reducer.ts": [
                {
                    "name": "corporateReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
                },
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'corporate'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  isLoading: false,\r\n  error: null\r\n}"
                }
            ],
            "src/stories/Counter.stories.ts": [
                {
                    "name": "Counter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    min: 0,\n    max: 5,\n    labelValueA11y: 'Счетчик'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CounterComponent>",
                    "defaultValue": "{\n  title: 'Components/Counter',\n  component: CounterComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, CounterModule]\n    })\n  ]\n}"
                }
            ],
            "src/data/COVIDMessage.ts": [
                {
                    "name": "covidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/COVIDMessage.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  part: `Во время пандемии (COVID-19) компания Lover Flower призывает всех меньше\r\n  контактировать с другими людьми для защиты себя и своих близких. Именно\r\n  поэтому мы организовали`,\r\n  part2: 'БЕСКОНТАКТНУЮ ДОСТАВКУ',\r\n}"
                }
            ],
            "src/app/pages/about-us/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/about-us/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/catalog/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/catalog/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/contacts/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/contacts/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/corporate-clients/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/corporate-clients/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/delivery-payment/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/delivery-payment/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/faq/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/faq/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/main/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/main/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/not-found/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/not-found/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/order/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/order-successful/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order-successful/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/product/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/pages/searching-results/data/meta.ts": [
                {
                    "name": "description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/searching-results/data/meta.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`Заказ букетов на сайте компании Lower Flower – это:\r\nвыбор оттенков и сортов цветков в любое время года,\r\nотправка фото готовой композиции перед отправкой,\r\nвозможность заказать цветы с доставкой в течение часа,\r\nвыгодные цены – на сайте только те варианты, что Вы сможете купить,\r\nполная конфиденциальность по заказу,\r\nмы подбираем открытку, воздушные шар, подарок по Вашему желанию,\r\nв нашем уютном цветочном магазине цветы, которые приятно дарить.`"
                }
            ],
            "src/app/animations/enter-leave-animation.ts": [
                {
                    "name": "enterLeaveAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/animations/enter-leave-animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('enterLeaveAnimation', [\r\n  transition(':enter', [style({ opacity: '0' }), animate('0.3s', style({ opacity: '1' }))]),\r\n  transition(':leave', [\r\n    style({ transform: 'translateX(0)' }),\r\n    animate('0.3s', style({ transform: 'translateX(200%)' }))\r\n  ])\r\n])"
                }
            ],
            "src/app/store/app/app.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[App]'"
                },
                {
                    "name": "startedAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} started`)"
                }
            ],
            "src/app/store/corporate/corporate.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Corporate]'"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`, props<ICorporateUser>())"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Success`)"
                }
            ],
            "src/app/store/feedback/feedback.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Feedback]'"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`, props<FeedbackRequestPayload>())"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Success`)"
                }
            ],
            "src/app/store/order/order.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Order]'"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`, props<IOrderData>())"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<OrderResponsePayload>()\r\n)"
                }
            ],
            "src/app/store/products/products.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Products]'"
                },
                {
                    "name": "hydrateAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} hydrate`)"
                },
                {
                    "name": "hydrateErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY}  hydrate Error`)"
                },
                {
                    "name": "hydrateSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  hydrate Success`,\r\n  props<{ payload: typeof initialState }>()\r\n)"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`)"
                },
                {
                    "name": "requestCancelAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Cancel`)"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<{ products: Array<IProduct> }>()\r\n)"
                }
            ],
            "src/app/pages/product/store/comments/comments.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Comments]'"
                },
                {
                    "name": "postAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Post`, props<{ data: INewReview }>())"
                },
                {
                    "name": "postErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Post Error`,\r\n  props<{ error: ErrorPayload['error'] }>()\r\n)"
                },
                {
                    "name": "postSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Post Success`)"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`, props<{ id: IProduct['id'] }>())"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request error`,\r\n  props<{ error: ErrorPayload['error'] }>()\r\n)"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/comments/comments.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request success`,\r\n  props<{ comments: IReview[] }>()\r\n)"
                }
            ],
            "src/app/pages/product/store/product/product.actions.ts": [
                {
                    "name": "ENTITY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Product]'"
                },
                {
                    "name": "hydrateAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} hydrate`)"
                },
                {
                    "name": "hydrateErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY}  hydrate Error`)"
                },
                {
                    "name": "hydrateSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY}  hydrate Success`,\r\n  props<{ payload: typeof initialState }>()\r\n)"
                },
                {
                    "name": "noHydrateAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} no hydrate`)"
                },
                {
                    "name": "requestAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request`, props<{ id: IProduct['id'] }>())"
                },
                {
                    "name": "requestCancelAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Cancel`)"
                },
                {
                    "name": "requestErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ENTITY} Request Error`, props<ErrorPayload>())"
                },
                {
                    "name": "requestSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  `${ENTITY} Request Success`,\r\n  props<{ product: IProduct }>()\r\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  api: 'https://prod.example-lover-flowers.com'\n}"
                }
            ],
            "src/environments/environment.staging.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.staging.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  api: 'https://staging.example-lover-flowers.com'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  api: 'https://dev.example-lover-flowers.com'\n}"
                }
            ],
            "src/stories/ErrorBlock.stories.ts": [
                {
                    "name": "ErrorBlock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorBlock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorBlock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ErrorBlockComponent>",
                    "defaultValue": "{\n  title: 'Components/ErrorBlock',\n  component: ErrorBlockComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ErrorBlockModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/animations/expand-animation.ts": [
                {
                    "name": "expandAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/animations/expand-animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('expandAnimation', [\r\n  transition(':enter', [\r\n    style({ height: 0 }),\r\n    animate('0.3s', style({ height: '*' })),\r\n  ]),\r\n  transition(':leave', [\r\n    style({ height: '*' }),\r\n    animate('0.3s', style({ height: 0 })),\r\n  ]),\r\n])"
                }
            ],
            "src/app/animations/fade-animation.ts": [
                {
                    "name": "fadeAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/animations/fade-animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('fadeAnimation', [\r\n  transition(':enter', [\r\n    style({ opacity: '0' }),\r\n    animate('0.3s', style({ opacity: '1' })),\r\n  ]),\r\n  transition(':leave', [\r\n    style({ opacity: '1' }),\r\n    animate('0.3s', style({ opacity: '0' })),\r\n  ]),\r\n])"
                }
            ],
            "src/app/store/feedback/feedback.reducer.ts": [
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'feedback'"
                },
                {
                    "name": "feedbackReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state) => ({\r\n    ...state,\r\n    isLoading: false\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  isLoading: false,\r\n  error: null\r\n}"
                }
            ],
            "src/app/store/notifications/notifications.reducer.ts": [
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'notifications'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  list: []\r\n}"
                },
                {
                    "name": "notificationsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(addAction, (state, payload) => ({\r\n    ...state,\r\n    list: [...state.list, payload.notify]\r\n  })),\r\n  on(removeAction, (state, payload) => ({\r\n    ...state,\r\n    list: state.list.filter((notify: INotifyWithId) => notify.id !== payload.id)\r\n  })),\r\n  on(removeAllAction, (state) => ({\r\n    ...state,\r\n    list: []\r\n  }))\r\n)"
                }
            ],
            "src/app/store/order/order.reducer.ts": [
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'order'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  isLoading: false,\r\n  error: null,\r\n  id: null\r\n}"
                },
                {
                    "name": "orderReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null,\r\n    id: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    id: payload.id\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  }))\r\n)"
                }
            ],
            "src/app/store/products/products.reducer.ts": [
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'products'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  products: [],\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n}"
                },
                {
                    "name": "PRODUCTS_STORE_TRANSFER_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "makeStateKey<IState>('productsStoreTransferKey')"
                },
                {
                    "name": "productsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (state, action) => ({\r\n    ...state,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(requestAction, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    products: payload.products\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n)"
                }
            ],
            "src/app/pages/product/store/product/product.reducer.ts": [
                {
                    "name": "FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'product'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IState",
                    "defaultValue": "{\r\n  product: null,\r\n  isLoading: false,\r\n  error: null,\r\n  isHydrateSuccess: false\r\n}"
                },
                {
                    "name": "PRODUCT_STORE_TRANSFER_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "makeStateKey<IState>('productStoreTransferKey')"
                },
                {
                    "name": "productReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<IState>(\r\n  initialState,\r\n  on(hydrateSuccessAction, (store, action) => ({\r\n    ...store,\r\n    ...action.payload,\r\n    isHydrateSuccess: true\r\n  })),\r\n  on(hydrateErrorAction, (store) => ({\r\n    ...store\r\n  })),\r\n  on(requestAction, (store) => ({\r\n    ...store,\r\n    isLoading: true,\r\n    error: null\r\n  })),\r\n  on(requestSuccessAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    product: payload.product\r\n  })),\r\n  on(requestErrorAction, (state, payload) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: payload.error\r\n  })),\r\n  on(requestCancelAction, (state) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    isHydrateSuccess: false\r\n  }))\r\n)"
                }
            ],
            "src/stories/FeedbackForm.stories.ts": [
                {
                    "name": "FeedbackForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FeedbackForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                },
                {
                    "name": "FeedbackFormSending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FeedbackForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoading: true\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FeedbackForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FeedbackFormComponent>",
                    "defaultValue": "{\n  title: 'Components/FeedbackForm',\n  component: FeedbackFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, FeedbackFormModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/store/feedback/feedback.selectors.ts": [
                {
                    "name": "feedbackLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  feedbackSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "feedbackSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/feedback/feedback.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('feedback')"
                }
            ],
            "src/utils/randomString.ts": [
                {
                    "name": "generateRandomString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/utils/randomString.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): string =>\r\n  Math.random().toString(36).substring(2, 15)"
                }
            ],
            "src/stories/Icon.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    width: 'full',\n    height: 'full',\n    icon: 'phone'\n  },\n  argTypes: {\n    icon: {\n      description: `arrow-curve\n      | arrow-right\n      | cart\n      | handset\n      | instagram\n      | logo\n      | phone\n      | search\n      | whatsapp\n      | flower`\n    },\n    width: {\n      description: 'full',\n      control: {\n        type: 'text'\n      }\n    },\n    height: {\n      description: 'full',\n      control: {\n        type: 'text'\n      }\n    },\n    pathFill: {\n      control: {\n        type: 'color'\n      }\n    },\n    viewBox: {\n      description: 'Example: \"0 0 40 40\"'\n    }\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\n  title: 'Components/Icon',\n  component: IconComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"max-width: 40px;\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, IconModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/tokens/isPlatformBrowser.ts": [
                {
                    "name": "IS_PLATFORM_BROWSER_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tokens/isPlatformBrowser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('isPlatformBrowser', {\r\n  factory: () => isPlatformBrowser\r\n})"
                }
            ],
            "src/app/tokens/isPlatformServer.ts": [
                {
                    "name": "IS_PLATFORM_SERVER_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tokens/isPlatformServer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('isPlatformServer', {\r\n  factory: () => isPlatformServer\r\n})"
                }
            ],
            "src/app/pages/main/data/pageData.ts": [
                {
                    "name": "links",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/main/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  catalog: 'Смотреть каталог'\r\n}"
                },
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/main/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  hero: {\r\n    title: title,\r\n    slogan: 'Создаём для тех, кто ценит свежесть и изящество цветка',\r\n    link: {\r\n      title: 'Смотреть каталог',\r\n      url: routes.catalog.url\r\n    }\r\n  },\r\n  catalog: {\r\n    title: 'Каталог',\r\n    descr: {\r\n      paragraph1: `У нас самый большой выбор цветов, букетов, открыток и подарков.\r\n      Мы всегда поможем вам подобрать букет для вашего события, наш менеджер вас проконсультирует и поможет определиться с выбором`,\r\n      paragraph2: `Ознакомьтесь с нашими разделами каталога`\r\n    },\r\n    cards: {\r\n      flowers: {\r\n        title: 'Цветы',\r\n        categories: ['Сборные букеты', 'Монобукеты', 'Композиции из цветов', 'розы', 'свадебные'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.mono],\r\n            CATEGORY_PARAMS[EnumCategories.roses],\r\n            CATEGORY_PARAMS[EnumCategories.wedding],\r\n            CATEGORY_PARAMS[EnumCategories.prefabricated]\r\n          ]\r\n        }\r\n      },\r\n      readyBouquets: {\r\n        title: 'готовые букеты из сухоцветов',\r\n        categories: ['букеты', 'для интерьера', 'композиции'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.roses],\r\n            CATEGORY_PARAMS[EnumCategories.driedFlowers],\r\n            CATEGORY_PARAMS[EnumCategories.chrysanthemum],\r\n            CATEGORY_PARAMS[EnumCategories.holiday],\r\n            CATEGORY_PARAMS[EnumCategories.interior],\r\n            CATEGORY_PARAMS[EnumCategories.gypsophila],\r\n            CATEGORY_PARAMS[EnumCategories.chamomile],\r\n            CATEGORY_PARAMS[EnumCategories.compositions]\r\n          ]\r\n        }\r\n      },\r\n      additionally: {\r\n        title: 'Дополнительно',\r\n        categories: ['Шары', 'игрушки', 'открытки', 'упаковка'],\r\n        link: {\r\n          title: links.catalog,\r\n          url: routes.catalog.url,\r\n          params: [\r\n            CATEGORY_PARAMS[EnumCategories.additionally],\r\n            CATEGORY_PARAMS[EnumCategories.balloon],\r\n            CATEGORY_PARAMS[EnumCategories.packaging],\r\n            CATEGORY_PARAMS[EnumCategories.postcards]\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  popularBouquets: {\r\n    title: 'Популярные букеты',\r\n    descr: 'Самые любимые композиции наших клиентов',\r\n    link: {\r\n      title: 'Смотреть весь каталог',\r\n      url: routes.catalog.url\r\n    }\r\n  },\r\n  howToOrder: {\r\n    title: 'Как сделать заказ',\r\n    list: [\r\n      {\r\n        title: '1 шаг',\r\n        descr: 'Выберите какие цветы или подарки вы хотите купить'\r\n      },\r\n      {\r\n        title: '2 шаг',\r\n        descr:\r\n          'Оформите заказ, и мы отправим вам подтверждение на электронную почту, а так же менеджер свяжется с вами по телефону или в WhatsApp'\r\n      },\r\n      {\r\n        title: '3 шаг',\r\n        descr:\r\n          'Наши флористы бережно подойдут к созданию букета цветов в самом начале дня или накануне'\r\n      },\r\n      {\r\n        title: '4 шаг',\r\n        descr:\r\n          'Один из наших курьеров или партнёров доставит ваш заказ по указанному адресу. Мы отправим вам сообщение в Whats App как только заказ будет доставлен'\r\n      },\r\n      {\r\n        title: '5 шаг',\r\n        descr:\r\n          'Наслаждайтесь цветами , если вы заказали их для дома или любовью, которой поделились, если вы заказали для друга'\r\n      }\r\n    ]\r\n  },\r\n  specialOccasion: {\r\n    title: 'особенный повод?',\r\n    descr:\r\n      'Мы готовы прийти на помощь и собрать уникальный букет, на любой вкус, бюджет и для любого события по вашему индивидуальному заказу.',\r\n    list: [\r\n      'учтем даже самые изысканные пожелания',\r\n      'подберем свежайшие цветы и сделаем уникальный букет или композицию',\r\n      'оплатить можно при получении или онлайн на сайте'\r\n    ],\r\n    link: 'собрать индивидуальный букет'\r\n  },\r\n  questions: {\r\n    title: 'остались вопросы?',\r\n    descr:\r\n      'Отправьте ваш вопрос, заказ, предложение или жалобу через форму обратной связи, и наш специалист свяжется с вами в течение 15 минут.',\r\n    fields: {\r\n      name: 'Ваше имя',\r\n      phone: '+7(977)777-77-77',\r\n      comment: 'Ваш комментарий'\r\n    },\r\n    btn: 'отправить',\r\n    confidentiality: {\r\n      text: 'Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии с',\r\n      link: 'Политикой конфиденциальности'\r\n    },\r\n    social: contacts.social\r\n  },\r\n  social: {\r\n    title: 'Наши социальные сети',\r\n    contacts\r\n  }\r\n}"
                },
                {
                    "name": "title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/main/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'lover flower'"
                }
            ],
            "src/stories/Loader.stories.ts": [
                {
                    "name": "Loader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoaderComponent>",
                    "defaultValue": "{\n  title: 'Components/Loader',\n  component: LoaderComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, LoaderModule]\n    })\n  ]\n}"
                }
            ],
            "src/app/tokens/localStorage.ts": [
                {
                    "name": "LOCAL_STORAGE_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tokens/localStorage.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('localStorage')"
                }
            ],
            "src/data/routes.ts": [
                {
                    "name": "mainRoute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'Главная',\r\n  url: '/'\r\n}"
                },
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  catalog: {\r\n    title: 'Каталог',\r\n    url: '/catalog'\r\n  },\r\n  delivery: {\r\n    title: 'Доставка и оплата',\r\n    url: '/delivery-payment'\r\n  },\r\n  about: {\r\n    title: 'О нас',\r\n    url: '/about-us'\r\n  },\r\n  contacts: {\r\n    title: 'Контакты',\r\n    url: '/contacts'\r\n  },\r\n  faq: {\r\n    title: 'FAQ',\r\n    url: '/faq'\r\n  }\r\n}"
                }
            ],
            "src/stories/Notifications.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notifications.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationsComponent>",
                    "defaultValue": "{\n  title: 'Components/Notifications',\n  component: NotificationsComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div>${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, NotificationsModule, BrowserAnimationsModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Notifications",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notifications.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    notifications: [\n      {\n        id: '1',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      }\n    ]\n  }\n}"
                },
                {
                    "name": "NotificationsMoreThanTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notifications.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    notifications: [\n      {\n        id: '1',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      },\n      {\n        id: '2',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      },\n      {\n        id: '3',\n        title: 'Заголовок',\n        type: 'warn',\n        text: 'Дополнительное описание оповещения'\n      }\n    ]\n  }\n}"
                }
            ],
            "src/stories/Notify.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notify.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotifyComponent>",
                    "defaultValue": "{\n  title: 'Components/Notify',\n  component: NotifyComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, NotifyModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Notify",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notify.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    notify: {\n      title: 'Заголовок',\n      type: 'warn',\n      text: 'Дополнительное описание оповещения'\n    }\n  }\n}"
                }
            ],
            "src/stories/Price.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Price.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PriceComponent>",
                    "defaultValue": "{\n  title: 'Components/Price',\n  component: PriceComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, PriceModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Price",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Price.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    price: {\n      value: 1500,\n      discount: 0\n    }\n  }\n}"
                },
                {
                    "name": "PriceWithDiscount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Price.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    price: {\n      value: 1500,\n      discount: 500\n    }\n  }\n}"
                }
            ],
            "src/stories/ProductCard.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductCardComponent>",
                    "defaultValue": "{\n  title: 'Components/ProductCard',\n  component: ProductCardComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        UiButtonModule,\n        PriceModule,\n        BadgeModule,\n        ProductBadgeColorModule,\n        ProductBadgeTextModule,\n        ImageUploadStatusModule,\n        NgOptimizedImage,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductCardComponent }])\n      ]\n    })\n  ]\n}"
                },
                {
                    "name": "ProductCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: false, price: { discount: 0, value: 1000 } })\n  }\n}"
                },
                {
                    "name": "ProductCardNew",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: true, price: { discount: 0, value: 1000 } })\n  }\n}"
                },
                {
                    "name": "ProductCardWithDiscount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1, isNew: false, price: { discount: 100, value: 1000 } })\n  }\n}"
                }
            ],
            "src/stories/ProductItem.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductItemComponent>",
                    "defaultValue": "{\n  title: 'Components/ProductItem',\n  component: ProductItemComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        CounterModule,\n        RouterModule,\n        NgOptimizedImage,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductItemComponent }])\n      ]\n    })\n  ]\n}"
                },
                {
                    "name": "ProductItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    product: getMockProduct({ id: 1 }),\n    count: 3\n  },\n  argTypes: {\n    count: {\n      control: { type: 'number', min: 1 }\n    }\n  }\n}"
                }
            ],
            "src/stories/ProductsSlider.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductsSlider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductsSliderComponent>",
                    "defaultValue": "{\n  title: 'Components/ProductsSlider',\n  component: ProductsSliderComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ProductCardModule,\n        SliderModule,\n        IconModule,\n        UiButtonModule,\n        LoaderModule,\n        SlideModule,\n        RouterTestingModule.withRoutes([{ path: '**', component: ProductsSliderComponent }])\n      ]\n    })\n  ]\n}"
                },
                {
                    "name": "ProductsSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductsSlider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    products: [\n      getMockProduct({ id: 1 }),\n      getMockProduct({ id: 2 }),\n      getMockProduct({ id: 3 }),\n      getMockProduct({ id: 4 }),\n      getMockProduct({ id: 5 })\n    ]\n  }\n}"
                },
                {
                    "name": "ProductsSliderLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductsSlider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    products: [],\n    isLoading: true\n  }\n}"
                }
            ],
            "src/stories/PromocodeField.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PromocodeField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PromocodeFieldComponent>",
                    "defaultValue": "{\n  title: 'Components/PromocodeField',\n  component: PromocodeFieldComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, PromocodeFieldModule]\n    })\n  ]\n}"
                },
                {
                    "name": "PromocodeField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PromocodeField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                }
            ],
            "src/stories/RadioButton.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadioButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonComponent>",
                    "defaultValue": "{\n  title: 'Components/RadioButton',\n  component: RadioButtonComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, RadioButtonModule]\n    })\n  ]\n}"
                },
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadioButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelValue: 'Самовывоз',\n    attrName: 'delivery',\n    attrValue: 'pickup'\n  }\n}"
                }
            ],
            "src/stories/Range.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RangeComponent>",
                    "defaultValue": "{\n  title: 'Components/Range',\n  component: RangeComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"width: 300px\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, RangeModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    min: 0,\n    max: 1000,\n    value: { from: 0, to: 1000 },\n    gap: 50\n  }\n}"
                }
            ],
            "src/stories/Rating.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RatingComponent>",
                    "defaultValue": "{\n  title: 'Components/Rating',\n  component: RatingComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, RatingModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Rating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                }
            ],
            "src/stories/Review.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Review.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ReviewComponent>",
                    "defaultValue": "{\n  title: 'Components/Review',\n  component: ReviewComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewModule]\n    })\n  ]\n}"
                },
                {
                    "name": "Review",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Review.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    author: 'John Doe',\n    comment: 'Cool!',\n    rating: 5,\n    createdAt: new Date()\n  }\n}"
                }
            ],
            "src/stories/ReviewForm.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ReviewForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ReviewFormComponent>",
                    "defaultValue": "{\n  title: 'Components/ReviewForm',\n  component: ReviewFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewFormModule]\n    })\n  ]\n}"
                },
                {
                    "name": "ReviewForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ReviewForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                }
            ],
            "src/stories/ReviewList.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ReviewList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ReviewListComponent>",
                    "defaultValue": "{\n  title: 'Components/ReviewList',\n  component: ReviewListComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, ReviewListModule]\n    })\n  ]\n}"
                },
                {
                    "name": "ReviewList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ReviewList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    reviews: [\n      {\n        author: `John Doe`,\n        comment: 'Cool!',\n        rating: 5,\n        createdAt: new Date()\n      },\n      {\n        author: `john's friend`,\n        comment: 'John is right',\n        rating: 4,\n        createdAt: new Date()\n      },\n      {\n        author: `Alexander N.`,\n        comment: 'Absolutly!',\n        rating: 3,\n        createdAt: new Date()\n      }\n    ]\n  }\n}"
                }
            ],
            "src/stories/SearchForm.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchFormComponent>",
                    "defaultValue": "{\n  title: 'Components/SearchForm',\n  component: SearchFormComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"margin: 0 auto\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, SearchFormModule]\n    })\n  ]\n}"
                },
                {
                    "name": "SearchForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                }
            ],
            "src/stories/Sorting.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Sorting.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SortingComponent>",
                    "defaultValue": "{\n  title: 'Components/Sorting',\n  component: SortingComponent,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"width: 300px;\">${story}</div>`),\n    moduleMetadata({\n      imports: [CommonModule, SortingModule]\n    })\n  ]\n}"
                },
                {
                    "name": "SortingDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Sorting.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: OPTIONS\n  },\n  argTypes: {\n    options: {\n      description: `{\n        categoryTitle: string;\n        title: string;\n        sort: 'sort' | 'desc';\n        targetSort: string;\n      }`\n    },\n    defaultTitle: {\n      control: {\n        type: 'text'\n      }\n    },\n    activeOptionIndex: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: OPTIONS.length - 1\n      }\n    }\n  }\n}"
                },
                {
                    "name": "SortingWithActiveOption",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Sorting.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: OPTIONS,\n    activeOptionIndex: 0\n  },\n  argTypes: {\n    options: {\n      description: `{\n        categoryTitle: string;\n        title: string;\n        sort: 'sort' | 'desc';\n        targetSort: string;\n      }`\n    },\n    defaultTitle: {\n      control: {\n        type: 'text'\n      }\n    },\n    activeOptionIndex: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: OPTIONS.length - 1\n      }\n    }\n  }\n}"
                }
            ],
            "src/stories/directives/UiButton.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UiButtonDirective>",
                    "defaultValue": "{\r\n  title: 'Directives/UiButton',\r\n  component: UiButtonDirective,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'centered'\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [UiButtonModule]\r\n    })\r\n  ]\r\n}"
                },
                {
                    "name": "UiButtonDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: ''\r\n  }\r\n}"
                },
                {
                    "name": "UiButtonVariant1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '1'\r\n  }\r\n}"
                },
                {
                    "name": "UiButtonVariant2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '2'\r\n  }\r\n}"
                },
                {
                    "name": "UiButtonVariant3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '3'\r\n  }\r\n}"
                },
                {
                    "name": "UiButtonVariant4",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      variant: args['variant']\r\n    },\r\n    template: '<button [appUiButton]=\"variant\">Button</button>'\r\n  }),\r\n  args: {\r\n    variant: '4'\r\n  }\r\n}"
                }
            ],
            "src/app/store/notifications/notifications.selectors.ts": [
                {
                    "name": "notificationsListSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['list']>(\r\n  notificationsSelector,\r\n  (state: IState) => state.list\r\n)"
                },
                {
                    "name": "notificationsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/notifications/notifications.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>(FEATURE_KEY)"
                }
            ],
            "src/app/containers/sorting-container/data.ts": [
                {
                    "name": "OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/containers/sorting-container/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IOption[]",
                    "defaultValue": "[\r\n  {\r\n    categoryTitle: 'По популярности',\r\n    title: 'Сначала популярные',\r\n    sort: 'desc',\r\n    targetSort: 'rating'\r\n  },\r\n  {\r\n    categoryTitle: 'По популярности',\r\n    title: 'Сначала не популярные',\r\n    sort: 'asc',\r\n    targetSort: 'rating'\r\n  },\r\n  {\r\n    categoryTitle: 'По цене',\r\n    title: 'Сначала дорогие',\r\n    sort: 'desc',\r\n    targetSort: 'price'\r\n  },\r\n  {\r\n    categoryTitle: 'По цене',\r\n    title: 'Сначала дешевые',\r\n    sort: 'asc',\r\n    targetSort: 'price'\r\n  }\r\n]"
                }
            ],
            "src/app/store/order/order.selectors.ts": [
                {
                    "name": "orderLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  orderSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "orderSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/order/order.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>(FEATURE_KEY)"
                }
            ],
            "src/app/guards/order-success.guard.ts": [
                {
                    "name": "orderResolver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/order-success.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResolveFn<number>",
                    "defaultValue": "(route: ActivatedRouteSnapshot) => {\r\n  const orderId = Number(route.paramMap.get('id'));\r\n  return of(orderId);\r\n}"
                }
            ],
            "src/app/components/cart-menu/data.ts": [
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cart-menu/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'Ваша корзина',\r\n  item: {\r\n    btn: 'Удалить',\r\n  },\r\n  other: {\r\n    title: 'Добавьте к заказу',\r\n    total: {\r\n      title: 'Предварительный итог:',\r\n      descr: 'Чтобы узнать стоимость доставки, перейдите к оформлению заказа.',\r\n    },\r\n    item: {\r\n      btn: 'Добавить',\r\n    },\r\n    link: 'Оформить заказ',\r\n  },\r\n}"
                }
            ],
            "src/app/pages/not-found/data/pageData.ts": [
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/not-found/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: {\r\n    part: '4',\r\n    part2: '0',\r\n    part3: '4',\r\n  },\r\n  text: 'ошибка 404',\r\n  text2: 'Упс...такой страницы нет',\r\n  link: 'на главную',\r\n}"
                }
            ],
            "src/app/pages/order-successful/data/pageData.ts": [
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/order-successful/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: {\r\n    part: 'Заказ',\r\n    part2: 'успешно',\r\n    part3: 'оформлен!'\r\n  },\r\n  textOrderNumber: 'Ваш номер заказа –',\r\n  text: 'Спасибо за заказ!',\r\n  text2: 'Скоро с вами свяжется наш специалист.',\r\n  link: 'На главную'\r\n}"
                }
            ],
            "src/app/pages/product/data/pageData.ts": [
                {
                    "name": "pageData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/data/pageData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  composition: 'Состав:',\r\n  categories: 'Категории:',\r\n  tags: 'Метки:',\r\n  toCartBtn: 'В корзину',\r\n  section: {\r\n    additionally: {\r\n      title: 'Дополнительно к заказу:',\r\n      list: [\r\n        {\r\n          title: 'Удобрения для срезанных цветов',\r\n          text: `При указании об этом в пожеланиях к букету, мы приложим пакетик\r\n          удобрения для вас`\r\n        },\r\n        {\r\n          title: 'подпишем открытку',\r\n          text: `В пожеланиях к букету укажите текст, какой хотите разместить и\r\n          выберите на сайте саму открытку`\r\n        },\r\n        {\r\n          title: 'Фото букета перед отправкой',\r\n          text: `В примечании к заказу укажите об этом и мы отправим фото готового\r\n          букета перед доставкой. В праздничные дни в связи с большой\r\n          загруженностью такой возможности нет`\r\n        },\r\n        {\r\n          title: 'Букет-сюрприз',\r\n          text: `Если хотите, чтобы получатель не знал, что ему вручат а также от\r\n          кого, то укажите об этом в примечании к заказу`\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/app/CEO.ts": [
                {
                    "name": "pages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/CEO.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  main: {\r\n    title: `Главная страница ${TITLE}`\r\n  },\r\n  catalog: {\r\n    title: `Каталог ${TITLE}`\r\n  },\r\n  product: {\r\n    title: `Страница товара ${TITLE}`\r\n  },\r\n  searching: {\r\n    title: `Поиск товаров ${TITLE}`\r\n  },\r\n  faq: {\r\n    title: `FAQ ${TITLE}`\r\n  },\r\n  deliveryPayment: {\r\n    title: `Доставка и оплата ${TITLE}`\r\n  },\r\n  aboutUs: {\r\n    title: `О нас ${TITLE}`\r\n  },\r\n  corporateClients: {\r\n    title: `Корпоративным клиентам ${TITLE}`\r\n  },\r\n  contacts: {\r\n    title: `Контакты ${TITLE}`\r\n  },\r\n  notFound: {\r\n    title: `Страница не найдена ${TITLE}`\r\n  },\r\n  order: {\r\n    title: `Оформление заказа ${TITLE}`\r\n  },\r\n  orderSuccess: {\r\n    title: `Заказ оформлен ${TITLE}`\r\n  }\r\n}"
                },
                {
                    "name": "TITLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/CEO.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "' - букеты с доставкой - Lover Flower'"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    },\n    backgrounds: {\n      default: 'main',\n      values: [\n        {\n          name: 'main',\n          value: '#222222'\n        }\n      ]\n    },\n    docs: {\n      page: DocumentationTemplate\n    }\n  },\n  decorators: [\n    moduleMetadata({\n      providers: [\n        {\n          provide: LOCALE_ID,\n          useValue: 'ru'\n        }\n      ]\n    })\n  ]\n}"
                }
            ],
            "src/app/components/product-card/data/index.ts": [
                {
                    "name": "productCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/product-card/data/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  btn: 'В корзину'\r\n}"
                }
            ],
            "src/app/pages/product/store/product/product.selectors.ts": [
                {
                    "name": "productErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.error\r\n)"
                },
                {
                    "name": "productIsHydrateSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<\r\n  IRootState,\r\n  IState,\r\n  IState['isHydrateSuccess']\r\n>(productStoreSelector, (store: IState) => store.isHydrateSuccess)"
                },
                {
                    "name": "productLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.isLoading\r\n)"
                },
                {
                    "name": "productSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['product']>(\r\n  productStoreSelector,\r\n  (store: IState) => store.product\r\n)"
                },
                {
                    "name": "productStoreSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/product/store/product/product.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('product')"
                }
            ],
            "src/app/guards/product.guard.ts": [
                {
                    "name": "productResolver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/product.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResolveFn<>",
                    "defaultValue": "(route: ActivatedRouteSnapshot) => {\r\n  const productContainerService = inject(ProductContainerService);\r\n  const productId = Number(route.paramMap.get('id'));\r\n\r\n  productContainerService.requestProduct(productId);\r\n\r\n  return of(productId);\r\n}"
                }
            ],
            "src/data/fakeBackendData/products.ts": [
                {
                    "name": "products",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/data/fakeBackendData/products.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 995,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Соблазн',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'pink',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 750,\r\n      discount: 80\r\n    },\r\n    categories: ['chamomile', 'envelope', 'popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Розовая симфония',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance'],\r\n    light: 'bright',\r\n    format: 'vase',\r\n    price: {\r\n      value: 870,\r\n      discount: 50\r\n    },\r\n    categories: ['funeral'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Бал цветов',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'white',\r\n    flowers: ['asparagus'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 504,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Улыбка Фортуны',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'green',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'basket',\r\n    price: {\r\n      value: 420,\r\n      discount: 0\r\n    },\r\n    categories: ['gifts'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Цветочный вальс',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'red',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 654,\r\n      discount: 321\r\n    },\r\n    categories: ['chamomile'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Альпийское сияние',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'box',\r\n    price: {\r\n      value: 756,\r\n      discount: 77\r\n    },\r\n    categories: ['holiday'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Вопреки канонам',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'yellow',\r\n    flowers: ['anthurium', 'asparagus'],\r\n    light: 'bright',\r\n    format: 'vase',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['compositions'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Цветочный микрокосмос',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['indoor'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Огненная радуга',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'basket',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Парижский шик',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['packaging'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'pink',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['interior'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['astrance', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'vase',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 16,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'green',\r\n    flowers: ['asparagus'],\r\n    light: 'bright',\r\n    format: 'hatbox',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['popular'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 17,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 18,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 19,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 750,\r\n      discount: 40\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 20,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 500,\r\n      discount: 0\r\n    },\r\n    categories: ['balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 21,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 22,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 700,\r\n      discount: 45\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 23,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 77\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 24,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 777,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 25,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'white',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'bright',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 810,\r\n      discount: 30\r\n    },\r\n    categories: ['additionally'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета',\r\n    isNew: true\r\n  },\r\n  {\r\n    id: 26,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'yellow',\r\n    flowers: ['alstroemeria', 'astilba'],\r\n    light: 'gentle',\r\n    format: 'bouquet',\r\n    price: {\r\n      value: 340,\r\n      discount: 0\r\n    },\r\n    categories: ['additionally', 'balloon'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  },\r\n  {\r\n    id: 27,\r\n    title: 'Рубиновые искры',\r\n    images: {\r\n      main: '/assets/images/flowers/flower-1.jpg',\r\n      other: [\r\n        '/assets/images/flowers/flower-2.jpg',\r\n        '/assets/images/flowers/flower-3.jpg',\r\n        '/assets/images/flowers/flower-2.jpg'\r\n      ]\r\n    },\r\n    color: 'orange',\r\n    flowers: ['alstroemeria', 'anthurium'],\r\n    light: 'bright',\r\n    format: 'basket',\r\n    price: {\r\n      value: 470,\r\n      discount: 30\r\n    },\r\n    categories: ['additionally', 'envelope'],\r\n    rating: 4.5,\r\n    descr: 'Завораживающая глубина ваших чувств передана огненными красками\\n      этого букета'\r\n  }\r\n]"
                }
            ],
            "src/app/store/products/products.selectors.ts": [
                {
                    "name": "productsAllSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['products']>(\r\n  productsSelector,\r\n  (state: IState) => state.products\r\n)"
                },
                {
                    "name": "productsErrorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['error']>(\r\n  productsSelector,\r\n  (state: IState) => state.error\r\n)"
                },
                {
                    "name": "productsIsHydrateSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<\r\n  IRootState,\r\n  IState,\r\n  IState['isHydrateSuccess']\r\n>(productsSelector, (state: IState) => state.isHydrateSuccess)"
                },
                {
                    "name": "productsLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, IState['isLoading']>(\r\n  productsSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "productsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/products/products.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('products')"
                }
            ],
            "src/app/services/promocode/promocode.service.ts": [
                {
                    "name": "PROMOCODE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/promocode/promocode.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  'SALE-10': 100,\n  'SALE-20': 200,\n  SALE: 50\n}"
                }
            ],
            "src/app/store/corporate/corporate.selectors.ts": [
                {
                    "name": "requestLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector<IRootState, IState, boolean>(\r\n  requestSelector,\r\n  (state: IState) => state.isLoading\r\n)"
                },
                {
                    "name": "requestSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/corporate/corporate.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IState>('corporate')"
                }
            ],
            "src/app/store/root.reducer.ts": [
                {
                    "name": "rootReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/root.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<IRootState>",
                    "defaultValue": "{\r\n  [productsStore.FEATURE_KEY]: productsStore.productsReducer,\r\n  [cartStore.FEATURE_KEY]: cartStore.cartReducer,\r\n  [productStore.FEATURE_KEY]: productStore.productReducer,\r\n  [commentsStore.FEATURE_KEY]: commentsStore.commentsReducer,\r\n  [feedbackStore.FEATURE_KEY]: feedbackStore.feedbackReducer,\r\n  [orderStore.FEATURE_KEY]: orderStore.orderReducer,\r\n  [corporateStore.FEATURE_KEY]: corporateStore.corporateReducer,\r\n  [notificationsStore.FEATURE_KEY]: notificationsStore.notificationsReducer\r\n}"
                }
            ],
            "src/app/app.routing.module.ts": [
                {
                    "name": "routerConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExtraOptions",
                    "defaultValue": "{\r\n  anchorScrolling: 'enabled',\r\n  initialNavigation: 'enabledBlocking'\r\n}"
                }
            ],
            "src/app/tokens/window.ts": [
                {
                    "name": "WINDOW_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tokens/window.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('Window')"
                }
            ],
            "src/app/server/browser-api/window.ts": [
                {
                    "name": "windowServer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/server/browser-api/window.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  scrollTo: () => null,\r\n  target: {\r\n    innerWidth: 0,\r\n    innerHeight: 0\r\n  },\r\n  localStorage: {\r\n    getItem: () => null,\r\n    setItem: () => null\r\n  },\r\n  innerWidth: 0,\r\n  innerHeight: 0,\r\n  resize: null,\r\n  addEventListener: (currentTarget: HTMLElement, event: keyof GlobalEventHandlersEventMap) => ({\r\n    type: event,\r\n    currentTarget\r\n  })\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/utils/deepClone.ts": [
                {
                    "name": "deepClone",
                    "file": "src/utils/deepClone.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "target",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isObject",
                    "file": "src/utils/deepClone.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type",
                    "jsdoctags": [
                        {
                            "name": "arg",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/validators/empty.validator.ts": [
                {
                    "name": "empty",
                    "file": "src/app/validators/empty.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/types/guards.ts": [
                {
                    "name": "isArray",
                    "file": "src/types/guards.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Array<>",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFormGroup",
                    "file": "src/types/guards.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "FormGroup",
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNonNull",
                    "file": "src/types/guards.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "NonNullable<T>",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isObject",
                    "file": "src/types/guards.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Record<string | >",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/decorators/pass-query-params.ts": [
                {
                    "name": "PassQueryParams",
                    "file": "src/app/decorators/pass-query-params.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "getRoute",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "getRoute",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/validators/time.validator.ts": [
                {
                    "name": "time",
                    "file": "src/app/validators/time.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/types/product.ts": [
                {
                    "name": "EnumCategories",
                    "childs": [
                        {
                            "name": "gypsophila",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "chamomile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "chrysanthemum",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "indoor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mono",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "prefabricated",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "holiday",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "compositions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "envelope",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "postcards",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "gifts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "driedFlowers",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "balloon",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "popular",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roses",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "funeral",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "packaging",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "wedding",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "autumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "individual",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "additionally",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumColor",
                    "childs": [
                        {
                            "name": "white",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "yellow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "green",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "red",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pink",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumFlower",
                    "childs": [
                        {
                            "name": "alstroemeria",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "anthurium",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "asparagus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "astilba",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "astrance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumFormat",
                    "childs": [
                        {
                            "name": "bouquet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "vase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "envelope",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "basket",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hatbox",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "box",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumLight",
                    "childs": [
                        {
                            "name": "gentle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "bright",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumPrice",
                    "childs": [
                        {
                            "name": "price",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                },
                {
                    "name": "EnumProductFeature",
                    "childs": [
                        {
                            "name": "price",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "light",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "color",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "format",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flower",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/product.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/directives/visibility-by-scroll/visibility-by-scroll.directive.ts": [
                {
                    "name": "Action",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"hidden\" | \"visible\"",
                    "file": "src/app/directives/visibility-by-scroll/visibility-by-scroll.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/types/index.ts": [
                {
                    "name": "AtLeastOne",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/components/checkbox/types.ts": [
                {
                    "name": "AttributeName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/checkbox/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "AttributeValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/checkbox/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "CheckboxState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/components/checkbox/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                },
                {
                    "name": "LabelValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/checkbox/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/directives/ui/ui-button/ui-button.directive.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/services/cart-storage/cart-storage.service.ts": [
                {
                    "name": "Cart",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ICartItem[]",
                    "file": "src/app/services/cart-storage/cart-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 182
                }
            ],
            "src/types/apiPayloads.ts": [
                {
                    "name": "CartResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "ChangeCountRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "ChangeCountResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "ClearCartResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "CommentRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "INewReview",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "CorporateClientsRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ICorporateUser",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "DeleteFromCartRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "DeleteFromCartResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "ErrorPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "FeedbackRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IFeedbackData",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "OrderRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IOrderData",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "OrderResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "PostToCartRequestPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ICartItem",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "PostToCartResponsePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "SuccessPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/types/apiPayloads.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/types/product.ts": [
                {
                    "name": "Categories",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "CategoriesName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "CategoriesParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "ColorName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ColorParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Flower",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FlowerName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "FlowerParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Format",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FormatName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "FormatParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "IsNew",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean | null",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "LightName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "LightParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Price",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "PriceName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ProductFeature",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "ProductFeatureName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ProductImage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "ProductRating",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Rating | RatingNotSet",
                    "file": "src/types/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/sorting/types.ts": [
                {
                    "name": "CategoryTitle",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/sorting/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "Sort",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"asc\" | \"desc\"",
                    "file": "src/app/components/sorting/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/sorting/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/components/filters-form/types.ts": [
                {
                    "name": "CheckboxControlData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean | null",
                    "file": "src/app/components/filters-form/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "TCheckboxesData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Light[] | Color[] | Format[] | Flower[]",
                    "file": "src/app/components/filters-form/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/dropdown/types.ts": [
                {
                    "name": "ContentPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"center\"",
                    "file": "src/app/components/dropdown/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "IsCloseBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"mouseleave\" | null",
                    "file": "src/app/components/dropdown/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Trigger",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"click\" | \"hover\"",
                    "file": "src/app/components/dropdown/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "UiEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "MouseEvent | PointerEvent",
                    "file": "src/app/components/dropdown/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/cart-button/types.ts": [
                {
                    "name": "Count",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number",
                    "file": "src/app/components/cart-button/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 146
                }
            ],
            "src/app/components/products-slider/types.ts": [
                {
                    "name": "CountVisibleSlides",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"4\" | \"3\"",
                    "file": "src/app/components/products-slider/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/category-filter/category-filter.component.ts": [
                {
                    "name": "DataIndex",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/category-filter/category-filter.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/components/rating/types.ts": [
                {
                    "name": "EmitRating",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "NonNullable<Rating | RatingNotSet>",
                    "file": "src/app/components/rating/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "Rating",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number",
                    "file": "src/app/components/rating/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 146
                },
                {
                    "name": "RatingNotSet",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/rating/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 195
                }
            ],
            "src/app/components/icon/types.ts": [
                {
                    "name": "Height",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/icon/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 195
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"arrow-curve\" | \"arrow-right\" | \"cart\" | \"handset\" | \"instagram\" | \"logo\" | \"phone\" | \"search\" | \"whatsapp\" | \"flower\"",
                    "file": "src/app/components/icon/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Width",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/icon/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 195
                }
            ],
            "src/app/components/accordion/types.ts": [
                {
                    "name": "IsOpen",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/components/accordion/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/services/events/keydown/keydown-event.service.ts": [
                {
                    "name": "KeydownKey",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/services/events/keydown/keydown-event.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/components/notify/types.ts": [
                {
                    "name": "NotifyType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"error\" | \"warn\" | \"success\"",
                    "file": "src/app/components/notify/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/services/params/types.ts": [
                {
                    "name": "ObjectExceptRange",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Omit<ICheckboxesGroupData | RangeTarget>",
                    "file": "src/app/services/params/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/types/controlValueAccessor.ts": [
                {
                    "name": "OnChangeCallback",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/types/controlValueAccessor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "OnTouchedCallback",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/types/controlValueAccessor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/pages/order/component/types.ts": [
                {
                    "name": "Payment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"card\" | \"cash\" | \"applePay\" | \"googlePay\" | \"cryptoCurrency\" | \"checkingAccount\"",
                    "file": "src/app/pages/order/component/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/sidebar/types.ts": [
                {
                    "name": "PositionMenu",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "src/app/components/sidebar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/product-card/types.ts": [
                {
                    "name": "ProductCardData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Pick<IProduct | \"id\" | \"title\" | \"images\" | \"price\" | \"isNew\">",
                    "file": "src/app/components/product-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/pages/product/component/types.ts": [
                {
                    "name": "ProductImages",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ProductImage[]",
                    "file": "src/app/pages/product/component/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 182
                }
            ],
            "src/app/components/radio-button/types.ts": [
                {
                    "name": "RadioOnChangeCallback",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "OnChangeCallback<string>",
                    "file": "src/app/components/radio-button/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/components/range/types.ts": [
                {
                    "name": "RangeCallbackOnChange",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "OnChangeCallback<IRangeValue>",
                    "file": "src/app/components/range/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "RangeTarget",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"from\" | \"to\"",
                    "file": "src/app/components/range/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/search-form/types.ts": [
                {
                    "name": "SearchValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/search-form/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/stories/Accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AccordionComponent>",
                    "file": "src/stories/Accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "src/stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Breadcrumbs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BreadcrumbsComponent>",
                    "file": "src/stories/Breadcrumbs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/BurgerMenu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BurgerMenuComponent>",
                    "file": "src/stories/BurgerMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/CartButton.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CartButtonComponent>",
                    "file": "src/stories/CartButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/CartMenu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CartMenuComponent>",
                    "file": "src/stories/CartMenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/CategoryFilter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategoryFilterComponent>",
                    "file": "src/stories/CategoryFilter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "src/stories/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Counter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CounterComponent>",
                    "file": "src/stories/Counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ErrorBlock.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ErrorBlockComponent>",
                    "file": "src/stories/ErrorBlock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/FeedbackForm.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FeedbackFormComponent>",
                    "file": "src/stories/FeedbackForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "src/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Loader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoaderComponent>",
                    "file": "src/stories/Loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Notifications.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationsComponent>",
                    "file": "src/stories/Notifications.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Notify.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotifyComponent>",
                    "file": "src/stories/Notify.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Price.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PriceComponent>",
                    "file": "src/stories/Price.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ProductCard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductCardComponent>",
                    "file": "src/stories/ProductCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ProductItem.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductItemComponent>",
                    "file": "src/stories/ProductItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ProductsSlider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductsSliderComponent>",
                    "file": "src/stories/ProductsSlider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/PromocodeField.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PromocodeFieldComponent>",
                    "file": "src/stories/PromocodeField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/RadioButton.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonComponent>",
                    "file": "src/stories/RadioButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Range.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RangeComponent>",
                    "file": "src/stories/Range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Rating.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RatingComponent>",
                    "file": "src/stories/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Review.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ReviewComponent>",
                    "file": "src/stories/Review.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ReviewForm.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ReviewFormComponent>",
                    "file": "src/stories/ReviewForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ReviewList.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ReviewListComponent>",
                    "file": "src/stories/ReviewList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/SearchForm.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchFormComponent>",
                    "file": "src/stories/SearchForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/Sorting.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SortingComponent<TargetSort>>",
                    "file": "src/stories/Sorting.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/directives/UiButton.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UiButtonDirective>",
                    "file": "src/stories/directives/UiButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/components/tab/types.ts": [
                {
                    "name": "TabActive",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/components/tab/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                },
                {
                    "name": "TabLink",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/tab/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "TabTitle",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/components/tab/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/containers/sorting-container/types.ts": [
                {
                    "name": "TargetSort",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"price\" | \"rating\"",
                    "file": "src/app/containers/sorting-container/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/directives/parallax/types.ts": [
                {
                    "name": "TargetVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"background\" | \"img\"",
                    "file": "src/app/directives/parallax/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/store/cart/cart.reducer.ts": [
                {
                    "name": "TCount",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number",
                    "file": "src/app/store/cart/cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 146
                },
                {
                    "name": "TIsCartLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/cart/cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/store/corporate/corporate.reducer.ts": [
                {
                    "name": "TIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/corporate/corporate.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/store/feedback/feedback.reducer.ts": [
                {
                    "name": "TIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/feedback/feedback.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/store/notifications/notifications.reducer.ts": [
                {
                    "name": "TIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/notifications/notifications.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/store/order/order.reducer.ts": [
                {
                    "name": "TIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/order/order.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/store/products/products.reducer.ts": [
                {
                    "name": "TIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "boolean",
                    "file": "src/app/store/products/products.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 133
                }
            ],
            "src/app/components/slider/slider.component.ts": [
                {
                    "name": "TOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"vertical\" | \"horizontal\"",
                    "file": "src/app/components/slider/slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/CEO.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/CEO.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TITLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/animations/enter-leave-animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "enterLeaveAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/animations/expand-animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "expandAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/animations/fade-animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/accordion/test-host/test-host.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/breadcrumbs/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/breadcrumbs/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBreadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/burger-menu/burger-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BurgerMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cart-button/cart-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cart-menu/cart-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cart-menu/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cart-menu/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEmitAddToCart",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cart-menu/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEmitChangeProductCount",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/category-filter/category-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/category-filter/category-filter.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/components/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dropdown/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IEventHandlerArgs",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/error-block/error-block.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorBlockComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/error-field/error-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-form/feedback-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFeedbackData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/field-wrapper/field-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FieldWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/filters-form/filters-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FiltersFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/filters-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckboxesGroup",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/filters-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckboxesGroupData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/filters-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFiltersData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/filters-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFiltersFormData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/notifications/notifications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/notify/notify.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotifyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/notify/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INotify",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/price/price.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PriceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/price/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPrice",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-card/data/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-card/product-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-item/product-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-list-card/product-list-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/products-slider/products-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/promocode-field/promocode-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PromocodeFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/promocode-field/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPromocodeData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/range/range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/components/range/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRangeValue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/rating/rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/components/review-form/review-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/review-form/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INewReview",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/review-list/review-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/review/review.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/review/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IReview",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-form/search-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/slide/slide.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/57",
                "status": "low"
            },
            {
                "filePath": "src/app/components/sorting/sorting.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SortingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/sorting/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOption",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/cart-menu-container/cart-menu-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartMenuContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/category-filter-container/category-filter-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFilterContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/feedback-form-container/feedback-form-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackFormContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/filters-form-container/filters-form-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FiltersFormContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/notifications-container/notifications-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationsContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/products-offer-container/products-offer-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsOfferContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/promocode-field-container/promocode-field-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PromocodeFieldContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/review-form-container/review-form-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewFormContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/review-list-container/review-list-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewListContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/search-form-container/search-form-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchFormContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/sorting-container/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/sorting-container/sorting-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SortingContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/containers/sorting-container/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISortingParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/decorators/pass-query-params.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "PassQueryParams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/button-scroll/button-scroll.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ButtonScrollDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/button-scroll/test-host/test-host.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/change-route/change-route.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ChangeRouteDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/change-route/test-host/test-host.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/for-entries/for-entries.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ForEntriesDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/for-entries/test-host/test-host.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/image-upload-status/image-upload-status.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ImageUploadStatusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/image-upload-status/test-host/test-host.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/intersection/intersection.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "IntersectionDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/outside-click/outside-click.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutsideClickDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/outside-focus/outside-focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OutsideFocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/parallax/parallax.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ParallaxDirective",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/parallax/parallax.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventHandlerArgs",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/ui/ui-button/ui-button.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonVariantClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/validators/empty.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "EmptyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/visibility-by-scroll/visibility-by-scroll.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VisibilityByScrollDirective",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/order-success.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "orderResolver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/product.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productResolver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/app-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/catalog/catalog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CatalogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/hero/hero.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/how-to-order/how-to-order.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HowToOrderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/popular/popular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/questions-section/questions-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionsSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/social-section/social-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/main/special/special.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpecialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/product/delivery/delivery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/product/reviews/reviews.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/shared/footer/data/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "catalog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/shared/footer/data/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "footer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/shared/footer/data/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requisites",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/shared/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/page-components/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/about-us.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutUsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/catalog-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CatalogContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/component/catalog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CatalogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/catalog/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contacts/contacts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contacts/data/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contacts/data/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contacts/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/corporate-clients/component/corporate-clients.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CorporateClientsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/corporate-clients/component/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICorporateUser",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/corporate-clients/corporate-clients-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CorporateClientsContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/corporate-clients/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/corporate-clients/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/delivery-payment/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/delivery-payment/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/delivery-payment/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/delivery-payment/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/delivery-payment/delivery-payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryPaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/faq/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/faq/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/faq/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "faq",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/faq/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/faq/faq.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FaqComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/component/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "links",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main/main-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/not-found/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/not-found/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order-successful/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order-successful/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order-successful/order-successful.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderSuccessfulComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/component/order.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/component/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAddress",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/component/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDelivery",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/component/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOrderData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/order/order-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/component/product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/data/pageData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/product-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommentsEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentsErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentsLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/comments/comments.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentsStoreSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noHydrateAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestCancelAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCT_STORE_TRANSFER_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productIsHydrateSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product/store/product/product.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productStoreSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/searching-results/component/searching-results.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchingResultsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/searching-results/data/meta.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/searching-results/searching-results-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchingResultsContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/category-name/category-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CategoryNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/get-word/get-word.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "GetWordPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/max-number/max-number.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "MaxNumberPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-badge-color/product-badge-color.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductBadgeColorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-badge-text/product-badge-text.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductBadgeTextPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-color-name/product-color-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductColorNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-features/product-features.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductFeaturesPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-flower-name/product-flower-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductFlowerNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-format-name/product-format-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductFormatNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-light-name/product-light-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductLightNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/product-price-name/product-price-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ProductPriceNamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/server/browser-api/window.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "windowServer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-cart/api-cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiCartService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-comments/api-comments.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiCommentsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-corporate/api-corporate.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiCorporateService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-feedback/api-feedback.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiFeedbackService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-order/api-order.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiOrderService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api/api-product/api-product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiProductService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/app/app.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/cart-storage/cart-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/services/cart-storage/cart-storage.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICartItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/cart/cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/comments/comments.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommentsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/corporate/corporate-clients.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CorporateClientsService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/delivery/delivery.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DeliveryService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/destroyer-subscriptions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DestroyerSubscriptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/keydown/keydown-event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "KeydownEventService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/pointer/pointer-event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PointerEventService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/pointer/pointer-event.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPointerEvent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/pointer/pointer-event.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPointerPosition",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/resize/viewport-size.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ViewportSizeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/resize/viewport-size.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IViewportSizes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/events/scroll/scroll-event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ScrollEventService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/fake/fake-backend/fake-backend.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FakeBackendService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/fake/fake-http-client/fake-http-client.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FakeHttpClientService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/feedback/feedback.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeedbackService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/http/http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/hydration-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HydrationStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/services/notifications/notifications.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/order/order.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrderService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/params/params.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ParamsService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/services/params/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/params/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOptionsConvertParams",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/params/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IQueryParams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/product-container/product-container.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductContainerService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/products-filter/products-filter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsFilterService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/services/products-sorting/products-sorting.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsSortingService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/products/products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/promocode/promocode.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PromocodeService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/promocode/promocode.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROMOCODE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/reviews/reviews.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReviewsService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/services/storage/storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StorageService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/store/store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StoreService",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/services/url-route/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRouteInfo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/url-route/url-route.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UrlRouteService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/services/utils/utils.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UtilsService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/ymaps/ymaps.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "YmapsService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "startedAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app/app.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearAllAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearAllErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearAllSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteProductAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteProductErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteProductSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postChangeCountAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postChangeCountErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postChangeCountSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postProductAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postProductErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postProductSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartEffects",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartDiscountSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartPostingErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartPostLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartPriceSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cartSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "countInCartSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/cart/cart.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inCartSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CorporateEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "corporateReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/corporate/corporate.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeedbackEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedbackReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedbackLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/feedback/feedback.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedbackSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "removeAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "removeAllAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationsEffects",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INotifyWithId",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "notificationsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "notificationsListSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/notifications/notifications.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "notificationsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrderEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "orderReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "orderLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/order/order.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "orderSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hydrateSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestCancelAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCTS_STORE_TRANSFER_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsAllSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsErrorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsIsHydrateSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/products/products.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/root.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRootState",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/root.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rootReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tokens/isPlatformBrowser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IS_PLATFORM_BROWSER_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tokens/isPlatformServer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IS_PLATFORM_SERVER_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tokens/localStorage.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOCAL_STORAGE_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tokens/window.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WINDOW_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/validators/empty.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/validators/time.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "time",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/COVIDMessage.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "covidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/contacts.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contacts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/contactsBlock.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contactsBlock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/fakeBackendData/products.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "products",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categoriesIndex",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/routes.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRouteData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/data/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mainRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/data/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.staging.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accordion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BurgerMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BurgerMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BurgerMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartMenuEmpty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartMenuOffersLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartMenuWithOffers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartMenuWithProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CartMenuWithProductsAndOffers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CartMenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CategoryFilter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CategoryFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CategoryFilter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CategoryFilterWithActiveCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CategoryFilter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Counter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorBlock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorBlock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorBlock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FeedbackForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FeedbackForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FeedbackForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FeedbackFormSending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FeedbackForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notifications.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notifications.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Notifications",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notifications.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotificationsMoreThanTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notify.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notify.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Notify",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Price.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Price.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Price",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Price.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PriceWithDiscount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductCardNew",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductCardWithDiscount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductsSlider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductsSlider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductsSlider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsSliderLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PromocodeField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PromocodeField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PromocodeField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadioButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadioButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Review.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Review.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Review",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ReviewForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ReviewForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReviewForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ReviewList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ReviewList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReviewList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Sorting.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Sorting.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SortingDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Sorting.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SortingWithActiveOption",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiButtonDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiButtonVariant1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiButtonVariant2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiButtonVariant3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/directives/UiButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiButtonVariant4",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/guards.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/guards.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/guards.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isNonNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/guards.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IImages",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPrice",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProduct",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CATEGORY_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CATEGORY_PARAMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COLOR_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COLOR_PARAMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FLOWER_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FLOWER_PARAMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORMAT_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORMAT_PARAMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIGHT_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIGHT_PARAMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRICE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCT_FEATURE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/deepClone.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "deepClone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/deepClone.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/randomString.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateRandomString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}